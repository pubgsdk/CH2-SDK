#pragma once

// Chivalry 2 (1.X) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "TBL_structs.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Classes
//---------------------------------------------------------------------------

// Class TBL.UtilityAI_Action
// 0x0018 (0x0040 - 0x0028)
class UUtilityAI_Action : public UObject
{
public:
	struct FMulticastScriptDelegate                    OnDone;                                                   // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsInProgress;                                            // 0x0038(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsReadyToComplete;                                       // 0x0039(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanInterrupt;                                            // 0x003A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EActionPriorityLevel                               PriorityLevel;                                            // 0x003B(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bLatentAction;                                            // 0x003C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDoNotRestartIfRedecidedUpon;                             // 0x003D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x003E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.UtilityAI_Action"));
		return ptr;
	}


	void TickAction(float DeltaTime, const struct FUtilityAI_Context& C);
	bool ShouldRestartIfRedecidedUpon();
	void SetCanInterrupt(bool bInCanInterrupt);
	void PerformAction(const struct FUtilityAI_Context& C);
	void MarkReadyToFinish();
	void MarkFinished();
	bool IsInProgress();
	bool IsDoneOrCanInterrupt();
	void CompleteAction(const struct FUtilityAI_Context& C);
};


// Class TBL.A_AimFireSiegeEngine
// 0x0040 (0x0080 - 0x0040)
class UA_AimFireSiegeEngine : public UUtilityAI_Action
{
public:
	TWeakObjectPtr<class AAIController>                Controller;                                               // 0x0040(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATBLCharacter>                Character;                                                // 0x0048(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASiegeEngine>                 CurrentSiegeEngine;                                       // 0x0050(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AimEndTime;                                               // 0x0058(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NextRecalculateTime;                                      // 0x005C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   CurrentInput;                                             // 0x0060(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   AimTimeRange;                                             // 0x0068(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      AdjustmentCount;                                          // 0x0070(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsFiring;                                                // 0x0071(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
	struct FTimerHandle                                ActionTimerHandle;                                        // 0x0078(0x0008) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.A_AimFireSiegeEngine"));
		return ptr;
	}


	void TryAim();
	void OnDismount(class ATBLCharacter* Driver, EDismountType DismountType);
	void Fire();
	void EndAction();
};


// Class TBL.A_DismountSiegeEngine
// 0x0018 (0x0058 - 0x0040)
class UA_DismountSiegeEngine : public UUtilityAI_Action
{
public:
	float                                              DismountDelay;                                            // 0x0040(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   DismountDelayVariance;                                    // 0x0044(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FTimerHandle                                DismountTimerHandle;                                      // 0x0050(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.A_DismountSiegeEngine"));
		return ptr;
	}


	void Dismount(const struct FAIDismountData& AIDismountData);
};


// Class TBL.A_EnterCombatWith
// 0x0000 (0x0040 - 0x0040)
class UA_EnterCombatWith : public UUtilityAI_Action
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.A_EnterCombatWith"));
		return ptr;
	}

};


// Class TBL.A_MaintainDistanceFromActor
// 0x0020 (0x0060 - 0x0040)
class UA_MaintainDistanceFromActor : public UUtilityAI_Action
{
public:
	float                                              Distance;                                                 // 0x0040(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SprintDistance;                                           // 0x0044(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSprinting;                                               // 0x0048(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x17];                                      // 0x0049(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.A_MaintainDistanceFromActor"));
		return ptr;
	}

};


// Class TBL.A_SetBlackboardValueToContextTarget
// 0x0008 (0x0048 - 0x0040)
class UA_SetBlackboardValueToContextTarget : public UUtilityAI_Action
{
public:
	struct FName                                       KeyName;                                                  // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.A_SetBlackboardValueToContextTarget"));
		return ptr;
	}

};


// Class TBL.A_UseBatteringRam
// 0x0020 (0x0060 - 0x0040)
class UA_UseBatteringRam : public UUtilityAI_Action
{
public:
	class AAIController*                               Controller;                                               // 0x0040(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class ABatteringRam*                               BatteringRam;                                             // 0x0048(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USiegeMountPoint*                            SiegeMountPoint;                                          // 0x0050(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DesiredChargePercent;                                     // 0x0058(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCharging;                                                // 0x005C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x005D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.A_UseBatteringRam"));
		return ptr;
	}


	void StopCharging();
	void StartCharging();
	void OnDismount(class ATBLCharacter* Driver, EDismountType DismountType);
	void OnChargeUpdated(class ABatteringRam* InBatteringRam, float Charge);
};


// Class TBL.A_UseCharacterMountableActor
// 0x0020 (0x0060 - 0x0040)
class UA_UseCharacterMountableActor : public UUtilityAI_Action
{
public:
	class AAIController*                               Controller;                                               // 0x0040(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class ACharacterMountableActor*                    CharacterMountableActor;                                  // 0x0048(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USiegeMountPoint*                            SiegeMountPoint;                                          // 0x0050(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DesiredChargePercent;                                     // 0x0058(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCharging;                                                // 0x005C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x005D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.A_UseCharacterMountableActor"));
		return ptr;
	}


	void StopCharging();
	void StartCharging();
	void OnDismount(class ATBLCharacter* Driver, EDismountType DismountType);
	void OnChargeUpdated(class ACharacterMountableActor* InCharacterMountableActor, float Charge);
};


// Class TBL.TBLComponent
// 0x0000 (0x0108 - 0x0108)
class UTBLComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLComponent"));
		return ptr;
	}

};


// Class TBL.AbilitiesComponent
// 0x00C8 (0x01D0 - 0x0108)
class UAbilitiesComponent : public UTBLComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0108(0x0018) MISSED OFFSET
	int                                                Version;                                                  // 0x0120(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnAdded;                                                  // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnRemoved;                                                // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInitiated;                                              // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnError;                                                  // 0x0158(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnOnCooldown;                                             // 0x0168(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnTargetMethodFinished;                                   // 0x0178(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<class UAbilitySpec*>                        AbilityGrants;                                            // 0x0188(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FAbilityArray                               Abilities;                                                // 0x0198(0x0018) (CPF_Transient, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	class UAbilitySpec*                                InitiatingAbility;                                        // 0x01B0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bForceReplicated;                                         // 0x01B8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x7];                                       // 0x01B9(0x0007) MISSED OFFSET
	TArray<struct FAbilityErrorInfo>                   PreviousAbilityErrors;                                    // 0x01C0(0x0010) (CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AbilitiesComponent"));
		return ptr;
	}


	struct FResult TerminateAbility(class UAbilitySpec* Spec);
	void SyncServerInitiateAbility(const struct FServerInitiateAbilityParams& Params);
	void ServerTerminateAbility(class UAbilitySpec* AbilitySpec);
	void ServerInitiateAbility(const struct FServerInitiateAbilityParams& Params);
	void ServerCombatStateStartAttack(class UAbilitySpec* AbilitySpec, const struct FCombatStateStartAttack& Params);
	void RemoveInvocationActor(class UAbilitySpec* AbilitySpec, TEnumAsByte<EInvocationScope> Scope, class AActor* Actor);
	void OnInvocationComplete(class AAbilityInvocation* Invocation, class UAbilitySpec* AbilitySpec);
	struct FResult InitiateAbility(class UAbilitySpec* Spec, const struct FAbilityInitiationParams& InitiationParams);
	struct FAbility GetAbility(class UAbilitySpec* Spec);
	void ClientStartTargetMethodCosmetic(class UAbilitySpec* AbilitySpec, int InvocationId, const struct FAbilityInitiationParams& InitiationParams, class UAbilityTargetMethod* TargetMethod);
	void ClientSpamTest(const struct FString& Payload);
	void ClientAbilityInvocationComplete(int InvocationId);
	void ClientAbilityInitiated(const struct FClientAbilityInitiationParams& Params);
	struct FResult CanInitiate(class UAbilitySpec* Spec);
};


// Class TBL.TBLObject
// 0x0018 (0x0040 - 0x0028)
class UTBLObject : public UAssemblyObject
{
public:
	class UTBLObject*                                  Template;                                                 // 0x0028(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLObject"));
		return ptr;
	}

};


// Class TBL.AbilityActivationMethod
// 0x0050 (0x0090 - 0x0040)
class UAbilityActivationMethod : public UTBLObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) MISSED OFFSET
	TArray<class UCondition*>                          InitiatorPrerequisites;                                   // 0x0050(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAction*>                             InitiatorActions;                                         // 0x0060(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bAllowSimultaneousInitiation : 1;                         // 0x0070(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	class UAbilitySpec*                                AbilitySpec;                                              // 0x0078(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                       Initiator;                                                // 0x0080(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AAbilityInvocation>           Invocation;                                               // 0x0088(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AbilityActivationMethod"));
		return ptr;
	}

};


// Class TBL.AbilityConfig
// 0x0570 (0x0618 - 0x00A8)
class UAbilityConfig : public UAssemblyBlueprint
{
public:
	int                                                GlobalXp;                                                 // 0x00A8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	TArray<struct FOnlineClassXp>                      ClassXps;                                                 // 0x00B0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               RewardTokens;                                             // 0x00C0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             AccessGroups;                                             // 0x00D0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              IsLookingDownAngle;                                       // 0x00E0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FakeClientProjectileInterpolateTime;                      // 0x00E4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FakeClientProjectileInterpolateExp;                       // 0x00E8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ParryBoxAngle;                                            // 0x00EC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FDeathRecapLimits                           DeathRecapLimits[0x4];                                    // 0x00F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UFxInstance*/                      DefaultAbilityClass;                                      // 0x0110(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class URewardTable*>                        CookedTreasureTables;                                     // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class URewardTable*                                PlaytimeDropTable;                                        // 0x0128(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 PlaytimeAwardCurve;                                       // 0x0130(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PlaytimeForItem;                                          // 0x0138(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxRecentlyAwardedPlaytime;                               // 0x013C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FProjectileHUDConfig                        ProjectileHUD;                                            // 0x0140(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bDebugSounds;                                             // 0x014C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bMuteServerSounds;                                        // 0x014D(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x014E(0x0002) MISSED OFFSET
	int                                                ChanceToLogAbilityEvents;                                 // 0x0150(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnLimitEndTime;                                         // 0x0154(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLocationBasedDamageModifiers               LocationBasedDamageModifiers;                             // 0x0158(0x000C) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FLocationBasedDamageModifiers               RangedLocationBasedDamageModifiers;                       // 0x0164(0x000C) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              BowAgainstArcherDamageModifier;                           // 0x0170(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SiegeAgainstCatapultDamageModifier;                       // 0x0174(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BlockingArrowDamageModifier;                              // 0x0178(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ThwackTracerLengthPercent;                                // 0x017C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SprintAttackSpeed;                                        // 0x0180(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FFocusSettings                              FocusSettings;                                            // 0x0184(0x000C) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FFocusSettings                              LanceChargeFocusSettings;                                 // 0x0190(0x000C) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FFocusSettings                              HorseSpecialFocusSettings;                                // 0x019C(0x000C) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AInventoryItem*/                   DownedWeapon;                                             // 0x01A8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AInventoryItem*/                   GoreHeadItem;                                             // 0x01B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                        HorseClass;                                               // 0x01B8(0x0028) (CPF_Edit, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                        ArmoredHorseClass;                                        // 0x01E0(0x0028) (CPF_Edit, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                        LTSHudMarkerComponentClass;                               // 0x0208(0x0028) (CPF_Edit, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*UCombatStateSet*/>          CombatStateSets;                                          // 0x0230(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FAimPenaltySettings                         AimPenalty;                                               // 0x0240(0x00E0) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	float                                              ParryBreakDamageModifier;                                 // 0x0320(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ParryBreakNonFatal;                                       // 0x0324(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShouldCooldownRefreshStatesResetCooldowns;               // 0x0325(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0326(0x0002) MISSED OFFSET
	struct FFeintTime                                  FeintTime;                                                // 0x0328(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FFeintMinTime                               FeintMinTime;                                             // 0x0338(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              FeintComboAnimPercentThreshold;                           // 0x0348(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FeintMaxTransitionTargetPercent;                          // 0x034C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FeintEndWindow;                                           // 0x0350(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CounterFeintEndWindow;                                    // 0x0354(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ParryComboTiming;                                         // 0x0358(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RiposteParryWindow;                                       // 0x035C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CancelCooldown;                                           // 0x0360(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ComboCancelTriggerEndWindow;                              // 0x0364(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ComboCancelInputWindow;                                   // 0x0368(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ParryForgivenessWindowTime;                               // 0x036C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ActiveRiposteWindowTime;                                  // 0x0370(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ProjectileCounterWindowTime;                              // 0x0374(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinCounterWindowTime;                                     // 0x0378(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxCounterWindowTime;                                     // 0x037C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CounterSuccessExtendWindowTime;                           // 0x0380(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CounterWindowGapTime;                                     // 0x0384(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadCancelWindow;                                      // 0x0388(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FallingTime;                                              // 0x038C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CanSprintInAirTime;                                       // 0x0390(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RemainInSprintBelowMinSpeedTime;                          // 0x0394(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              KickLowAngle;                                             // 0x0398(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ComboFromBlockedTime;                                     // 0x039C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOnlyClashOnHorseVsHorse;                                 // 0x03A0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseClashCameraAngleCheck;                                // 0x03A1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x2];                                       // 0x03A2(0x0002) MISSED OFFSET
	float                                              MaxClashCameraAngle;                                      // 0x03A4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bScaleRecoveryAnimiation;                                 // 0x03A8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x03A9(0x0003) MISSED OFFSET
	float                                              DamageItemDelayTimeSeconds;                               // 0x03AC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PercentChanceToPlayRootMotionDeathAnimation;              // 0x03B0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PercentChanceToPlayRagdollInsteadOfAnimation;             // 0x03B4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRiposteUsesParriedComboStateOnlyForSlash;                // 0x03B8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x03B9(0x0003) MISSED OFFSET
	struct FStaminaCosts                               StaminaCosts;                                             // 0x03BC(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FStaminaBonus                               StaminaBonus;                                             // 0x03DC(0x0014) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              ParryBreakStamina;                                        // 0x03F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ParryBreakStaminaDelay;                                   // 0x03F4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RevivedStamina;                                           // 0x03F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GlobalStaminaModifier;                                    // 0x03FC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ThrownStaminaModifier;                                    // 0x0400(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ParryReduceStaminaTime;                                   // 0x0404(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ParryReduceStaminaRate;                                   // 0x0408(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ParryDisableStaminaDrainTime;                             // 0x040C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ActiveRiposteBlockedStaminaModifier;                      // 0x0410(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CounterBlockedStaminaModifier;                            // 0x0414(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FDownedSprintStamina                        DownedSprintStamina;                                      // 0x0418(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FBlockingCategoryModifier                   BlockingCategoryStaminaModifier;                          // 0x0428(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FHorseStaminaCosts                          HorseStaminaCosts;                                        // 0x0438(0x0030) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FSpecialItemCharge                          SpecialItemCharge;                                        // 0x0468(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              SpecialAbilityHealingScoreModifier;                       // 0x0490(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	TArray<struct FName>                               AttackNames;                                              // 0x0498(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, unsigned char>                  AttackNamesToIndex;                                       // 0x04A8(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               CombatStateNames;                                         // 0x04F8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, unsigned char>                  CombatStateNamesToIndex;                                  // 0x0508(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               InputActionNames;                                         // 0x0558(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, unsigned char>                  InputActionNameToIndex;                                   // 0x0568(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               CharacterMovementStates;                                  // 0x05B8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, unsigned char>                  CharacterMovementStateToIndex;                            // 0x05C8(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AbilityConfig"));
		return ptr;
	}


	struct FVector GetHorseMomentumBasedScale(class AActor* InitiatorActor, class AActor* TargetActor, const struct FName& AbilityName, class UClass* /*AInventoryItem*/ InventoryItemClass);
	struct FName GetAnimationMontageSection(const struct FName& AbilityName);
	struct FName GetAnimationMontage(const struct FName& AbilityName);
	class UAbilitySpec* GetAbilitySpec(const struct FName& AbilityName);
};


// Class TBL.Action
// 0x0138 (0x0178 - 0x0040)
class UAction : public UTBLObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) MISSED OFFSET
	int                                                Version;                                                  // 0x0050(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UObject>                      Initiator;                                                // 0x0054(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UObject>                      Target;                                                   // 0x005C(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     TargetLocation;                                           // 0x0064(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FActionContext                              Context;                                                  // 0x0070(0x00E8) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0158(0x0008) MISSED OFFSET
	bool                                               bLogEvents;                                               // 0x0160(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0161(0x0003) MISSED OFFSET
	int                                                Flags;                                                    // 0x0164(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0168(0x0008) MISSED OFFSET
	bool                                               bIsComplete;                                              // 0x0170(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0171(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.Action"));
		return ptr;
	}

};


// Class TBL.AbilityCost
// 0x0010 (0x0188 - 0x0178)
class UAbilityCost : public UAction
{
public:
	TArray<class UCondition*>                          Conditions;                                               // 0x0178(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AbilityCost"));
		return ptr;
	}

};


// Class TBL.AbilityInvocation
// 0x01F8 (0x0450 - 0x0258)
class AAbilityInvocation : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0258(0x0018) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnComplete;                                               // 0x0270(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FAbilityInitiationParams                    InitiationParams;                                         // 0x0280(0x0038) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	class AActor*                                      Initiator;                                                // 0x02B8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAbilitySpec*                                InitiatedAbilitySpec;                                     // 0x02C0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                ID;                                                       // 0x02C8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02CC(0x0004) MISSED OFFSET
	class UAbilityInvocationRegistryComponent*         InvocationRegistry;                                       // 0x02D0(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAbilityActivationMethod*                    ActivationMethod;                                         // 0x02D8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAbilityTargetMethod*                        TargetMethod;                                             // 0x02E0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	double                                             CompletionTime;                                           // 0x02E8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bClientComplete;                                          // 0x02F0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bActive;                                                  // 0x02F1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bActivationMethodFinished;                                // 0x02F2(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bTargetMethodFinished;                                    // 0x02F3(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bClientInvocation;                                        // 0x02F4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x02F5(0x0003) MISSED OFFSET
	TArray<struct FTimerHandle>                        AutonomousTimers;                                         // 0x02F8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCleanedUp;                                               // 0x0308(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0309(0x0003) MISSED OFFSET
	int                                                Flags;                                                    // 0x030C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FInvocationComplete                         InvocationEvent;                                          // 0x0310(0x00F8) (CPF_NativeAccessSpecifierPublic)
	struct FName                                       AbilitiesTableRow;                                        // 0x0408(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              InventoryItem;                                            // 0x0410(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AInventoryItem*/                   InventoryItemClass;                                       // 0x0418(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                AttackID;                                                 // 0x0420(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                RandomSeed;                                               // 0x0424(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FInvocationActor>                    InvocationActors;                                         // 0x0428(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPendingCleanup;                                          // 0x0438(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0439(0x0007) MISSED OFFSET
	class UWorld*                                      InitiatorWorld;                                           // 0x0440(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0448(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AbilityInvocation"));
		return ptr;
	}


	void Terminate();
	void RemoveInvocationActor(class AActor* Actor);
	void OnActorDestroyed(class AActor* Actor);
	void FindInvocationActors(const struct FName& ActorName, TArray<class AActor*>* OutActors);
	int FindInvocationActor(class AActor* Actor);
	void AddInvocationActor(const struct FName& ActorName, class AActor* Actor);
};


// Class TBL.AbilityInvocationRegistryComponent
// 0x0058 (0x0160 - 0x0108)
class UAbilityInvocationRegistryComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0108(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AbilityInvocationRegistryComponent"));
		return ptr;
	}


	void ClientTargetMethodEvent(int InvocationId, const struct FName& TargetMethodName, TEnumAsByte<ETargetMethodEvent> Event, const struct FVector& Location, TArray<class AActor*> HitTargets);
	void ClientAbilityError(int InvocationId, const struct FResult& Error);
};


// Class TBL.AbilitySpec
// 0x0060 (0x0108 - 0x00A8)
class UAbilitySpec : public UAssemblyBlueprint
{
public:
	float                                              BlueprintCleanupDelayTime;                                // 0x00A8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	class UAbilityActivationMethod*                    ActivationMethod;                                         // 0x00B0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAbilityTargetMethod*                        TargetMethod;                                             // 0x00B8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FCharacterControlOverTime>           CharacterControl;                                         // 0x00C0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EProjectileSpawnType                               ProjectileSpawnType;                                      // 0x00D0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAimAtCrosshair;                                          // 0x00D1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bInterruptOnDeath;                                        // 0x00D2(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x5];                                       // 0x00D3(0x0005) MISSED OFFSET
	TArray<class UAction*>                             AllActions;                                               // 0x00D8(0x0010) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UCondition*>                          AllConditions;                                            // 0x00E8(0x0010) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAbilityTargetMethod*>                AllTargetMethods;                                         // 0x00F8(0x0010) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AbilitySpec"));
		return ptr;
	}


	void GetAllChildActions(TArray<class UAction*>* outActions);
};


// Class TBL.AbilityTargetMethod
// 0x0178 (0x01B8 - 0x0040)
class UAbilityTargetMethod : public UTBLObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0040(0x0018) MISSED OFFSET
	unsigned char                                      bFinished : 1;                                            // 0x0058(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bUndoActionsOnCancel : 1;                                 // 0x0058(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	TArray<class UCondition*>                          TargetPrerequisites;                                      // 0x0060(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAction*>                             TargetActions;                                            // 0x0070(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAction*>                             TargetBlockedActions;                                     // 0x0080(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       TargetMethodName;                                         // 0x0090(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUnblockable;                                             // 0x0098(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDoParryBoxTrace;                                         // 0x0099(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2];                                       // 0x009A(0x0002) MISSED OFFSET
	int                                                Flags;                                                    // 0x009C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FActionContext                              Context;                                                  // 0x00A0(0x00E8) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	bool                                               bStarted;                                                 // 0x0188(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0189(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       Initiator;                                                // 0x018C(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MultiTargetMethodIndex;                                   // 0x0194(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAbilitySpec*                                AbilitySpec;                                              // 0x0198(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AAbilityInvocation>           Invocation;                                               // 0x01A0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AActor>>               AcquiredTargets;                                          // 0x01A8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AbilityTargetMethod"));
		return ptr;
	}


	void StartCosmetic();
	void StartAutonomous();
	void Start();
	class AAbilityInvocation* GetInvocation();
	struct FString GetContextString();
	void Finish();
	struct FVector ClampTargetLocationToGround(class AActor* InInitiator, const struct FVector& TargetLocation, float MaxRange, bool bTraceComplex, float MaxGroundTraceZAllowance, bool* bHitGround);
	struct FResult CanInitiate();
	void Cancel();
};


// Class TBL.AchievementInstance
// 0x0000 (0x0028 - 0x0028)
class UAchievementInstance : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AchievementInstance"));
		return ptr;
	}

};


// Class TBL.GameSparksAsset
// 0x00C8 (0x00F8 - 0x0030)
class UGameSparksAsset : public UPrimaryDataAsset
{
public:
	struct FText                                       Title;                                                    // 0x0030(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FText                                       Description;                                              // 0x0048(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FString                                     EpicCatalogId;                                            // 0x0060(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     EpicFulfillmentId;                                        // 0x0070(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     XbCatalogId;                                              // 0x0080(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     PSNCatalogId;                                             // 0x0090(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     PSNLegacyCatalogId;                                       // 0x00A0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     PSNLegacyEntitlementId;                                   // 0x00B0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                PriceGold;                                                // 0x00C0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                PriceCrowns;                                              // 0x00C4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                PriceUSDCents;                                            // 0x00C8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                Listing;                                                  // 0x00CC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSinglePurchase;                                          // 0x00D0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanBePurchased;                                          // 0x00D1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanBeListed;                                             // 0x00D2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAlwaysListOnSteam;                                       // 0x00D3(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                GrantGold;                                                // 0x00D4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                GrantCrowns;                                              // 0x00D8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EOnlineStat                                        LevelStat;                                                // 0x00DC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00DD(0x0003) MISSED OFFSET
	int                                                Level;                                                    // 0x00E0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ETBLRarity                                         Rarity;                                                   // 0x00E4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00E5(0x0003) MISSED OFFSET
	struct FString                                     SpecialEvent;                                             // 0x00E8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.GameSparksAsset"));
		return ptr;
	}

};


// Class TBL.Achievement
// 0x0028 (0x0120 - 0x00F8)
class UAchievement : public UGameSparksAsset
{
public:
	bool                                               bRepeatable;                                              // 0x00F8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	int                                                MaxProgress;                                              // 0x00FC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       Group;                                                    // 0x0100(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ERewardPolicy                                      RewardPolicy;                                             // 0x0108(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0109(0x0007) MISSED OFFSET
	TArray<struct FVirtualGoodReward>                  VirtualGoodRewards;                                       // 0x0110(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.Achievement"));
		return ptr;
	}


	struct FText GetTrackedObjectName(class APlayerState* InPlayerState, const struct FAchievementProgress& InAchievement);
};


// Class TBL.AchievementGameModeInstance
// 0x0008 (0x0030 - 0x0028)
class UAchievementGameModeInstance : public UAchievementInstance
{
public:
	TEnumAsByte<EGameModeType>                         GamemodeType;                                             // 0x0028(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AchievementGameModeInstance"));
		return ptr;
	}

};


// Class TBL.AchievementGameModeWin
// 0x0000 (0x0120 - 0x0120)
class UAchievementGameModeWin : public UAchievement
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AchievementGameModeWin"));
		return ptr;
	}

};


// Class TBL.AchievementKill
// 0x0000 (0x0120 - 0x0120)
class UAchievementKill : public UAchievement
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AchievementKill"));
		return ptr;
	}

};


// Class TBL.AchievementLevelWinInstance
// 0x0008 (0x0030 - 0x0028)
class UAchievementLevelWinInstance : public UAchievementInstance
{
public:
	struct FName                                       LevelSetName;                                             // 0x0028(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AchievementLevelWinInstance"));
		return ptr;
	}

};


// Class TBL.AchievementLevelWin
// 0x0000 (0x0120 - 0x0120)
class UAchievementLevelWin : public UAchievement
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AchievementLevelWin"));
		return ptr;
	}

};


// Class TBL.AchievementQuest
// 0x01B0 (0x01D8 - 0x0028)
class UAchievementQuest : public UObject
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0028(0x0040) MISSED OFFSET
	struct FText                                       Title;                                                    // 0x0068(0x0018) (CPF_Edit, CPF_Net, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	struct FText                                       Description;                                              // 0x0080(0x0018) (CPF_Edit, CPF_Net, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	struct FSlateBrush                                 Icon;                                                     // 0x0098(0x0088) (CPF_Edit, CPF_Net, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	struct FSlateBrush                                 Image;                                                    // 0x0120(0x0088) (CPF_Edit, CPF_Net, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	EQuestDifficulty                                   Difficulty;                                               // 0x01A8(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01A9(0x0007) MISSED OFFSET
	class UTBLAchievementTask*                         Task;                                                     // 0x01B0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FQuestReward                                Reward;                                                   // 0x01B8(0x0020) (CPF_Edit, CPF_Net, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AchievementQuest"));
		return ptr;
	}


	void OnTaskProgressUpdated(class UTBLAchievementTask* _Task, float Progress);
	void OnRepTask();
};


// Class TBL.AchievementsList
// 0x0090 (0x0198 - 0x0108)
class UAchievementsList : public UWidget
{
public:
	struct FScriptDelegate                             OnGenerateAchievementEvent;                               // 0x0108(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnFilterAchievementEvent;                                 // 0x0118(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnSortAchievementEvent;                                   // 0x0128(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FName                                       TableRowStyleName;                                        // 0x0138(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLPlayerState*                             PlayerState;                                              // 0x0140(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0148(0x0020) MISSED OFFSET
	TArray<class UAchievementInstance*>                TrackedObjects;                                           // 0x0168(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0178(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AchievementsList"));
		return ptr;
	}


	void UpdateProcessedItems();
	bool OnSortAchievement__DelegateSignature(const struct FAchievementProgress& A, const struct FAchievementProgress& B);
	class UWidget* OnGenerateAchievement__DelegateSignature(const struct FAchievementProgress& Achievement);
	bool OnFilterAchievement__DelegateSignature(const struct FAchievementProgress& Achievement);
	void Initialize(class ATBLPlayerState* InPlayerState);
	int GetProcessedItemsCount();
	struct FAchievementProgress GetProcessedItemAt(int Index);
};


// Class TBL.AchievementWeaponKillInstance
// 0x0010 (0x0038 - 0x0028)
class UAchievementWeaponKillInstance : public UAchievementInstance
{
public:
	class UClass* /*AInventoryItem*/                   WeaponClass;                                              // 0x0028(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EInventoryType                                     ItemClassType;                                            // 0x0030(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AchievementWeaponKillInstance"));
		return ptr;
	}

};


// Class TBL.AchievementWeaponKill
// 0x0000 (0x0120 - 0x0120)
class UAchievementWeaponKill : public UAchievement
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AchievementWeaponKill"));
		return ptr;
	}

};


// Class TBL.AddMovementModifier
// 0x0010 (0x0188 - 0x0178)
class UAddMovementModifier : public UAction
{
public:
	struct FName                                       Modifier;                                                 // 0x0178(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRemove;                                                  // 0x0180(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0181(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AddMovementModifier"));
		return ptr;
	}

};


// Class TBL.ProgressionReward
// 0x0008 (0x0048 - 0x0040)
class UProgressionReward : public UTBLObject
{
public:
	struct FName                                       Name;                                                     // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ProgressionReward"));
		return ptr;
	}

};


// Class TBL.AddRandomItemDrop
// 0x0020 (0x0068 - 0x0048)
class UAddRandomItemDrop : public UProgressionReward
{
public:
	class URewardTable*                                DropTable;                                                // 0x0048(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                AppId;                                                    // 0x0050(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EOnlineItemUnlockType>                 ItemUnlockType;                                           // 0x0054(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	struct FName                                       RewardTokenName;                                          // 0x0058(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                Quantity;                                                 // 0x0060(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AddRandomItemDrop"));
		return ptr;
	}

};


// Class TBL.AIControlHandler
// 0x0078 (0x00A0 - 0x0028)
class UAIControlHandler : public UObject
{
public:
	TArray<struct FInputRequest>                       InputRequestList;                                         // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSet<TWeakObjectPtr<class UObject>>                SprintRequests;                                           // 0x0038(0x0050) (CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	EWeaponAbilitySlotKey                              CurrentAction;                                            // 0x0088(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
	class ATBLCharacter*                               Character;                                                // 0x0090(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UInventory*                                  Inventory;                                                // 0x0098(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AIControlHandler"));
		return ptr;
	}


	void UpdateSprint();
	void UpdateAction();
	bool StopAction(EWeaponAbilitySlotKey Action);
	bool StartAction(EWeaponAbilitySlotKey Action);
	bool RevokeSprint(class UObject* RequestedBy);
	void RevokeAllActionsFromObject(class UObject* RequestedBy);
	bool RevokeAction(EWeaponAbilitySlotKey Action, class UObject* RequestedBy, EInputPriority Priority);
	bool RequestSprint(class UObject* RequestedBy);
	bool RequestAction(EWeaponAbilitySlotKey Action, class UObject* RequestedBy, EInputPriority Priority);
	void OnPossess(class APawn* Pawn);
	void Initialize();
	EWeaponAbilitySlotKey GetWeaponAbilitySlotKey(const struct FName& Name);
	void ClearSprint();
	void ClearActions();
};


// Class TBL.AINavPoint
// 0x0038 (0x02B8 - 0x0280)
class AAINavPoint : public ANavigationObjectBase
{
public:
	TArray<struct FName>                               TagsToAddWhenActivated;                                   // 0x0280(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       AITagsToAddWhenActivated;                                 // 0x0290(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	EFaction                                           Faction;                                                  // 0x02B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsActive;                                                // 0x02B1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x02B2(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AINavPoint"));
		return ptr;
	}


	class UBillboardComponent* K2_GetGoodSprite();
	class UBillboardComponent* K2_GetBadSprite();
	void Deactivate();
	void Activate();
};


// Class TBL.TBLPlayerStart
// 0x0008 (0x0290 - 0x0288)
class ATBLPlayerStart : public APlayerStart
{
public:
	int                                                PrioirtyLevel;                                            // 0x0288(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x028C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPlayerStart"));
		return ptr;
	}


	bool IsValidSpawnFor(class AController* Controller);
};


// Class TBL.AIPlayerStart
// 0x0008 (0x0298 - 0x0290)
class AAIPlayerStart : public ATBLPlayerStart
{
public:
	bool                                               bCanSpawn;                                                // 0x0290(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0291(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AIPlayerStart"));
		return ptr;
	}

};


// Class TBL.AITagSystem
// 0x02A0 (0x02C8 - 0x0028)
class UAITagSystem : public UObject
{
public:
	TMap<class AActor*, struct FAITags>                Tags;                                                     // 0x0028(0x0050) (CPF_NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FAIActorsByTag>   ActorsByTag;                                              // 0x0078(0x0050) (CPF_NativeAccessSpecifierPrivate)
	TMap<TSoftClassPtr<class UClass>, struct FBehaviorSetOverride> InventoryItemBehaviorSets;                                // 0x00C8(0x0050) (CPF_NativeAccessSpecifierPrivate)
	TMap<TSoftClassPtr<class UClass>, struct FBehaviorSetOverride> SiegeEngineBehaviorSets;                                  // 0x0118(0x0050) (CPF_NativeAccessSpecifierPrivate)
	TSet<struct FBehaviorSetOverride>                  ActiveAgathaBehaviorSets;                                 // 0x0168(0x0050) (CPF_NativeAccessSpecifierPrivate)
	TSet<struct FBehaviorSetOverride>                  ActiveMasonBehaviorSets;                                  // 0x01B8(0x0050) (CPF_NativeAccessSpecifierPrivate)
	TSet<struct FBehaviorSetOverride>                  ActiveTenosiaBehaviorSets;                                // 0x0208(0x0050) (CPF_NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FTagBehaviorSetRow> TagBehaviorSets;                                          // 0x0258(0x0050) (CPF_NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                             TagBehaviorTablePath;                                     // 0x02A8(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UDataTable*                                  TagBehaviorTable;                                         // 0x02C0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AITagSystem"));
		return ptr;
	}


	void OnActorKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnActorDestroyed(class AActor* DestroyedActor);
};


// Class TBL.AltWeightsLibrary
// 0x0000 (0x0028 - 0x0028)
class UAltWeightsLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AltWeightsLibrary"));
		return ptr;
	}


	static bool UpdateSkinWeightsOverride(class USkinnedMeshComponent* InComp, const struct FName& InBoneName, struct FAltWeightsState* InOutState);
	static bool SetSkinWeightsOverride(class USkinnedMeshComponent* InComp, const struct FAltWeightsState& InState);
	static bool InitSkinWeightsState(class USkinnedMeshComponent* InComp, struct FAltWeightsState* InState);
	static void InitPawnAltWeightsState(class ACharacter* Char);
	static void ClearAllSkinWeightsOverride(class USkinnedMeshComponent* InComp);
};


// Class TBL.TBLActor
// 0x00B8 (0x0310 - 0x0258)
class ATBLActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0258(0x0010) MISSED OFFSET
	struct FReplicationPredictionState                 PredictionState;                                          // 0x0268(0x0070) (CPF_NativeAccessSpecifierPublic)
	float                                              TimeToWakeUpNetDormancyWhenSubobjectChanges;              // 0x02D8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02DC(0x0004) MISSED OFFSET
	TArray<TSoftObjectPtr<class AActor>>               AIHintLocationList;                                       // 0x02E0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AActor*>                              CachedAIHintLocationList;                                 // 0x02F0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTimerHandle                                WakeUpTimerHandle;                                        // 0x0300(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0308(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLActor"));
		return ptr;
	}


	void WakeUpNetDormancyForSeconds(float Seconds);
	TArray<class AActor*> GetAIHintLocations();
	void FallBackToSleep();
	bool CanBeBaseForCharacterTBL(class APawn* Pawn);
};


// Class TBL.AlwaysOnMusicManager
// 0x00A8 (0x03B8 - 0x0310)
class AAlwaysOnMusicManager : public ATBLActor
{
public:
	class UAkComponent*                                AkComponent;                                              // 0x0310(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EAlwaysOnMusicState                                AlwaysOnMusicState;                                       // 0x0318(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0319(0x0003) MISSED OFFSET
	int                                                SongIndex;                                                // 0x031C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	EAlwaysOnMusicState                                PreviousAlwaysOnMusicState;                               // 0x0320(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               IsMusicPlaying;                                           // 0x0321(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0322(0x0006) MISSED OFFSET
	class UAkAudioEvent*                               MasterMusicPlayEvent;                                     // 0x0328(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               MasterMusicStopEvent;                                     // 0x0330(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               TenosianMusicPlayEvent;                                   // 0x0338(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               TenosianMusicStopEvent;                                   // 0x0340(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               Tier1Event;                                               // 0x0348(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               Tier2Event;                                               // 0x0350(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               Tier3Event;                                               // 0x0358(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               Tier4Event;                                               // 0x0360(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               EndStageTransitionEvent;                                  // 0x0368(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               ObjectiveCompleteEvent;                                   // 0x0370(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0378(0x0020) MISSED OFFSET
	TArray<int>                                        RecentSongs;                                              // 0x0398(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<int>                                        TenosiaRecentSongs;                                       // 0x03A8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AlwaysOnMusicManager"));
		return ptr;
	}


	void SetCurrentMusicState(EAlwaysOnMusicState NewState);
	void OnRep_AlwaysOnMusicState();
	EAlwaysOnMusicState GetCurrentMusicState();
};


// Class TBL.AmbientAnimalInterface
// 0x0000 (0x0028 - 0x0028)
class UAmbientAnimalInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AmbientAnimalInterface"));
		return ptr;
	}


	void RandomizeAnimal();
	void OnAnimalHide();
	void OnAnimalFlee(const struct FVector& StimulusLocation);
};


// Class TBL.AmbientAnimalManager
// 0x0058 (0x0368 - 0x0310)
class AAmbientAnimalManager : public ATBLActor
{
public:
	TArray<struct FAnimalConfig>                       AmbientAnimalList;                                        // 0x0310(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              GeneratingRadius;                                         // 0x0320(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0324(0x0004) MISSED OFFSET
	TArray<class AActor*>                              CachedAmbientAnimalList;                                  // 0x0328(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FFleeData                                   FleeData;                                                 // 0x0338(0x0010) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class USphereComponent*                            SphereComponent;                                          // 0x0348(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAIPerceptionComponent*                      PerceptionComponent;                                      // 0x0350(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AActor*>                              RemainingAmbientAnimalList;                               // 0x0358(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AmbientAnimalManager"));
		return ptr;
	}


	void ReseedAnimalActors();
	void RegenerateAndReseedAnimalActors();
	void PopAnimal(EAnimalPopType Type);
	void OnRep_FleeData();
	void HideAnimals();
	void FleeAnimals(const struct FVector& InstigatorLocation);
};


// Class TBL.AnalyticsUtilitiesLibrary
// 0x0000 (0x0028 - 0x0028)
class UAnalyticsUtilitiesLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AnalyticsUtilitiesLibrary"));
		return ptr;
	}


	static void NotifySocialScreenOpened();
	static void AnalyticsEventOpenedMenuScreen(EAnalyticsMenuScreen Screen);
	static void AnalyticsEventDeveloperMessageClickedUrl(const struct FString& AccountId, const struct FString& URL);
	static void AnalyticsEventClosedMenuScreen(EAnalyticsMenuScreen Screen);
};


// Class TBL.AnimatableImage
// 0x0180 (0x0390 - 0x0210)
class UAnimatableImage : public UImage
{
public:
	struct FSlateBrush                                 TransientBrush;                                           // 0x0210(0x0088) (CPF_Transient, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnOverrideMaterialEvent;                                  // 0x0298(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FName                                       FloatAName;                                               // 0x02A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FloatA;                                                   // 0x02B0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       FloatBName;                                               // 0x02B4(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FloatB;                                                   // 0x02BC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       FloatCName;                                               // 0x02C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FloatC;                                                   // 0x02C8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       FloatDName;                                               // 0x02CC(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FloatD;                                                   // 0x02D4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       FloatEName;                                               // 0x02D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FloatE;                                                   // 0x02E0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       FloatFName;                                               // 0x02E4(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FloatF;                                                   // 0x02EC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       VectorAName;                                              // 0x02F0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                VectorA;                                                  // 0x02F8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       VectorBName;                                              // 0x0308(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                VectorB;                                                  // 0x0310(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       VectorCName;                                              // 0x0320(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                VectorC;                                                  // 0x0328(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       VectorDName;                                              // 0x0338(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                VectorD;                                                  // 0x0340(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       VectorEName;                                              // 0x0350(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                VectorE;                                                  // 0x0358(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       VectorFName;                                              // 0x0368(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                VectorF;                                                  // 0x0370(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                TestStandaloneProperty;                                   // 0x0380(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_Interp, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AnimatableImage"));
		return ptr;
	}


	void SetVectorF(const struct FLinearColor& InVectorF);
	void SetVectorE(const struct FLinearColor& InVectorE);
	void SetVectorD(const struct FLinearColor& InVectorD);
	void SetVectorC(const struct FLinearColor& InVectorC);
	void SetVectorB(const struct FLinearColor& InVectorA);
	void SetVectorA(const struct FLinearColor& InVectorA);
	void SetFloatF(float InFloatF);
	void SetFloatE(float InFloatE);
	void SetFloatD(float InFloatD);
	void SetFloatC(float InFloatC);
	void SetFloatB(float InFloatB);
	void SetFloatA(float InFloatA);
	class UMaterialInterface* OverrideMaterial__DelegateSignature();
};


// Class TBL.AnimatingButton
// 0x06D8 (0x07E0 - 0x0108)
class UAnimatingButton : public UWidget
{
public:
	unsigned char                                      UnknownData00[0x98];                                      // 0x0108(0x0098) MISSED OFFSET
	struct FLinearColor                                ColorAndOpacity;                                          // 0x01A0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FText                                       TextBlockText;                                            // 0x01B0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FTextBlockStyle                             TextBlockStyle;                                           // 0x01C8(0x0270) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FMargin                                     TextBlockMargin;                                          // 0x0438(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<ETextJustify>                          TextBlockJustification;                                   // 0x0448(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0449(0x0003) MISSED OFFSET
	struct FScriptDelegate                             TextBlockTextDelegate;                                    // 0x044C(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnMouseEnterWidgetEvent;                                  // 0x045C(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnMouseLeaveWidgetEvent;                                  // 0x046C(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnMouseClickWidgetEvent;                                  // 0x047C(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnMouseReleaseWidgetEvent;                                // 0x048C(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnMouseDoubleClickWidgetEvent;                            // 0x049C(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnOverrideMaterialEvent;                                  // 0x04AC(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x04BC(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnClicked;                                                // 0x04C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnReleased;                                               // 0x04D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnHovered;                                                // 0x04E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnUnhovered;                                              // 0x04F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDoubleClick;                                            // 0x0500(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<struct FTBLButtonAnimation>                 Animations;                                               // 0x0510(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDoNotReverseHoveredStateUponMouseLeave;                  // 0x0520(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0521(0x0007) MISSED OFFSET
	class UMaterialInterface*                          Material;                                                 // 0x0528(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    MaterialMID;                                              // 0x0530(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x2A8];                                     // 0x0538(0x02A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AnimatingButton"));
		return ptr;
	}


	void SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity);
	void PlayNormalAnimation();
	class UMaterialInstanceDynamic* GetDynamicMaterial();
};


// Class TBL.AnimationSet
// 0x0118 (0x0158 - 0x0040)
class UAnimationSet : public UTBLObject
{
public:
	bool                                               bIsCustomization;                                         // 0x0040(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	struct FString                                     CharacterSet;                                             // 0x0048(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FString                                     WeaponSet;                                                // 0x0058(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFirstPerson;                                             // 0x0068(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	TMap<struct FString, struct FString>               AutoMapAnimations;                                        // 0x0070(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FTracerCacheKey>                     DefaultTracerCacheKeys;                                   // 0x00C0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FTracerCacheKey>                     AdditionalTracerCacheKeys;                                // 0x00D0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                AnimationFPS;                                             // 0x00E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
	TMap<struct FTracerCacheKey, struct FTracerCache>  TracerCache;                                              // 0x00E8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<class UAnimMontage*>                        TracerMontages;                                           // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UAnimSequenceBase*>                   TracerSequences;                                          // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AnimationSet"));
		return ptr;
	}

};


// Class TBL.AnimNotifyState_BattlecryAbility
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_BattlecryAbility : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AnimNotifyState_BattlecryAbility"));
		return ptr;
	}

};


// Class TBL.AnimNotifyState_CameraFollowAnimation
// 0x0008 (0x0038 - 0x0030)
class UAnimNotifyState_CameraFollowAnimation : public UAnimNotifyState
{
public:
	bool                                               bFollowPitch;                                             // 0x0030(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFollowYaw;                                               // 0x0031(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AnimNotifyState_CameraFollowAnimation"));
		return ptr;
	}

};


// Class TBL.AnimNotifyState_DisableCollision
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_DisableCollision : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AnimNotifyState_DisableCollision"));
		return ptr;
	}

};


// Class TBL.AnimNotifyState_DisableRootMotionInAir
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_DisableRootMotionInAir : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AnimNotifyState_DisableRootMotionInAir"));
		return ptr;
	}

};


// Class TBL.AnimNotifyState_EnableRootMotion
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_EnableRootMotion : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AnimNotifyState_EnableRootMotion"));
		return ptr;
	}

};


// Class TBL.AnimNotifyState_EndLadderMovement
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_EndLadderMovement : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AnimNotifyState_EndLadderMovement"));
		return ptr;
	}

};


// Class TBL.AnimNotifyState_PhysicsFlying
// 0x0008 (0x0038 - 0x0030)
class UAnimNotifyState_PhysicsFlying : public UAnimNotifyState
{
public:
	bool                                               bDisableCollision;                                        // 0x0030(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AnimNotifyState_PhysicsFlying"));
		return ptr;
	}

};


// Class TBL.AnimNotifyState_PhysicsFollowGround
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_PhysicsFollowGround : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AnimNotifyState_PhysicsFollowGround"));
		return ptr;
	}

};


// Class TBL.AnimNotifyState_PhysicsSpawn
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_PhysicsSpawn : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AnimNotifyState_PhysicsSpawn"));
		return ptr;
	}

};


// Class TBL.AnimNotifyState_PhysicsVaulting
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_PhysicsVaulting : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AnimNotifyState_PhysicsVaulting"));
		return ptr;
	}

};


// Class TBL.ApplyCondition
// 0x0008 (0x0180 - 0x0178)
class UApplyCondition : public UAction
{
public:
	EConditionType                                     ConditionType;                                            // 0x0178(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0179(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ApplyCondition"));
		return ptr;
	}

};


// Class TBL.ApplyTargetMethod
// 0x0018 (0x0190 - 0x0178)
class UApplyTargetMethod : public UAction
{
public:
	TEnumAsByte<ETargetMethodParameters>               TargetActor;                                              // 0x0178(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0179(0x0007) MISSED OFFSET
	class UAbilityTargetMethod*                        TargetMethod;                                             // 0x0180(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAbilityTargetMethod*                        TargetMethodInstance;                                     // 0x0188(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ApplyTargetMethod"));
		return ptr;
	}


	void OnFinished(class AAbilityInvocation* InInvocation, class UAbilityTargetMethod* InTargetMethod);
};


// Class TBL.TBLGameMode
// 0x0E40 (0x1180 - 0x0340)
class ATBLGameMode : public AGameMode
{
public:
	class UClass* /*UTBLGameModeSettings*/             GameModeSettingsClass;                                    // 0x0340(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*ATBLTeam*/>                 Teams;                                                    // 0x0348(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*ATBLTeam*/                         FFATeam;                                                  // 0x0358(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           AttackingFaction;                                         // 0x0360(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           DefendingFaction;                                         // 0x0361(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0362(0x0006) MISSED OFFSET
	class UClass* /*AHorse*/                           DefaultHorseClass;                                        // 0x0368(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                        BlueprintDebugMenuComponentClass;                         // 0x0370(0x0028) (CPF_Edit, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0398(0x000C) MISSED OFFSET
	float                                              SeamlessTravelEndTime;                                    // 0x03A4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EGameModeType>                         GamemodeType;                                             // 0x03A8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EGameModeType>                         CreateGameModeType;                                       // 0x03A9(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFirstBotMatch;                                           // 0x03AA(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x5];                                       // 0x03AB(0x0005) MISSED OFFSET
	class UClass* /*ATBLGameScoringInfo*/              GameScoringClass;                                         // 0x03B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLGameScoringInfo*                         GameScoringInfo;                                          // 0x03B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLActor*                                   AlwaysOnMusicManager;                                     // 0x03C0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UContextVOManager*                           ContextVOManager;                                         // 0x03C8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*USpawnQueuer*/>             SpawnQueuerClasses;                                       // 0x03D0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class USpawnQueuer*>                        SpawnQueuers;                                             // 0x03E0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayerKilled;                                           // 0x03F0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPawnRevived;                                            // 0x0400(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPawnDowned;                                             // 0x0410(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayerPossessed;                                        // 0x0420(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    CleanupAbilityActors;                                     // 0x0430(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0440(0x0004) MISSED OFFSET
	bool                                               bPerfomedDeferredSpawnThisFrame;                          // 0x0444(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisablePlayerNamePlates;                                 // 0x0445(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOnlyShowNamesOnTeammates;                                // 0x0446(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsFFAGameMode;                                           // 0x0447(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PostGameSlomo;                                            // 0x0448(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHideHudImportantMessages;                                // 0x044C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x044D(0x0003) MISSED OFFSET
	float                                              TimeBetweenLoadoutVolumeUses;                             // 0x0450(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUsePrioritySpawnSettings;                                // 0x0454(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseProximitySpawnSettings;                               // 0x0455(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IgnoreClassLimits;                                        // 0x0456(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x1];                                       // 0x0457(0x0001) MISSED OFFSET
	class UCurveFloat*                                 SecondsBetweenWavesPlayerCountBonus;                      // 0x0458(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*ATBLAIController*/                 AIControllerClass;                                        // 0x0460(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBehaviorTree*                               AIBehaviorTree;                                           // 0x0468(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRespawnStinger                             FirstSpawnSound;                                          // 0x0470(0x0010) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FRespawnStinger                             RespawnSound;                                             // 0x0480(0x0010) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FGuid                                       MatchID;                                                  // 0x0490(0x0010) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bAnalyticsShutdown : 1;                                   // 0x04A0(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x7];                                       // 0x04A1(0x0007) MISSED OFFSET
	TArray<struct FSessionBannedPlayer>                SessionBannedPlayers;                                     // 0x04A8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               BotBackfillEnabled;                                       // 0x04B8(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x3];                                       // 0x04B9(0x0003) MISSED OFFSET
	int                                                BotBackfillLowPlayers;                                    // 0x04BC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                BotBackfillLowBots;                                       // 0x04C0(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                BotBackfillHighPlayers;                                   // 0x04C4(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                BotBackfillHighBots;                                      // 0x04C8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              IdleKickTimerSpectate;                                    // 0x04CC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              IdleKickTimerDisconnect;                                  // 0x04D0(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseOpenLoadout;                                          // 0x04D4(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRespawnImmediately;                                      // 0x04D5(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bLoggingAbilityEvents;                                    // 0x04D6(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x9];                                       // 0x04D7(0x0009) MISSED OFFSET
	class AActor*                                      OverrideAIObjective;                                      // 0x04E0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMatchComplete                              MatchCompleteEvent;                                       // 0x04E8(0x0138) (CPF_NativeAccessSpecifierPublic)
	struct FServerPerformanceHistory                   ServerPerformanceHistory;                                 // 0x0620(0x0198) (CPF_NativeAccessSpecifierPublic)
	TArray<class AGameModeModifier*>                   GameModeModifiers;                                        // 0x07B8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class ATBLPlayerController*>                DebugDrawAllTracers;                                      // 0x07C8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnControllerLogout;                                       // 0x07D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              AutoBalanceGracePeriodSeconds;                            // 0x07E8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                AutoBalanceGracePeriodAllowedImbalance;                   // 0x07EC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x8];                                       // 0x07F0(0x0008) MISSED OFFSET
	bool                                               bEnableAutoDemoRecording;                                 // 0x07F8(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsAITestMap;                                             // 0x07F9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x6];                                       // 0x07FA(0x0006) MISSED OFFSET
	TArray<struct FString>                             Maplist;                                                  // 0x0800(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseMaplist;                                              // 0x0810(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0811(0x0003) MISSED OFFSET
	int                                                PostMatchTime;                                            // 0x0814(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FString                                     ServerName;                                               // 0x0818(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FString                                     ServerIdentifier;                                         // 0x0828(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MapListIndex;                                             // 0x0838(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x4];                                       // 0x083C(0x0004) MISSED OFFSET
	TArray<struct FClassLimitStruct>                   ClassLimits;                                              // 0x0840(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               AutoBalancePlayersByTeamNumbers;                          // 0x0850(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               AutoBalancePlayersByKills;                                // 0x0851(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x2];                                       // 0x0852(0x0002) MISSED OFFSET
	int                                                TimeBetweenTeamKillBalanceChecks;                         // 0x0854(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                TimeBetweenPlayerNumBalanceChecks;                        // 0x0858(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                StartOfMatchGracePeriodForAutoBalance;                    // 0x085C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                StartOfMatchGracePeriodForTeamSwitching;                  // 0x0860(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinimumKillsModifierForAutoBalance;                       // 0x0864(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AutoBalanceKillRelevancyTime;                             // 0x0868(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AutoBalanceKillThreshold;                                 // 0x086C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                AutoBalanceTimeUntilForcedRespawn;                        // 0x0870(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSpectatorsCannotSendToAllChat;                           // 0x0874(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bClientSideWeaponTracers;                                 // 0x0875(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x2];                                       // 0x0876(0x0002) MISSED OFFSET
	float                                              TimeEnteredWaitingToStart;                                // 0x0878(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MinPlayers;                                               // 0x087C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DesiredPlayersToStartPercentage;                          // 0x0880(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinTimeBeforeStartingMatch;                               // 0x0884(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxTimeBeforeStartingMatch;                               // 0x0888(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bManuallyStartMatch;                                      // 0x088C(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUsePrepareMatchTimer;                                    // 0x088D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x2];                                       // 0x088E(0x0002) MISSED OFFSET
	float                                              PrepareMatchDuration;                                     // 0x0890(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0x4];                                       // 0x0894(0x0004) MISSED OFFSET
	struct FTimerHandle                                PrepareMatchTimerHandle;                                  // 0x0898(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                        GameModeWidgetClass;                                      // 0x08A0(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              EpilogueDuration;                                         // 0x08C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x4];                                       // 0x08CC(0x0004) MISSED OFFSET
	TArray<struct FTeamBalanceConfig>                  TeamBalanceOptions;                                       // 0x08D0(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FTeamBalanceConfig>                  AutoBalanceOptions;                                       // 0x08E0(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FAutoBalancePlayerSwappingPriorityConfig> AutoBalancePlayerPriorityConfig;                          // 0x08F0(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTeamImbalanceTracker                       TeamImbalanceTracker;                                     // 0x0900(0x00A8) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               BlockVoteKicking;                                         // 0x09A8(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EFaction                                           Victor;                                                   // 0x09A9(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData18[0x6];                                       // 0x09AA(0x0006) MISSED OFFSET
	TArray<struct FPendingSpawn>                       PendingPlayerSpawnQueue;                                  // 0x09B0(0x0010) (CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              LastPlayerSpawnTime;                                      // 0x09C0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData19[0x4];                                       // 0x09C4(0x0004) MISSED OFFSET
	TArray<struct FOccupiedPlayerStart>                OccupiedPlayerStarts;                                     // 0x09C8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData20[0x48];                                      // 0x09D8(0x0048) MISSED OFFSET
	int                                                ConfigWarmupTime;                                         // 0x0A20(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData21[0xC];                                       // 0x0A24(0x000C) MISSED OFFSET
	class UBehaviorTree*                               OverrideAIBehaviorTree;                                   // 0x0A30(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData22[0x28];                                      // 0x0A38(0x0028) MISSED OFFSET
	TArray<int>                                        GoldAwardByTeamPlacement;                                 // 0x0A60(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                GoldAwardTimePeriod;                                      // 0x0A70(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData23[0x4];                                       // 0x0A74(0x0004) MISSED OFFSET
	TArray<float>                                      GoldMultiplierByDailyHour;                                // 0x0A78(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	double                                             GoldMultiplierByDailyHourTimeDilation;                    // 0x0A88(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                GoldAwardByTimePeriodAmount;                              // 0x0A90(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              GameModeXPMultiplier;                                     // 0x0A94(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData24[0x208];                                     // 0x0A98(0x0208) MISSED OFFSET
	EPostMatchMatchmakingMode                          PostMatchMatchmakingMode;                                 // 0x0CA0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData25[0x3];                                       // 0x0A98(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData26[0x4];                                       // 0x0CA4(0x0004) MISSED OFFSET
	struct FString                                     PostMatchTravelString;                                    // 0x0CA8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bReadyToPostMatchTravel;                                  // 0x0CB8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData27[0xF];                                       // 0x0CB9(0x000F) MISSED OFFSET
	class AGameServerQuery*                            GameServerQuery;                                          // 0x0CC8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData28[0x440];                                     // 0x0CD0(0x0440) MISSED OFFSET
	TMap<class ATBLPlayerState*, EFaction>             FriendsByFaction;                                         // 0x1110(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData29[0x8];                                       // 0x1160(0x0008) MISSED OFFSET
	bool                                               AutoBalanceWithFriendsBlocked;                            // 0x1168(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData30[0x17];                                      // 0x1169(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameMode"));
		return ptr;
	}


	void UpdatePS5MatchResponsibility(class APlayerController* ExcludePlayer);
	void UpdateBotBackfill(int NewNumPlayers);
	void TBSSkipStage();
	void TBSSetUseMapList(bool UseMapList);
	void TBSSetStageTime(float TimeMinutes);
	void TBSModifyTeamScore(int TeamId, int Score);
	void TBSManuallyStartGame();
	void TBSEndWarmup();
	void TBSEndGame(int WinningTeam);
	void Slomo(float T);
	void SetPS5MatchResponsiblePlayer(class ATBLPlayerState* NewPlayerState);
	void SetPS5MatchId(const struct FString& NewPS5MatchId);
	void RemoveSessionBan(const struct FSessionBannedPlayer& BannedPlayer);
	void RemoveBots(bool bRemoveLevelBots, bool bRemoveBackfillBots);
	bool PlayerRequestNewTeam(class AController* Controller, class ATBLTeam* Team, bool bImmediatelySwitch);
	bool PlayerRequestBeginSpectating(class AController* Controller);
	void PlayerReadyToSpawn(class USpawnQueuer* SpawnQueuer, class AController* Player, class ASpawner* Spawner);
	void PerformDeferredSpawnRequest(const struct FPendingSpawn& DeferredSpawn);
	void PerformAutoBalancePriorToGameStart();
	void OverrideAIBehavior(const struct FString& BehaviorTreeName);
	void OnPCPossessedPawn(class APawn* APawn);
	void NotifyStageStart(const struct FString& StageName, float TimeRemaining);
	void NotifyStageEnd(EFaction WinningFaction);
	void NotifyRoundTimeOut();
	void KickByNetIdWithTimer(const struct FUniqueNetIdRepl& UniqueId, const struct FString& Reason, float BanTime);
	void KickByName(const struct FString& PlayerName, const struct FString& Reason);
	void KickById(const struct FString& PlayerId, const struct FString& Reason);
	void KickAllPlayers();
	void K2_HandleSkipStage();
	void K2_HandlePrepareMatch();
	void K2_HandleMatchIsWaitingToStart();
	void K2_HandleMatchHasStarted();
	class UObject* K2_GetCurrentStage();
	bool IsSpawnWaveInQueue(class ASpawnWave* SpawnWave);
	bool IsAutoBalanceBlocked();
	void InitTeams();
	void InitSpawnQueuers();
	void HandleAIPossessedPawn(class ATBLAIController* AIC, class APawn* APawn);
	struct FString GetServerIdentifier();
	struct FString GetServerDisplayName();
	int GetNumberOfPlayersOnFaction(EFaction Faction, bool bRequirePlayerState);
	TSoftClassPtr<class UClass> GetGameModeWidgetClass();
	float GetEpilogueDuration();
	void GetCharacterPerformanceTestInfo(bool* IsRunningTest, int* TestIndex);
	TArray<class AActor*> GetAIObjectiveActors(class ATBLCharacter* Character);
	class USpawnQueuer* FindSpawnQueue(const struct FName& SpawnQueueName);
	void DisableSpawningBots();
	void ClientAddMainMenuMessage(const struct FText& Message);
	void ClearStageProgress(const struct FStageActorProgress& Progress);
	void ClearPS5MatchResponsiblePlayer();
	void ClearPS5MatchId();
	void ClearAllObjectiveAITags();
	void BroadcastLocalizedChatForFaction(EFaction ReceivingFaction, const struct FText& Msg, TEnumAsByte<EChatType> Type);
	void BroadcastLocalizedChat(const struct FText& Msg, TEnumAsByte<EChatType> Type);
	void BroadcastChat(class AActor* Sender, const struct FString& Msg, TEnumAsByte<EChatType> Type, const struct FColor& OverrideColor);
	void BeginEpilogue();
	void BanByName(const struct FString& PlayerName, int Hours, const struct FString& Reason);
	void BanById(const struct FString& PlayerId, int Hours, const struct FString& Reason);
	void AwardVictory(EFaction InVictor, class ATBLPlayerState* InPlayerVictor);
	void AwardFFAVictory(class ATBLPlayerState* InPlayerVictor);
	void AutoBalanceByPlayerKills();
	void AutoBalanceByNumPlayers();
	void AddStageProgress(const struct FStageActorProgress& Progress);
	void AddPlayerNullBots(int InNumBots);
	void AddPlayerDummyBots(int InNumBots);
	void AddPlayerBotsWhitelist(int InNumBots, const struct FString& WhiteListName);
	void AddPlayerBotsTrailerDefault(int InNumBots);
	void AddPlayerBotsEx(int InNumBots, int Team, int Class, const struct FString& WhiteListName, TArray<struct FString> ExcludeCategories);
	void AddPlayerBots(int InNumBots, TArray<struct FString> ExcludeCategories);
	void AddNullBots(int InNumBots);
	void AddDummyBots(int InNumBots);
	void AddBotsEx(int InNumBots, int Team, int Class);
	void AddBots(int InNumBots);
	void ActuallyLeaveMap();
};


// Class TBL.TBLGameMode_NativeBase
// 0x0000 (0x1180 - 0x1180)
class ATBLGameMode_NativeBase : public ATBLGameMode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameMode_NativeBase"));
		return ptr;
	}

};


// Class TBL.ArenaGameMode
// 0x00B0 (0x1230 - 0x1180)
class AArenaGameMode : public ATBLGameMode_NativeBase
{
public:
	int                                                Rounds;                                                   // 0x1180(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                TeamLives;                                                // 0x1184(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                FinalLives;                                               // 0x1188(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                TimeBetweenRounds;                                        // 0x118C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                RoundTimeLimit;                                           // 0x1190(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bClearWeaponsPostRound;                                   // 0x1194(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bResetTaggedActorsPostRound;                              // 0x1195(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x1196(0x0002) MISSED OFFSET
	int                                                PreCountdownDelay;                                        // 0x1198(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUsePreCountdownForCustomizationLoading;                  // 0x119C(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x119D(0x0003) MISSED OFFSET
	class UArenaGameModeSettings*                      ArenaGameModeSettings;                                    // 0x11A0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x11A8(0x0008) MISSED OFFSET
	bool                                               bMatchEndingMusicTrigger;                                 // 0x11B0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x2F];                                      // 0x11B1(0x002F) MISSED OFFSET
	TArray<class AController*>                         ControllersNeedingToSpawn;                                // 0x11E0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x28];                                      // 0x11F0(0x0028) MISSED OFFSET
	struct FName                                       VictoryPodiumMapName;                                     // 0x1218(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x10];                                      // 0x1220(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ArenaGameMode"));
		return ptr;
	}


	void TryPodiumSetup();
	void ShowPodiumLevel();
	void PlayRoundFightCommanderVO();
	void OnPodiumLevelLoaded();
	void OnCustomizationJobsEmptied();
	void OnActorSpawned(class AActor* InActor);
	void LoadPodiumCinematic();
};


// Class TBL.TBLGameModeSettings
// 0x0000 (0x0028 - 0x0028)
class UTBLGameModeSettings : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameModeSettings"));
		return ptr;
	}

};


// Class TBL.ArenaGameModeSettings
// 0x0148 (0x0170 - 0x0028)
class UArenaGameModeSettings : public UTBLGameModeSettings
{
public:
	struct FArenaCommanderVO                           MasonVO;                                                  // 0x0028(0x0068) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FArenaCommanderVO                           AgathaVO;                                                 // 0x0090(0x0068) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FArenaCommanderVO                           TenosiaVO;                                                // 0x00F8(0x0068) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0160(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ArenaGameModeSettings"));
		return ptr;
	}


	class UAkAudioEvent* GetSound(EArenaSounds ArenaSound, EFaction Faction);
};


// Class TBL.TBLGameState
// 0x06C0 (0x0988 - 0x02C8)
class ATBLGameState : public AGameState
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x02C8(0x0010) MISSED OFFSET
	TArray<class ATBLTeam*>                            Teams;                                                    // 0x02D8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLTeam*                                    FFATeam;                                                  // 0x02E8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*ATBLTeam*/                         NeutralTeamClass;                                         // 0x02F0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FText                                       MapName;                                                  // 0x02F8(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EGameModeType>                         GamemodeType;                                             // 0x0310(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0311(0x0007) MISSED OFFSET
	struct FText                                       GameModeName;                                             // 0x0318(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FText                                       ServerName;                                               // 0x0330(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_NativeAccessSpecifierPublic)
	struct FString                                     Platform;                                                 // 0x0348(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           Victor;                                                   // 0x0358(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0359(0x0007) MISSED OFFSET
	class ATBLPlayerState*                             PlayerVictor;                                             // 0x0360(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FinalMatchDuration;                                       // 0x0368(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x036C(0x0004) MISSED OFFSET
	struct FString                                     NextMapName;                                              // 0x0370(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMatchStarted;                                           // 0x0380(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMatchEnded;                                             // 0x0390(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMatchWonBy;                                             // 0x03A0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x18];                                      // 0x03B0(0x0018) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnPlayingStateBegun;                                      // 0x03C8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayerKilled;                                           // 0x03D8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayerStateAdded;                                       // 0x03E8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayerStateRemoved;                                     // 0x03F8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayerStateUniqueIdReplicated;                          // 0x0408(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayerStateKillsUpdated;                                // 0x0418(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCharacterSpawned;                                       // 0x0428(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnEpicEndGameEvent;                                       // 0x0438(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FEpicEndGameState                           EpicEndGameState;                                         // 0x0448(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0449(0x0003) MISSED OFFSET
	float                                              StageEndTime;                                             // 0x044C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              StageStartTime;                                           // 0x0450(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0454(0x0004) MISSED OFFSET
	TArray<struct FStageActorProgress>                 StageProgressList;                                        // 0x0458(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ServerTimeDifference;                                     // 0x0468(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisablePlayerNamePlates;                                 // 0x046C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOnlyShowNamesOnTeammates;                                // 0x046D(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsGameModeFFA;                                           // 0x046E(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableTeamSelect;                                       // 0x046F(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHideHudImportantMessages;                                // 0x0470(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0471(0x0003) MISSED OFFSET
	float                                              MinRespawnTime;                                           // 0x0474(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                PlayersNeededToStartEarly;                                // 0x0478(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MinPlayersToStart;                                        // 0x047C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                        GameplayEventMessageClass;                                // 0x0480(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bClientSideWeaponTracers : 1;                             // 0x04A8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bBadNetworkPerformance : 1;                               // 0x04A8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bBadFrameTimePerformance : 1;                             // 0x04A8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bServerBadFrameTime;                                      // 0x04A9(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseOpenLoadout;                                          // 0x04AA(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x1];                                       // 0x04AB(0x0001) MISSED OFFSET
	int                                                ProgressBarPrimaryTeamIndex;                              // 0x04AC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FClassLimitStruct>                   ClassLimits;                                              // 0x04B0(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDataTable*                                  GameScoringDataTable;                                     // 0x04C0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDataTable*                                  TeamScoreFormatDataTable;                                 // 0x04C8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDataTable*                                  NoveltyScoreDataTable;                                    // 0x04D0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRespawnStinger                             FirstSpawnSound;                                          // 0x04D8(0x0010) (CPF_Net, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FRespawnStinger                             RespawnSound;                                             // 0x04E8(0x0010) (CPF_Net, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	TArray<struct FObjectivePointEntry>                ObjectivePointArray;                                      // 0x04F8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FTeamScoreEvent                             MostRecentTeamScoreEvent;                                 // 0x0508(0x0040) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	bool                                               bUsingNewSpawnSystem;                                     // 0x0548(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ECinematicGameState                                CinematicState;                                           // 0x0549(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x6];                                       // 0x054A(0x0006) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnCinematicGameStateChanged;                              // 0x0550(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	class ALevelSequenceActor*                         DefenderCinematicSequence;                                // 0x0560(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ALevelSequenceActor*                         AttackerCinematicSequence;                                // 0x0568(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FReplSequenceBinding>                ReplicatedSequenceBindings;                               // 0x0570(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0xA0];                                      // 0x0580(0x00A0) MISSED OFFSET
	float                                              ServerCinematicStartTime;                                 // 0x0620(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x4];                                       // 0x0624(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnMatchStateChanged;                                      // 0x0628(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	TArray<struct FGameModeMessage>                    StagePersistentGameModeMessages;                          // 0x0638(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FAKAudioStartStopStruct                     StageEndingMusic;                                         // 0x0648(0x0010) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FObjectiveContextMessage                    ContextObjectiveMessage;                                  // 0x0658(0x0068) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_Transient, CPF_RepNotify, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnNewObjectiveContextMessage;                             // 0x06C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UVotingManagerComponent*                     VotingManagerComponent;                                   // 0x06D0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableSpawningBots;                                     // 0x06D8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData12[0x7];                                       // 0x06D9(0x0007) MISSED OFFSET
	struct FString                                     LobbyId;                                                  // 0x06E0(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPostMatchEndTimeChanged;                                // 0x06F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FString                                     PS5MatchId;                                               // 0x0700(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPS5MatchIdUpdated;                                      // 0x0710(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                            PS5MatchResponsiblePlayer;                                // 0x0720(0x0028) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData13[0x10];                                      // 0x0748(0x0010) MISSED OFFSET
	float                                              WarmupEndTime;                                            // 0x0758(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              PreparingMatchEndTime;                                    // 0x075C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              PostMatchEndTime;                                         // 0x0760(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              PostMatchMatchmakingStartTimeServer;                      // 0x0764(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      bBlockVoteKicking;                                        // 0x0768(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData14[0xAB];                                      // 0x0769(0x00AB) MISSED OFFSET
	bool                                               bWasNotifiedAboutWaitingToStart;                          // 0x0814(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bDelayGarbageCollection;                                  // 0x0815(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData15[0x22];                                      // 0x0816(0x0022) MISSED OFFSET
	TArray<class AOutOfCombatZoneAuthority*>           ZoneAuthorities;                                          // 0x0838(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<struct FName, class AInventoryItem*>          TornOffItems;                                             // 0x0848(0x0050) (CPF_NativeAccessSpecifierPrivate)
	TMap<struct FName, struct FServerTornOffItem>      ServerTornOffItems;                                       // 0x0898(0x0050) (CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData16[0x50];                                      // 0x08E8(0x0050) MISSED OFFSET
	TMap<struct FString, struct FPlayerStateArray>     CurrentPlayersInParties;                                  // 0x0938(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameState"));
		return ptr;
	}


	bool ShouldShowLoadoutOnPreparingMatch();
	bool ShouldShowLoadoutOnFirstDeath();
	void SetStageTimeRemaining(float TimeInSeconds);
	void SetStageEndingMusic(const struct FAKAudioStartStopStruct& Music);
	void SetObjectiveContextText(const struct FObjectiveContextMessage& ContextObjectiveMessage);
	void SetGameModeType(TEnumAsByte<EGameModeType> InGameModeType);
	void SetCinematicMode(ECinematicGameState State, class ALevelSequenceActor* DefenderSequence, class ALevelSequenceActor* AttackerSequence);
	void ResetStagePersistentGameModeMessages();
	void RemoteStageEndingMusic();
	void PlayerKilled(class AController* Killer, class AController* Killed, class UDamageSource* DamageSource, const struct FDeathEvent& DeathEvent, const struct FDeathDamageTakenEvent& DamageEvent);
	void PlayCinematicsWithBinding(class ALevelSequenceActor* DefenderSequence, class ALevelSequenceActor* AttackerSequence, TMap<class ASpawner*, struct FString> InSpawnerPrefixes);
	void OnRep_Victor();
	void OnRep_StageEndingMusic();
	void OnRep_SequenceBindings();
	void OnRep_PS5MatchResponsiblePlayer();
	void OnRep_PS5MatchId();
	void OnRep_PostMatchEndTime();
	void OnRep_GameModeType();
	void OnRep_FactionContextObjectiveMessage();
	void OnRep_ClassLimits();
	void OnRep_CinematicState();
	void NotifyCinematicStartedPlayingTryBinding();
	bool IsWaitingForMinPlayersToStart();
	bool IsWaitingForAdminToStart();
	bool IsServerBadFrameTime();
	bool IsPostMatch();
	bool IsMatchWaitingToStart();
	bool IsCurrentStage(class AActor* Stage);
	float GetWarmupTimeRemaining();
	class ATBLTeam* GetTeamWithFaction(EFaction Faction);
	int GetSubClassMaxCount(class UObject* WorldContextObject, class UClass* /*ATBLCharacter*/ CharacterClass, EFaction Faction);
	int GetSubClassCount(class UClass* /*ATBLCharacter*/ CharacterClass);
	float GetStageTimeRemaining();
	TArray<EFaction> GetSpawnableTeams(class ATBLPlayerState* LocalPlayerState);
	TArray<class UClass* /*ATBLCharacter*/> GetSpawnableClasses(class ATBLPlayerState* LocalPlayer, EFaction Faction);
	float GetServerTimeDifference();
	float GetPreparingMatchTimeRemaining();
	float GetPostMatchTimeRemaining();
	int GetNumObjectivePointsByCategory(EFaction Faction, TEnumAsByte<EObjectivePointCategory> Category);
	float GetLocalPostMatchMatchmakingStartTime();
	TSoftClassPtr<class UClass> GetGameModeWidgetClass();
	float GetGameModeEpilogueDuration();
	TScriptInterface<class UStageInterface> GetCurrentStage();
	float GetCinematicPlaybackTime();
	int GetArchetypeMaxCount(class UObject* WorldContextObject, class UClass* /*ATBLCharacter*/ CharacterClass, EFaction Faction);
	int GetArchetypeCount(class UClass* /*ATBLCharacter*/ CharacterClass);
	float ConvertServerTimeToLocalTime(float ServerTime);
	int CalculateEndOfMatchCommodity(class ATBLPlayerController* Player, const struct FString& Key);
	void BroadcastSetEpicEndGameState(const struct FEpicEndGameState& InEpicEndGameState);
	void BroadcastPlayerKilled(const struct FDeathEvent& DeathEvent);
	void BroadcastLastTeamScoreEvent(const struct FTeamScoreEvent& TeamScoreEvent);
	void BroadcastDestroyTornOffItem(const struct FName& TornOffName);
	void AddStagePersistentGameModeMessages(TArray<struct FGameModeMessage> NewMessages);
	void AddObjectivePointEvent(EFaction Faction, int PointValue, TEnumAsByte<EObjectivePointCategory> Category);
};


// Class TBL.ArenaGameState
// 0x0118 (0x0AA0 - 0x0988)
class AArenaGameState : public ATBLGameState
{
public:
	int                                                RoundsSetting;                                            // 0x0988(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                TeamLivesSetting;                                         // 0x098C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                FinalLivesSetting;                                        // 0x0990(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TimeBetweenRoundsSetting;                                 // 0x0994(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RoundTimeLimitSetting;                                    // 0x0998(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxPlayersSetting;                                        // 0x099C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplVictoryPodium                          ReplicatedVictoryPodium;                                  // 0x09A0(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	TArray<struct FReplSequenceBinding>                ReplicatedVictoryPodiumBindings;                          // 0x09B0(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FReplPodiumCharacterInfo>            ReplicatedPodiumVictorInfos;                              // 0x09C0(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnRoundVictoriesChanged;                                  // 0x09D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnRemainingLivesChanged;                                  // 0x09E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnNumLivingPlayersChanged;                                // 0x09F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnAgathaPlayersAtStartOfRoundChanged;                     // 0x0A00(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMasonPlayersAtStartOfRoundChanged;                      // 0x0A10(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnRoundWon;                                               // 0x0A20(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              PreCountdownEndTime;                                      // 0x0A30(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0A34(0x0004) MISSED OFFSET
	TArray<int>                                        RoundVictories;                                           // 0x0A38(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<int>                                        RemainingLives;                                           // 0x0A48(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<int>                                        LivingPlayers;                                            // 0x0A58(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AArenaPlayerState*>                   AttackerPlayersAtStartOfRound;                            // 0x0A68(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AArenaPlayerState*>                   DefenderPlayersAtStartOfRound;                            // 0x0A78(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0A88(0x0008) MISSED OFFSET
	class ACineCameraActor*                            PodiumCinematicCamera;                                    // 0x0A90(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0A98(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ArenaGameState"));
		return ptr;
	}


	void SetRemainingLives(EFaction Faction, int InRemainingLives);
	void OnRep_VictoryPodiumBindings();
	void OnRep_VictoryPodium();
	void OnRep_RoundVictories();
	void OnRep_RemainingLives();
	void OnRep_LivingPlayers();
	void OnRep_DefenderPlayersAtStartOfRound();
	void OnRep_AttackerPlayersAtStartOfRound();
	bool IsMatchPointForFaction(EFaction Faction);
	int GetRoundVictories(EFaction Faction);
	int GetRemainingLives(EFaction Faction);
	float GetPreCountdownTimeRemaining();
	TArray<class AArenaPlayerState*> GetPlayersAtStartOfRound(EFaction Faction);
	int GetNumberOfLivingPlayers(EFaction Faction);
	EFaction GetMatchPointFaction();
	void ClientPlayPodiumSequence();
	void BroadcastRoundWonBy(EFaction Winners);
};


// Class TBL.TBLPlayerController
// 0x0EC8 (0x1478 - 0x05B0)
class ATBLPlayerController : public APlayerController
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x05B0(0x0020) MISSED OFFSET
	class UGameplayTasksComponent*                     GameplayTasksComponent;                                   // 0x05D0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicationPredictionState                 PredictionState;                                          // 0x05D8(0x0070) (CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayerStateReplicated;                                  // 0x0648(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayingPrologue;                                         // 0x0658(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0659(0x000F) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnPossessedPawn;                                          // 0x0668(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnClientPossessedPawn;                                    // 0x0678(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0688(0x0018) MISSED OFFSET
	struct FMulticastScriptDelegate                    NextSpawnWaveReplicated;                                  // 0x06A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FLoadout                                    NextSpawnLoadout;                                         // 0x06B0(0x0038) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bShuffleLoadout;                                          // 0x06E8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0xF];                                       // 0x06E9(0x000F) MISSED OFFSET
	bool                                               bStartedForceRespawn;                                     // 0x06F8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x7];                                       // 0x06F9(0x0007) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnCausedDamage;                                           // 0x0700(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnTakenDamage;                                            // 0x0710(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0720(0x0018) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnBlockedAttack;                                          // 0x0738(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x18];                                      // 0x0748(0x0018) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnCounteredAttack;                                        // 0x0760(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x18];                                      // 0x0770(0x0018) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnBlockDamageTaken;                                       // 0x0788(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              TeamDamage30SecThreshold;                                 // 0x0798(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TeamDamage2MinThreshold;                                  // 0x079C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BotTeamDamageScale;                                       // 0x07A0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int8_t                                             TeamDamageWarningLevel;                                   // 0x07A4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x13];                                      // 0x07A5(0x0013) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnServerApprovedLoadout;                                  // 0x07B8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSavedClassUnavailable;                                  // 0x07C8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnProcessPlayerInput;                                     // 0x07D8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnZoomEnabled;                                            // 0x07E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnZoomDisabled;                                           // 0x07F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnReceivedLocalMessage;                                   // 0x0808(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPurchaseCompleted;                                      // 0x0818(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x18];                                      // 0x0828(0x0018) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnAcknowledgedTeamRequest;                                // 0x0840(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                        DefaultClassChoice;                                       // 0x0850(0x0028) (CPF_Config, CPF_GlobalConfig, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                        SavedClassChoice;                                         // 0x0878(0x0028) (CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FSavedSubclass>                      SavedSubclassChoice;                                      // 0x08A0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FSavedLoadout>                       LoadoutPerClass;                                          // 0x08B0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bReceivedInitialLoadouts;                                 // 0x08C0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAwaitingInitialRequestedPlayerClass;                     // 0x08C1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x6];                                       // 0x08C2(0x0006) MISSED OFFSET
	TArray<struct FPrimaryAssetId>                     UncheckedLevelUpItems;                                    // 0x08C8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsShufflingLoadout;                                      // 0x08D8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAutoSprint;                                              // 0x08D9(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAltAttackWithMovement;                                   // 0x08DA(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAccessAllItems;                                          // 0x08DB(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShowPlayerListOnStartupInOverview;                       // 0x08DC(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayerHasAcceptedNDA;                                    // 0x08DD(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayerHasPlayedTutorial;                                 // 0x08DE(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayerHasAcceptedPurchaseDisclaimer;                     // 0x08DF(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FDateTime                                   LastReadDeveloperMessageTime;                             // 0x08E0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayerOpenedTutorial;                                    // 0x08E8(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x7];                                       // 0x08E9(0x0007) MISSED OFFSET
	double                                             LoginTime;                                                // 0x08F0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LastPingTime;                                             // 0x08F8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData12[0x4];                                       // 0x08FC(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    GameModeMessageReceived;                                  // 0x0900(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    AutoBalanceNotificationReceived;                          // 0x0910(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnToggleCamera;                                           // 0x0920(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnToggleControlMap;                                       // 0x0930(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDeathRecapReplicated;                                   // 0x0940(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              TimeSinceRotationInputWasNonZero;                         // 0x0950(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData13[0x4];                                       // 0x0954(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnPlayerControllerPostProcessInput;                       // 0x0958(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnLookInputUpdated;                                       // 0x0968(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnLookRateInputUpdated;                                   // 0x0978(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	bool                                               bShowMyParryBox;                                          // 0x0988(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShowOtherParryBoxes;                                     // 0x0989(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData14[0x6];                                       // 0x098A(0x0006) MISSED OFFSET
	struct FCameraTargetParams                         DeathCameraTargetParams;                                  // 0x0990(0x0010) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              DecapHead;                                                // 0x09A0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsSpeaking;                                              // 0x09A8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData15[0x7];                                       // 0x09A9(0x0007) MISSED OFFSET
	class UInputComponent*                             SelfCameraInputComponent;                                 // 0x09B0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayerIsWaitingToEnterSpectatorMode;                     // 0x09B8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayerSelectedSpectatorMode;                             // 0x09B9(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFirstTimeSpectating;                                     // 0x09BA(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData16[0x5];                                       // 0x09BB(0x0005) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnPlayerSelectedSpectatorMode;                            // 0x09C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsLoadoutScreenOpen;                                     // 0x09D0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsHeadlessClient;                                        // 0x09D1(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData17[0x6];                                       // 0x09D2(0x0006) MISSED OFFSET
	class UInputReplayComponent*                       InputReplayComponent;                                     // 0x09D8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnEnteredLeftLoadoutVolume;                               // 0x09E0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              SavedFov;                                                 // 0x09F0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LastVFov;                                                 // 0x09F4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsTravelling;                                            // 0x09F8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIdleWarned;                                              // 0x09F9(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bTBSDevMode;                                              // 0x09FA(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData18[0x5];                                       // 0x09FB(0x0005) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnVotingStarted;                                          // 0x0A00(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              DisplayDebugScrollY;                                      // 0x0A10(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData19[0x4];                                       // 0x0A14(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    RequestedToJoinSpawnWave;                                 // 0x0A18(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnReceivedSpawnWaveJoinResponse;                          // 0x0A28(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bAutomaticallyChooseSpawnWave : 1;                        // 0x0A38(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData20[0x7];                                       // 0x0A39(0x0007) MISSED OFFSET
	struct FMulticastScriptDelegate                    AutomaticallyChooseSpawnWaveReplicated;                   // 0x0A40(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               LastPossessedCharacter;                                   // 0x0A50(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCheatsEnabled : 1;                                       // 0x0A58(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData21[0x7];                                       // 0x0A59(0x0007) MISSED OFFSET
	class ASpawner*                                    NextSpawner;                                              // 0x0A60(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ASpawner*                                    ClientSpawnerStartAllowingControl_PendingSpawner;         // 0x0A68(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnGoingToSpawnAtSpawner;                                  // 0x0A70(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class ASpawner*                                    CurrentPendingSpawner;                                    // 0x0A80(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnReceivedPendingSpawn;                                   // 0x0A88(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UCinematicsComponent*                        CinematicsComponent;                                      // 0x0A98(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTBLPS5BlockingHaptics>       PS5BlockingHaptic;                                        // 0x0AA0(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTBLPS5DamageHaptics>         PS5PlayerDamageTakenHaptic;                               // 0x0AC8(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTBLPS5RangedWeaponHaptics>   PS5PlayerRangedWeaponHaptic;                              // 0x0AF0(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTBLPS5GeneralHaptics>        PS5PlayerGeneralHaptic;                                   // 0x0B18(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTBLPS5SiegeEngineHaptics>    PS5PlayerSiegeEngineHaptic;                               // 0x0B40(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnGameViewportLostFocus;                                  // 0x0B68(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnGameViewportReceivedFocus;                              // 0x0B78(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<struct FSoundSwitchEntry>                   HighPriorityAKSwitches;                                   // 0x0B88(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FSoundSwitchEntry>                   PlayerExertionAKSwitches;                                 // 0x0B98(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FSoundSwitchEntry>                   LowPriorityAKSwitches;                                    // 0x0BA8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FSoundSwitchEntry>                   WeaponAkSwitches;                                         // 0x0BB8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             WeaponNameStrings;                                        // 0x0BC8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             ArmourTypeStrings;                                        // 0x0BD8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             WeaponActionNameStrings;                                  // 0x0BE8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             CombatStateStrings;                                       // 0x0BF8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               CharacterSoundDummy;                                      // 0x0C08(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              WeaponSoundDummy;                                         // 0x0C10(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnLocalPlayerEnteredOutOfCombatArea;                      // 0x0C18(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnLocalPlayerExitedOutOfCombatArea;                       // 0x0C28(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnObjectiveZonesVisiblityChanged;                         // 0x0C38(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FPrimaryAssetType                           VOBankAssetType;                                          // 0x0C48(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnGotKeybindingKey;                                       // 0x0C50(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnJoinableSpawnWavesUpdated;                              // 0x0C60(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class ASpawnWave*                                  NextSpawnWave;                                            // 0x0C70(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinimumSpawnDelayOverride;                                // 0x0C78(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableHUDPostProcess;                                   // 0x0C7C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData22[0x3];                                       // 0x0C7D(0x0003) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnPromptPlayerMessageRequest;                             // 0x0C80(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnClearPlayerMessageRequest;                              // 0x0C90(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPromptPlayerMessageReply;                               // 0x0CA0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<struct FDebugReliableRPC>                   DebugReliableRPC;                                         // 0x0CB0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               WaitingForSpawnGoreHead;                                  // 0x0CC0(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayerUsedItem;                                         // 0x0CC8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData23[0x18];                                      // 0x0CD8(0x0018) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnPlayerRevived;                                          // 0x0CF0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData24[0x18];                                      // 0x0D00(0x0018) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnPlayerCausedFallDamage;                                 // 0x0D18(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData25[0x18];                                      // 0x0D28(0x0018) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnRevivedOtherPlayer;                                     // 0x0D40(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData26[0x18];                                      // 0x0D50(0x0018) MISSED OFFSET
	bool                                               bIsPostMatchMatchmaking;                                  // 0x0D68(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsReadyToPostMatchMatchmakingTravel;                     // 0x0D69(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData27[0x6];                                       // 0x0D6A(0x0006) MISSED OFFSET
	struct FString                                     PostMatchMatchmakingConnectString;                        // 0x0D70(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnReceivedGlobalGameNotification;                         // 0x0D80(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnHealingAppliedToCharacter;                              // 0x0D90(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UItemPreVisualizationInterfaceHelper*        ItemPreVisualizationHelper;                               // 0x0DA0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    LastClientSetRotation;                                    // 0x0DA8(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FDebugProjectileHit                         DebugProjectileHit;                                       // 0x0DB4(0x0038) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FDebugProjectileHit                         DebugFakeProjectileHit;                                   // 0x0DEC(0x0038) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData28[0x4];                                       // 0x0E24(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnCustomizationsLoaded;                                   // 0x0E28(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnProfileDataLoaded;                                      // 0x0E38(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnClientPreTravel;                                        // 0x0E48(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayerKicked;                                           // 0x0E58(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData29[0x8];                                       // 0x0E68(0x0008) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnSpectatorPawnDestroyed;                                 // 0x0E70(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData30[0x8];                                       // 0x0E80(0x0008) MISSED OFFSET
	bool                                               bDisplaySwingThroughInfo;                                 // 0x0E88(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugTracers;                                        // 0x0E89(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawClientDebugTracers;                                  // 0x0E8A(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugTracerCache;                                    // 0x0E8B(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugTracerDirection;                                // 0x0E8C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugWeaponTip;                                      // 0x0E8D(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugParryHit;                                       // 0x0E8E(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugTracersClear;                                   // 0x0E8F(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugMeleeHit;                                       // 0x0E90(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugVisibilityCheck;                                // 0x0E91(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugFacingCheck;                                    // 0x0E92(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugBackSwingCheck;                                 // 0x0E93(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugCamera;                                         // 0x0E94(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugProjectile;                                     // 0x0E95(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugShield;                                         // 0x0E96(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugHorseImpact;                                    // 0x0E97(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebugRangedInaccuracy;                               // 0x0E98(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData31[0x3];                                       // 0x0E99(0x0003) MISSED OFFSET
	struct FName                                       DrawDebugSocketName;                                      // 0x0E9C(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bDrawDebugSpectatorCamera : 1;                            // 0x0EA4(0x0001) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData32[0x3];                                       // 0x0EA5(0x0003) MISSED OFFSET
	TArray<struct FDebugSpectatorCamera>               DebugSpectatorCamera;                                     // 0x0EA8(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDebugIgnoreAI;                                           // 0x0EB8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData33[0x7];                                       // 0x0EB9(0x0007) MISSED OFFSET
	struct FMatchSessionComplete                       MatchSessionComplete;                                     // 0x0EC0(0x00A0) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                NextSpawnTeam;                                            // 0x0F60(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FSelfCameraProperties                       SelfCamera;                                               // 0x0F64(0x0028) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData34[0x4];                                       // 0x0F8C(0x0004) MISSED OFFSET
	TArray<class UAkComponent*>                        DebugAkComponents;                                        // 0x0F90(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpamCheckPeriod;                                          // 0x0FA0(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SpamCheckPeriodMaxMessages;                               // 0x0FA4(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpamMuteDurationMin;                                      // 0x0FA8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpamMuteDurationIncreasePerMute;                          // 0x0FAC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpamMuteDurationMax;                                      // 0x0FB0(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpamMutedTime;                                            // 0x0FB4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpamMutedDuration;                                        // 0x0FB8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData35[0x4];                                       // 0x0FBC(0x0004) MISSED OFFSET
	TArray<float>                                      SpamCheckPreviousMessages;                                // 0x0FC0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SpamCheckIndex;                                           // 0x0FD0(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData36[0x4];                                       // 0x0FD4(0x0004) MISSED OFFSET
	class ATBLCharacter*                               CustomizationCharacter;                                   // 0x0FD8(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThirdPersonFOVCap;                                        // 0x0FE0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastInputTime;                                            // 0x0FE4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    LastControlRotation;                                      // 0x0FE8(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData37[0x4];                                       // 0x0FF4(0x0004) MISSED OFFSET
	class APawn*                                       LastReplicatedPawn;                                       // 0x0FF8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass* /*UCineCameraComponent*/             CinematicSpectatorCameraClass;                            // 0x1000(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                DisplayDebugScrollDir;                                    // 0x1008(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData38[0x4];                                       // 0x100C(0x0004) MISSED OFFSET
	class UQuestPool*                                  QuestPool;                                                // 0x1010(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UCampaignList*                               CampaignList;                                             // 0x1018(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              TimeOfLastDeath;                                          // 0x1020(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData39[0x4];                                       // 0x1024(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    AllowedCharactersChanged;                                 // 0x1028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	TArray<class UClass* /*ATBLCharacter*/>            PreviousAllowedCharacterClasses;                          // 0x1038(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class AActor*                                      PossesedActor;                                            // 0x1048(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FRotator                                    ControlRotationBeforePossession;                          // 0x1050(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	bool                                               bPossessionInitialized;                                   // 0x105C(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData40[0x3];                                       // 0x105D(0x0003) MISSED OFFSET
	class UAkComponent*                                AkComponent;                                              // 0x1060(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData41[0x80];                                      // 0x1068(0x0080) MISSED OFFSET
	class UDataTable*                                  DefaultWeaponIdsDataTable;                                // 0x10E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData42[0x58];                                      // 0x10F0(0x0058) MISSED OFFSET
	TArray<class UAkComponent*>                        ThisWorldListeners;                                       // 0x1148(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              DisableAimedAtSoundEvent;                                 // 0x1158(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              MaxDistanceToHearSound;                                   // 0x115C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 LongBowAimCurve;                                          // 0x1160(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData43[0x80];                                      // 0x1168(0x0080) MISSED OFFSET
	class ATBLCharacter*                               TargetCharacter;                                          // 0x11E8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData44[0x8];                                       // 0x11F0(0x0008) MISSED OFFSET
	TArray<struct FCustomizationMap>                   PlayerSavedCustomization;                                 // 0x11F8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FString>                             ViewedGameUpdateVersions;                                 // 0x1208(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UDefaultWeaponCustomization*                 DefaultWeaponsCustomizationsAg;                           // 0x1218(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UDefaultWeaponCustomization*                 DefaultWeaponsCustomizationsMa;                           // 0x1220(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UDefaultWeaponCustomization*                 DefaultWeaponsCustomizationsTe;                           // 0x1228(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData45[0x10];                                      // 0x1230(0x0010) MISSED OFFSET
	class AActor*                                      AimAssistTarget;                                          // 0x1240(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              AimAssistPreviousTargetBias;                              // 0x1248(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData46[0xA5];                                      // 0x124C(0x00A5) MISSED OFFSET
	bool                                               bPlayerCustomizationReceived;                             // 0x12F1(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData47[0x6];                                       // 0x12F2(0x0006) MISSED OFFSET
	TMap<struct FString, int>                          OnlineInventoryCommodities;                               // 0x12F8(0x0050) (CPF_NativeAccessSpecifierPrivate)
	TMap<struct FString, int>                          CommoditiesEarnedInMatch;                                 // 0x1348(0x0050) (CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData48[0x10];                                      // 0x1398(0x0010) MISSED OFFSET
	class UCloudViewedItems*                           CloudViewedItems;                                         // 0x13A8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UFlavorStats*                                FlavorStatsPC;                                            // 0x13B0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UCloudMutedPlayers*                          CloudMutedPlayers;                                        // 0x13B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData49[0x60];                                      // 0x13C0(0x0060) MISSED OFFSET
	TArray<struct FOnPossessedAutoVo>                  OnPossessedAutoVoList;                                    // 0x1420(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData50[0x48];                                      // 0x1430(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPlayerController"));
		return ptr;
	}


	void VoteStarted(class UVotingInstance* VotingInstance);
	void VOIPSetRemoteVolumeExec(float Volume);
	void VOIPMuteLocalExec(bool Mute);
	TArray<struct FString> VOIPGetTalkingNames();
	TArray<struct FString> VOIPGetTalkingIds();
	void VOIPGetTalkingExec();
	void VerifyCustomizationOnlineOwnership(bool bOnOnlineStatsLoaded);
	void UpdateVoiceStateForAllPlayers();
	void UpdateUncheckedItems();
	void UpdateSelfCamera();
	void UnPrepareAllVOEVents();
	void UnloadBank(const struct FString& BankName);
	void ToggleIgnoreAI();
	void ToggleHud();
	void ToggleGhostCameraMode();
	void ToggleGhost();
	void ToggleFriendlyMarkers();
	void ToggleCameraKeyReleased();
	void ToggleCameraKeyPressed();
	void ToggleCamera();
	void ToggleAutospawn(bool bEnabled, bool bLeaveCurrentWave);
	void TestBadTravel();
	void TeleportToMe();
	void TeamSay(struct FString* Msg);
	void TeamAppliedToPlayer(class ATBLTeam* Team);
	void TBLClientSetControlRotation(const struct FRotator& ClientRotation);
	void SyntheticInput_Movement(bool bEnable);
	void SyntheticInput_AI(bool bEnable);
	void SyntheticInput_Actions(bool bEnable);
	void SwitchToSpectator();
	void SwitchToSelfCamera();
	void SwitchTeam(int RequestedTeamIndex);
	void SwitchClass(int RequestedClassIndex, int RequestedSubclassIndex);
	void Suicide();
	void StopSoundAllSounds(class UAkAudioEvent* Sound);
	void StopCameraShake(const struct FName& CameraShakeName);
	void StopAnalytics();
	void StartTeamSayChat();
	void StartRangedWeaponWarning(float DrawStrength, class AInventoryItem* DrawnWeapon, const struct FName& AttackName);
	void StartLastChannelChat();
	void StartAllSayChat();
	void SpawnWaveNoLongerJoinable(class ASpawnWave* Wave);
	class UMovementDebugger* SpawnMovementDebugger();
	void ShuffleLoadout(bool bShouldShuffle);
	void ShowOtherParryBoxes();
	void ShowMyParryBox();
	void ShowMessageDialog(const struct FText& Message);
	void ShowIngameMenu();
	bool ShouldDrawVisibilityCheck();
	bool ShouldDrawFacingCheck();
	bool ShouldDrawDebugWeaponTip();
	bool ShouldDrawDebugTracers();
	bool ShouldDrawDebugTracerDirection();
	bool ShouldDrawDebugTracerCache();
	bool ShouldDrawDebugShield();
	bool ShouldDrawDebugRangedInaccuracy();
	bool ShouldDrawDebugProjectile();
	bool ShouldDrawDebugParryHit();
	bool ShouldDrawDebugMeleeHit();
	bool ShouldDrawDebugHorseImpact();
	bool ShouldDrawClientDebugTracers();
	bool ShouldDrawCamera();
	bool ShouldDrawBackSwingCheck();
	bool ShouldDisplaySwingThroughInfo();
	bool ShouldDisplayNDA();
	bool ShouldClearDebugTracers();
	void SetupCameraTargetOnDeath(class APawn* P, const struct FName& AttachSocketName);
	void SetStatOriginal(const struct FString& StatType, int StatValue);
	void SetStatFloat(const struct FString& StatName, float StatValue);
	void SetStat(const struct FString& StatName, int StatValue);
	void SetSpectatorCamera();
	void SetShowPlayerListOnStartupInOverview(bool bShow);
	void SetRegionPingExec(const struct FString& Region, int Ping);
	void SetRandomLoadout(struct FLoadout* Loadout);
	void SetPlayingPrologue(bool bInPlayingPrologue);
	void SetPlayerHasPlayedTutorial();
	void SetPlayerHasAcceptedPurchaseDisclaimer();
	void SetPlayerHasAcceptedNDA();
	void SetNewCustomizationForPawn(TArray<struct FSwatchSelection> Swatches, class APawn* Char, EFaction Faction);
	void SetNewCustomizationForCurrentPawn(TArray<struct FSwatchSelection> Swatches);
	void SetMinimumSpawnDelayOverride(float InMinimumSpawnDelayOverride);
	void SetLoadout(class UClass* /*ATBLCharacter*/ RequestedSubclass, const struct FLoadout& RequestedLoadout);
	void SetListenerEnabled(bool Enabled);
	void SetLastReadDeveloperMessageTime(const struct FDateTime& ReadDeveloperMessageTime);
	void SetHudVisibility(bool bVisible);
	void SetCameraShakeProperty(const struct FName& CameraShakeName, const struct FName& PropertyName, const struct FString& Value);
	void SetCameraRotation(float Pitch, float Yaw, float Roll);
	void SetCameraProperty(const struct FName& PropertyName, const struct FString& Value);
	void SetCameraOffset(float X, float Y, float Z);
	void SetAutoSprint(bool bEnable);
	void SetAltAttackWithMovement(bool bEnable);
	void SetAllRegionPingExec(int Ping);
	void SetAimedAtSoundEnabled(bool Enable);
	void SetAimedAtMaxDistance(float Distance);
	void ServerUpdateAimedAtCharacters(TArray<TWeakObjectPtr<class ATBLCharacter>> Characters);
	void ServerToggleAutospawn(bool bEnabled, bool bLeaveCurrentWave);
	void ServerTeleportPawnsToMe(class ATBLCharacter* pTargetCharacter);
	void ServerTBSActivateDevMode(bool bActivate);
	void ServerSwitchToSpectator();
	void ServerSuicide();
	void ServerSubmitVote(class UVotingInstance* VotingInstance, const struct FName& Vote);
	void ServerSubmitPlayerPostGameFeedback(int StarRating);
	void ServerStopAnalytics();
	void ServerSpawnGoreHead(class ATBLPlayerState* InPlayerState, unsigned char DeadCharacterId, const struct FVector_NetQuantize& Location, const struct FVector_NetQuantize& Rotation, const struct FVector_NetQuantize& Impulse);
	void ServerShowDebugCapture(bool bActive, const struct FName& Category);
	void ServerSetSyntheticInputMovement(bool bEnable);
	void ServerSetSyntheticInputAI(bool bEnable);
	void ServerSetSyntheticInputActions(bool bEnable);
	void ServerSetSpectatorCamera();
	void ServerSetPS5MatchId(const struct FString& NewPS5MatchId);
	void ServerSetPlayerCustomization(TArray<struct FCustomizationMap> PlayerCustomization, class ATBLPlayerState* PS);
	void ServerSetPlatformUniqueId(const struct FUniqueNetIdRepl& UniqueIdRepl);
	void ServerSetPartyId(const struct FString& PartyId);
	void ServerSetLoadout(class UClass* /*ATBLCharacter*/ RequestedSubclass, const struct FLoadout& RequestedLoadout);
	void ServerSetInitialLoadouts(TArray<struct FSavedLoadout> Loadouts);
	void ServerSetHardwarePlatform(EHardwarePlatform Platform);
	void ServerSetForFFAPlayer();
	void ServerSetAimAssistTarget(class AActor* NewAimAssistTarget, int NewAimAssistTargetBoneIndex);
	void ServerSetAimAssistCorrectionParams(int NewAimAssistCorrectionMaxPredictionOffset, int NewAimAssistCorrectionMaxAngle, int NewAimAssistCorrectionMaxOffset);
	void ServerSendPostMatchInfo(const struct FClientPostMatchInfo& PostMatchInfo, TArray<struct FPerMinuteBucket> PerMinuteBuckets);
	void ServerSendOfflineAnalyticsEvent(const struct FOfflineAnalyticsEvent& LocalAnalyticsEvent);
	void ServerSendMatchProfile(const struct FString& Nickname, const struct FString& MachineId, const struct FString& MachineName, const struct FString& OperatingSystemId, const struct FString& CommandLine, const struct FTBLQualityLevels& ScalabilitySettings);
	void ServerSendEquippedPersonality(TEnumAsByte<EAudioPersonalityType> PersonalityType);
	void ServerSay(struct FString* Msg);
	void ServerResetPartyId();
	void ServerResetIdleTime();
	void ServerRequestNextSpawnTeam(EFaction RequestedFaction, bool bImmediatelySwitch);
	void ServerRequestExit();
	void ServerRequestAnalyticsStop();
	void ServerRequestAnalyticsStart(const struct FString& DataName);
	void ServerReportPlayer(class APlayerState* ReportedPlayer, EPlayerReportCategory ReportCategory, const struct FString& ReportDescription);
	void ServerReliableSetPlayingPrologue(bool bInPlayingPrologue);
	void ServerRejectSpawnWave(class ASpawnWave* Wave);
	void ServerRegisterAsHeadlessClient();
	void ServerPropertyDebugger();
	void ServerPromptPlayerMessageReply(int MessageId, bool Response);
	void ServerOverrideSwatchIndex(EInventorySlot Slot, int SwatchOverrideIndex);
	void ServerOnLoadoutScreenState(bool DidOpen);
	void ServerNotifyDoneTravelling();
	void ServerMovementDebuggerLoadFile(const struct FName& Filename);
	void ServerMovementDebugger();
	void ServerLeaveSpawnWave(class ASpawnWave* Wave);
	void ServerJoinSpawnWave(class ASpawnWave* Wave, bool bFromAutoSpawn);
	void ServerForgivePlayer(class ATBLPlayerState* Killer);
	void ServerForceSelfAutobalance();
	void ServerForceImmediateSpawn();
	void ServerDrawWeaponTip(bool bEnable);
	void ServerDrawVisibilityCheck(bool bEnable);
	void ServerDrawTracers(bool bEnable);
	void ServerDrawTracerDirection(bool bEnable);
	void ServerDrawSpectatorCamera(bool bEnable);
	void ServerDrawShield(bool bEnable);
	void ServerDrawProjectile(bool bEnable);
	void ServerDrawParryHit(bool bEnable);
	void ServerDrawHorseImpact(bool bEnable);
	void ServerDrawFacingCheck(bool bEnable);
	void ServerDrawBackSwingCheck(bool bEnable);
	void ServerDrawAllTracers(bool bEnable);
	void ServerDisplaySwingThroughInfo(bool bEnable);
	void ServerCommendPlayer(class ATBLPlayerState* Killer);
	void ServerClosePropertyDebugger();
	void ServerCloseMovementDebugger();
	void ServerClearPS5MatchId();
	void ServerCheatObj(const struct FName& CheatCommand, class UObject* Param);
	void ServerCheat(const struct FName& CheatCommand, const struct FName& Param);
	void ServerBroadcastDebugMessage(const struct FString& Message, const struct FColor& TextColor, float Duration, bool bToAll, bool bTeamOnly);
	void ServerBroadcast(const struct FString& Msg, TEnumAsByte<EChatType> ChatType, const struct FColor& OverrideColor);
	void ServerBPCheat(const struct FString& CheatAndParams);
	void ServerAdminCmd(const struct FString& Cmd);
	void SendPromptPlayerMessageRequest(const struct FGameplayTag& MessageTag, int* SentMessageId);
	void SendPromptPlayerMessageReply(int MessageId, bool Response);
	void SendCancelPlayerMessageRequest(int MessageId);
	void SelfSyntheticInput(bool bEnable);
	void SayChatType(const struct FString& Msg, TEnumAsByte<EChatType> ChatType, const struct FColor& OverrideColor);
	void Say(struct FString* Msg);
	void SaveLoadout(class UClass* /*ATBLCharacter*/ RequestedSubclass, class UClass* /*ULoadoutSelection*/ LoadoutSelection, const struct FLoadout& RequestedLoadout);
	void SaveCloudFilesIfDirty();
	void SaveAutoInputRecord();
	void ResetSelfCamera();
	void ResetNativeAchievements();
	void RequestSwitchTeam(EFaction RequestedFaction);
	void RequestRejectSpawnWave(class ASpawnWave* Wave);
	void RequestLeaveSpawnWave(class ASpawnWave* Wave);
	void RequestJoinSpawnWave(class ASpawnWave* Wave, bool bFromAutoSpawn);
	void ReportPlayer(class APlayerState* ReportedPlayer, EPlayerReportCategory ReportCategory, const struct FString& ReportDescription);
	void RemoveViewedItem(const struct FPrimaryAssetId& ItemId);
	void RemoveLoadingScreenPanel();
	void RemoveFriendById(const struct FString& UniqueId);
	void RemoveCurrencyExec(const struct FString& Currency, int Amount);
	void RemoveAllViewedItems();
	void ReleasedMenuButton();
	void RefreshRegionPingExec();
	void ReadFriendList();
	void PurchaseItemExec(const struct FString& ItemId, const struct FString& Currency);
	void PurchaseItemByString(const struct FString& ItemId, const struct FString& Currency);
	void PurchaseItem(const struct FPrimaryAssetId& ItemId, const struct FString& Currency);
	void PS4TouchpadPressed();
	void PropertyDebuggerAdd(const struct FString& PropertyName);
	void PropertyDebugger();
	void PromoteToLeader(const struct FString& PlayerName);
	void PrintWeaponActionEvents();
	void PrintDebugMessage(const struct FString& Message, const struct FColor& TextColor, float Duration);
	void PrintCameraShakeProperties(const struct FName& CameraShakeName);
	void PrintCameraProperties();
	void PressedMenuButton();
	void PrepareEvent(const struct FString& EventName);
	void PrepareBank(const struct FString& BankName);
	void PlaySound(class UAkAudioEvent* Sound);
	int PlayGlobalVOEmote(class UCTBase* CTPersonality, const struct FName& EmoteName, EFaction Faction, TEnumAsByte<EAudioClassType> Class, EVOType VoType);
	bool PlayerViewUnlockedLoadoutItem(class UClass* /*ATBLCharacter*/ CharacterSubclass, class UClass* /*AInventoryItem*/ Item);
	bool PlayerViewedUnlockedSubclass(class UClass* /*ATBLCharacter*/ CharacterSubclass);
	void PlayerSubmitVote(class UVotingInstance* VotingInstance, const struct FName& Vote);
	void PlayerStateUniqueIdReplicated(class ATBLPlayerState* PS);
	void PlayerStateMissingOnClientStart(class APlayerState* NewPlayerState);
	void PlayerPostGameFeedback(int StarRating);
	void PlayerKilled(const struct FDeathEvent& DeathEvent);
	void PlayerIsBeingKicked();
	void PlayerCallKickVote(class APlayerState* KickTarget);
	void PlayDelayedCrossbowHapticsForPS5();
	void PlayCameraShake(const struct FName& CameraShakeName, bool bLoop);
	void PendingSpawnExpired(class ASpawner* PendingSpawner);
	void PartySay(struct FString* Msg);
	void OwningTeamChanged(class ATBLTeam* NewOwningTeam);
	void OpenBlueprintDebugMenu();
	void OnRep_NextSpawnWave(class ASpawnWave* PreviousSpawnWave);
	void OnRep_CheatsEnabled();
	void OnRep_bAutomaticallyChooseSpawnWave();
	void OnReceivedFocus();
	void OnReadUserFileComplete(const struct FPlatformInterfaceDelegateResult& Result);
	void OnPostGameMatchFound(const struct FName& MatchmadeSessionName, bool bSuccess);
	void OnPostGameMatchCancelled(const struct FName& MatchmadeSessionName, bool bSuccess);
	void OnMatchMakingChanged(bool bIsMatchmaking);
	void OnLostFocus();
	void OnLoadoutScreenState(bool DidOpen);
	void OnlineStatsReplicated(const struct FTBLOnlineStats& OnlineStats);
	void OnInputExitDeathCam();
	void OnEnumerateCloudFilesComplete(const struct FPlatformInterfaceDelegateResult& Result);
	void OnAbilityInitiated(class AAbilityInvocation* Invocation);
	void NotifyEnteredLeftLoadoutVolume(class UObject* LoadoutVolume, bool bInLoadoutVolume);
	void NotifyCausedDamage(const struct FDamageTakenEvent& Event);
	void MuteClient(bool Enabled);
	void MovementDebuggerLoadFile(const struct FName& Filename);
	void MovementDebugger();
	void LoadVOASync(TEnumAsByte<EAudioPersonalityType> PersonalityType);
	void LoadBank(const struct FString& BankName);
	void ListViewedItems();
	void ListPlayers();
	void JoinFriendGameExec(const struct FString& PlayerName);
	bool IsVOBankLoaded(TEnumAsByte<EAudioPersonalityType> PersonalityType);
	bool IsViewportFocused();
	bool IsViewedItem(const struct FPrimaryAssetId& ItemId);
	bool IsUsingGamepad();
	bool IsStatsLoaded();
	bool IsSelfCamera();
	bool IsPlayingCinematics();
	void IsPlayerStateMuted(class ATBLPlayerState* InPlayerState, bool* OutIsMuted);
	bool IsPlayerChatMuted(class APlayerState* MutedPlayer);
	struct FPrimaryAssetId IsLoadoutItemRecentlyUnlocked(class UClass* /*ATBLCharacter*/ CharacterSubclass, class UClass* /*AInventoryItem*/ Item);
	bool IsLoadoutEqualToSavedLoadout(class UClass* /*ATBLCharacter*/ RequestedSubclass, const struct FLoadout& Loadout);
	bool IsHeadlessClient();
	bool IsGhostCameraMode();
	struct FPrimaryAssetId IsCharacterRecentlyUnlocked(class UClass* /*ATBLCharacter*/ CharacterSubclass);
	bool IsActionKeyDown(const struct FName& ActionName);
	void InputStop();
	void InputRec(const struct FName& ReplayName);
	void InputPlay(const struct FName& ReplayName);
	void InpStop();
	void InpRec(const struct FString& RecName);
	void InpPlay(const struct FString& RecName);
	void GrantFlavorEntitlementExec(const struct FString& Entitlement);
	void GrantCurrencyExec(const struct FString& Currency, int Amount);
	void GiveWeapon(const struct FName& WeaponName);
	TMap<struct FPrimaryAssetId, bool> GetUnlocksAtLevel(int Level, EOnlineStat Stat);
	TArray<struct FPrimaryAssetId> GetUnlockedItemsBySubclass(class UClass* /*ATBLCharacter*/ CharacterSubclass);
	int GetTotalTimesKilled();
	float GetToggleCameraGamepadInputHoldTimeThreshold();
	float GetTimeUntilRespawn();
	void GetTimesKilledKilledByPlayer(class ATBLPlayerState* OtherPlayer, int* OutTimesKilled, int* OutTimesKilledBy);
	float GetTeamDamage();
	class UTBLPlayerInput* GetTBLPlayerInput();
	float GetStatFloatExec(const struct FString& StatName);
	float GetStatFloat(const struct FString& StatName);
	int GetStatExec(const struct FString& StatName);
	int GetStat(EOnlineStat Stat);
	struct FTransform GetSpectatorPawnSpawnTransform();
	void GetSavedLoadout(class UClass* /*ATBLCharacter*/ RequestedSubclass, struct FLoadout* Loadout);
	class UClass* /*ATBLCharacter*/ GetSavedCharacterSubclass(class UClass* /*ATBLCharacter*/ ParentClass);
	bool GetRespawnTime(float* TimeRemaining);
	class UClass* /*AInventoryItem*/ GetRandomUnlockedLoadoutItemForSlot(class ULoadoutSelection* LoadoutSelection, EInventoryItemSlot Slot);
	class UQuestPool* GetQuestPool();
	struct FOwnershipResponse GetOwnership(const struct FPrimaryAssetId& AssetIdToCheck, bool BaseOnly);
	TArray<struct FCustomizationEntry> GetOwnerCustomizationWeaponItems(EWeaponTag WeaponTag, EFaction Faction);
	TArray<struct FCustomizationEntry> GetOwnerCustomizationItems(TEnumAsByte<EAudioClassType> CharacterType, EFaction Faction, const struct FName& AssetsTypeName, bool bPresetCompatible, bool bSort);
	int GetOnlineCommodity(const struct FString& Key);
	class ASpawnWave* GetNextSpawnWave();
	int GetLevelExec(const struct FString& Stat);
	int GetLevel(EOnlineStat Stat);
	bool GetIsProfileDataLoaded();
	void GetInputAnalogStickStateRaw(TEnumAsByte<EControllerAnalogStick> WhichStick, float* StickX, float* StickY);
	struct FPrimaryAssetId GetEquippedCustomizationWeaponAsset(EWeaponTag WeaponTag, EFaction Faction, TEnumAsByte<EAudioClassType> CharacterType);
	TArray<struct FOnlineStoreOffer> GetCatalogInLevelRange(bool LevelAccessible, int MinLevel, int MaxLevel, EOnlineStat Stat);
	void GetCatalogExec(bool LevelAccessible, int LevelsAbove);
	TArray<struct FOnlineStoreOffer> GetCatalog(bool LevelAccessible, int LevelsAbove, EOnlineStat Stat);
	class UCampaignList* GetCampaignList();
	class UAkComponent* GetAudioComponent();
	class UClass* /*ULoadoutSelection*/ GetAllowedLoadoutSelection(class UClass* /*ATBLCharacter*/ RequestedSubclass);
	TArray<class UClass* /*ATBLCharacter*/> GetAllowedCharacterClasses();
	class UTBLScreenManager* GetActiveScreenManager();
	void GenerateStoreJSON();
	void ForceSelfAutobalance();
	void ForceImmediateRespawn();
	void EchoPlayFabId();
	void DumpStatsExec(int Threshold);
	void DumpPartyInfo();
	void DumpOwnership();
	void DumpMovementMetrics();
	void DumpFriendList();
	void DtlsOpen(const struct FString& URL);
	void DrawWeaponTip(bool bEnable);
	void DrawVisibilityCheck(bool bEnable);
	void DrawTracersClear(bool bEnable);
	void DrawTracers(bool bEnable);
	void DrawTracerDirection(bool bEnable);
	void DrawTracerCache(bool bEnable);
	void DrawSpectatorCamera(bool bEnable);
	void DrawSocket(const struct FName& SocketName);
	void DrawShield(bool bEnable);
	void DrawRangedInaccuracy(bool bEnable);
	void DrawProjectile(bool bEnable);
	void DrawParryHit(bool bEnable);
	void DrawMeleeHit(bool bEnable);
	void DrawHorseImpact(bool bEnable);
	void DrawFacingCheck(bool bEnable);
	void DrawClientTracers(bool bEnable);
	void DrawCamera(bool bEnable);
	void DrawBackSwingCheck(bool bEnable);
	void DrawAllTracers(bool bEnable);
	void DisplaySwingThroughInfo(bool bEnable);
	void DisplayDebugScrollUp();
	void DisplayDebugScrollReleased();
	void DisplayDebugScrollDown();
	void DisableCameraOffset();
	void DevMode(bool bActivate);
	void DestroyInputReplayComponent();
	void DebugSetPartySetting(const struct FString& Key, const struct FString& Value);
	void CreateInputReplayComponent();
	void ClosePropertyDebugger();
	void CloseMovementDebugger();
	void ClientUpdateVoiceStateForPlayer(class ATBLPlayerState* NewPlayer);
	void ClientSwitchToSpectator();
	void ClientStartOnlineGame();
	void ClientSpawnerStartAllowingControl(class ASpawner* InSpawner, class ATBLCharacter* Char);
	void ClientShowTeamSelectScreen();
	void ClientShowLoadoutScreen();
	void ClientShowHudMarkerPointEvent(const struct FName& HudMarkerTag, float TicketsModified, int TeamIndex);
	void ClientSetVisibilityOfAllObjectiveZones(bool IsVisible);
	void ClientSetSyntheticInputMovement(bool bEnable);
	void ClientSetSyntheticInputAI(bool bEnable);
	void ClientSetSyntheticInputActions(bool bEnable);
	void ClientSetSpectatorLocation(const struct FVector& InLocation, const struct FRotator& InRotation);
	void ClientRequestPostMatchInfo();
	void ClientReceiveLocalizedObjectiveMessage(const struct FObjectiveMessage& ObjectiveMessage);
	void ClientReceiveLocalizedChat(const struct FText& FormatText, TEnumAsByte<EChatType> Type);
	void ClientReceiveGameModeMessages(TArray<struct FGameModeMessage> GameModeMessages);
	void ClientReceiveGameModeMessage(const struct FGameModeMessage& GameModeMessage);
	void ClientReceiveDecapHead(class AInventoryItem* InDecapHead);
	void ClientReceiveDeathRecap(const struct FDeathRecap& DeathRecap);
	void ClientReceivedAutoBalanceNotification(EFaction NewFaction);
	void ClientReceiveChat(class ATBLPlayerState* SenderPlayerState, const struct FString& S, TEnumAsByte<EChatType> Type, bool IsSenderDev, const struct FColor& OverrideColor);
	void ClientPushCmd(const struct FString& Cmd);
	void ClientPromptPlayerMessageRequest(const struct FGameplayTag& MessageTag, int MessageId);
	void ClientPostGameStartMatchmaking(bool bAlways);
	void ClientPostGameMigrateToNewMatchmakingServer(const struct FString& ConnectString);
	void ClientPostAKSoundsOnActor(class AActor* SoundActor, TArray<class UAkAudioEvent*> Sounds);
	void ClientPostAKSoundOnActor(class AActor* SoundActor, class UAkAudioEvent* Sound);
	void ClientPostAKSoundAtLocation(const struct FVector_NetQuantize& Location, class UAkAudioEvent* Sound);
	void ClientPostAkSound(class UAkAudioEvent* Sound);
	void ClientPlayEmote(const struct FName& EmoteName);
	void ClientPlayAimedAtSound();
	void ClientOnRevivedOtherPlayer(class APawn* RevivedPawn);
	void ClientOnPlayerRevived(class APawn* RevivingPawn);
	void ClientOnCounteredAttack(EDefenderBlockedPolicy BlockPolicy, class ATBLCharacter* AttackingCharacter);
	void ClientOnBlockedAttack(EDefenderBlockedPolicy BlockPolicy, class ATBLCharacter* AttackingCharacter, bool bWasProjectile);
	void ClientNotifyWaveJoinResponse(class ASpawnWave* Wave, bool bJoinedWaveSuccess);
	void ClientNotifyPendingSpawn(class ASpawner* PendingSpawner, float ServerSpawnTimeSeconds);
	void ClientNotifyForwardSpawnAwaitingCombatTimer(class AForwardSpawnWave* ForwardWave);
	void ClientNotifyCausedDamage(const struct FDamageTakenEvent& Event);
	void ClientKicked(const struct FText& KickReason);
	void ClientHandleGlobalGameNotification(EGlobalGameNotificationCategory Category, const struct FText& Title, const struct FText& Body, const struct FName& Subcategory, class UObject* Data);
	void ClientGoingToSpawnAtSpawner(class ASpawner* InSpawner);
	void ClientFadeOut(float PlaybackSpeed);
	void ClientFadeIn(float PlaybackSpeed);
	void ClientEndOnlineGame();
	void ClientDrawDebugTracerSphere(const struct FVector& Center, float Radius, int Segments, const struct FColor& Color);
	void ClientDrawDebugTracerBox(const struct FVector& Center, const struct FVector& Extent, const struct FQuat& Rotation, const struct FColor& Color);
	void ClientConfirmExit();
	void ClientClearPostMatchInfo();
	void ClientCausedFallDeath(const struct FDeathDamageTakenEvent& FallDamage);
	void ClientCancelPlayerMessageRequest(int MessageId);
	void ClientBroadcastDebugMessage(const struct FString& Message, const struct FColor& TextColor, float Duration, bool bToAll, bool bTeamOnly);
	void ClientApprovedLoadout(bool IsLoadoutApproved, class UClass* /*ATBLCharacter*/ RequestedSubclass, const struct FLoadout& RequestedLoadout);
	void ClientAcknowledgeTeamRequest(bool bSuccess, EFaction Faction);
	void ClientAckDoneTravelling();
	void ClearServerHistoryList();
	void ClearSeenGameUpdates();
	void ClearPlayerHasAcceptedNDA();
	void ClearMovementMetrics();
	void ClearLoadedSoundBanks();
	void ClearFlavorStats();
	void CinematicSpectatorCamera();
	bool CheckPersonalityOwnership(TEnumAsByte<EAudioPersonalityType> InPersonality, TEnumAsByte<EAudioClassType> CharacterType, EFaction InFaction);
	void ChatUnmutePlayer(class APlayerState* Unmuted);
	void ChatMutePlayer(class APlayerState* Muted);
	struct FOwnershipResponse CanUseLoadoutItem(class UClass* /*ULoadoutSelection*/ LoadoutSelection, class UClass* /*AInventoryItem*/ Item);
	struct FOwnershipResponse CanUseLoadout(class UClass* /*ULoadoutSelection*/ LoadoutSelection);
	struct FOwnershipResponse CanUseCharacter(class UClass* /*ATBLCharacter*/ CharacterSubclass);
	bool CanSwitchCamera();
	bool CanPlayerCallKickVote(class APlayerState* KickTarget);
	void BugAnimation();
	void BroadcastDebugMessage(const struct FString& Message, const struct FColor& TextColor, float Duration, bool bToAll, bool bTeamOnly);
	void Benchmark(int Workscale);
	void AutoInputRecord();
	void AttachCameraToWeapon(const struct FName& WeaponName, bool bUseWeaponRotation);
	void AttachCameraToProjectile(bool bUseProjectileRotation);
	void AttachCameraToHorse(const struct FName& BoneName, bool bUseBoneRotation);
	void AttachCameraToBone(const struct FName& BoneName, bool bUseBoneRotation);
	void AnalyticsQuery();
	void AdminSay(struct FString* Msg);
	void Admin(const struct FString& Cmd);
	void AddViewedItem(const struct FPrimaryAssetId& ItemId);
	void AddUncheckedLevelUpResult(const struct FPrimaryAssetId& NewLevelUpItem);
	void AddOnPossessedAutoVo(const struct FOnPossessedAutoVo& OnPossessedAutoVo);
	void AddFriendByName(const struct FString& PlayerId);
	void AddFriendById(const struct FString& UniqueId);
	void AddAllViewedItems(TEnumAsByte<EAudioClassType> CharacterType, EFaction Faction, const struct FName& AssetsTypeName);
};


// Class TBL.TBLPlayerControllerCinematic
// 0x0000 (0x1478 - 0x1478)
class ATBLPlayerControllerCinematic : public ATBLPlayerController
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPlayerControllerCinematic"));
		return ptr;
	}

};


// Class TBL.ArenaPlayerController
// 0x0008 (0x1480 - 0x1478)
class AArenaPlayerController : public ATBLPlayerControllerCinematic
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x1478(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ArenaPlayerController"));
		return ptr;
	}

};


// Class TBL.TBLPlayerState
// 0x0780 (0x0AD8 - 0x0358)
class ATBLPlayerState : public APlayerState
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0358(0x0008) MISSED OFFSET
	struct FTBLOnlineStats                             OnlineStats;                                              // 0x0360(0x00C8) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_RepNotify, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnlineStatsUpdated;                                       // 0x0428(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnlineStatsLogin;                                         // 0x0438(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnlineStatsLevelUp;                                       // 0x0448(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnlineStatsStatValueChanged;                              // 0x0458(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnlineStatsOriginalValueChanged;                          // 0x0468(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnlineStoreOnCurrencyChanged;                             // 0x0478(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnlineInventoryRefreshed;                                 // 0x0488(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<struct FLevelUpResult>                      CurrentMatchLevelUpResults;                               // 0x0498(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FTBLOnlineAccount                           OnlineAccount;                                            // 0x04A8(0x00B8) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_RepNotify, CPF_NativeAccessSpecifierPublic)
	float                                              DeathTime;                                                // 0x0560(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0564(0x0004) MISSED OFFSET
	TArray<struct FStatEntry>                          RespawnStats;                                             // 0x0568(0x0010) (CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRespawnSpecialItem                         RespawnSpecialItem;                                       // 0x0578(0x0004) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x057C(0x0004) MISSED OFFSET
	TArray<class AActor*>                              RespawnConstructableActors;                               // 0x0580(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLTeam*                                    TeamBeforeBecameInactive;                                 // 0x0590(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnNextSpawnTeamChanged;                                   // 0x0598(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              AttachToProjectile;                                       // 0x05A8(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               WaitForAttachToProjectile;                                // 0x05B0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                            PlatformOSSUniqueId;                                      // 0x05B8(0x0028) (CPF_Net, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                Kills;                                                    // 0x05E0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Deaths;                                                   // 0x05E4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Assists;                                                  // 0x05E8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Takedowns;                                                // 0x05EC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                GlobalRank;                                               // 0x05F0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                PlayerScore;                                              // 0x05F4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ProjectilesFired;                                         // 0x05F8(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x05FC(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnGlobalRankChanged;                                      // 0x0600(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FMulticastScriptDelegate                    OnTakedownsChanged;                                       // 0x0610(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UClass* /*ATBLCharacter*/                    NextSpawnPawnSubclass;                                    // 0x0620(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FPrimaryAssetId, EFaction>             WhitelistAssets;                                          // 0x0628(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FString                                     PartyId;                                                  // 0x0678(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                NumInParty;                                               // 0x0688(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x4];                                       // 0x068C(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnKillsChanged;                                           // 0x0690(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDeathsChanged;                                          // 0x06A0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x18];                                      // 0x06B0(0x0018) MISSED OFFSET
	TArray<TWeakObjectPtr<class ATBLPlayerState>>      DownCausingPlayers;                                       // 0x06C8(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    ScoreChanged;                                             // 0x06D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x70];                                      // 0x06E8(0x0070) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnScoreEvent;                                             // 0x0758(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UClass* /*ATBLCharacter*/                    CachedMeshClass;                                          // 0x0768(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           CachedMeshFaction;                                        // 0x0770(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0771(0x0007) MISSED OFFSET
	class USkeletalMesh*                               CachedMesh;                                               // 0x0778(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, float>                          CachedMeshMorphTargets;                                   // 0x0780(0x0050) (CPF_NativeAccessSpecifierPublic)
	TArray<class USkeletalMesh*>                       CachedGoreHeadMeshes;                                     // 0x07D0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWantsOnlineLoad;                                         // 0x07E0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bReplicateOnlineAccount;                                  // 0x07E1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EAudioClassType>                       BotSelectedAssetsType;                                    // 0x07E2(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x5];                                       // 0x07E3(0x0005) MISSED OFFSET
	struct FCustomizationConstraintsQuery              BotCustomizationQuery;                                    // 0x07E8(0x0010) (CPF_Transient, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FString                                     GameSparksUserId;                                         // 0x07F8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnTeamChanged;                                            // 0x0808(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               HasBeenAutoBalanced;                                      // 0x0818(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0819(0x0007) MISSED OFFSET
	struct FDeathRecap                                 DeathRecap;                                               // 0x0820(0x0078) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NativeAccessSpecifierPublic)
	bool                                               bCustomizationUploaded;                                   // 0x0898(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x7];                                       // 0x0899(0x0007) MISSED OFFSET
	TMap<unsigned char, struct FDeadCharacter>         DeadCharacters;                                           // 0x08A0(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      DeadCharacterId;                                          // 0x08F0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x7];                                       // 0x08F1(0x0007) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnPlatformChanged;                                        // 0x08F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData12[0x1];                                       // 0x0908(0x0001) MISSED OFFSET
	bool                                               bIsFriend;                                                // 0x0909(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanBeAutoBalanced;                                       // 0x090A(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsVIP;                                                   // 0x090B(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EAudioPersonalityType>                 EquippedPersonalityType;                                  // 0x090C(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x3];                                       // 0x090D(0x0003) MISSED OFFSET
	TArray<struct FScoreEventByName>                   PlayerScoreEventsByText;                                  // 0x0910(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bQuitter;                                                 // 0x0920(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x7];                                       // 0x0921(0x0007) MISSED OFFSET
	TArray<struct FTimeStampedDamageTakenEvent>        DamageTakenEvents;                                        // 0x0928(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATBLCharacter>                LastDeathRecapCharacter;                                  // 0x0938(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x18];                                      // 0x0940(0x0018) MISSED OFFSET
	int                                                ActualStartTime;                                          // 0x0958(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                InactiveTime;                                             // 0x095C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FText                                       CustomizationNickName;                                    // 0x0960(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              ShowLoadoutDelayTime;                                     // 0x0978(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0xC];                                       // 0x097C(0x000C) MISSED OFFSET
	float                                              TimeSinceLastOutOfCombat;                                 // 0x0988(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              OutOfCombatTimeRemaining;                                 // 0x098C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class ATBLTeam*                                    NextSpawnTeam;                                            // 0x0990(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class ATBLTeam*                                    Team;                                                     // 0x0998(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EFaction                                           Faction;                                                  // 0x09A0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsNPC;                                                   // 0x09A1(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsPlayerCustomizedBot;                                   // 0x09A2(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x5];                                       // 0x09A3(0x0005) MISSED OFFSET
	class UClass* /*ATBLCharacter*/                    CharacterClass;                                           // 0x09A8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class ATBLCharacter*                               Character;                                                // 0x09B0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FText                                       LocalizablePlayerName;                                    // 0x09B8(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FReplCustomizationPresetMapping             Presets;                                                  // 0x09D0(0x0048) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_RepNotify, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bMustSetLoadout;                                          // 0x0A18(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData18[0x3];                                       // 0x0A19(0x0003) MISSED OFFSET
	struct FLinearColor                                AgathaDisplayColor;                                       // 0x0A1C(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLinearColor                                MasonDisplayColor;                                        // 0x0A2C(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLinearColor                                TenosiaDisplayColor;                                      // 0x0A3C(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLinearColor                                SpectatorDisplayColor;                                    // 0x0A4C(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData19[0x4];                                       // 0x0A5C(0x0004) MISSED OFFSET
	struct FLoadout                                    NextSpawnLoadout;                                         // 0x0A60(0x0038) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsNextSpawnLoadoutOverridden;                            // 0x0A98(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData20[0x3];                                       // 0x0A99(0x0003) MISSED OFFSET
	float                                              TotalTeamDamage;                                          // 0x0A9C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TotalIdleTime;                                            // 0x0AA0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData21[0x4];                                       // 0x0AA4(0x0004) MISSED OFFSET
	TArray<struct FInstigatedVote>                     InstigatedVotes;                                          // 0x0AA8(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastVotedOnTime;                                          // 0x0AB8(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EHardwarePlatform                                  ClientPlatform;                                           // 0x0ABC(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData22[0xB];                                       // 0x0ABD(0x000B) MISSED OFFSET
	TArray<class ATBLPlayerState*>                     FriendsList;                                              // 0x0AC8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPlayerState"));
		return ptr;
	}


	void UploadPing();
	void UpdatePlayerAutoBalanceEligibility(bool CanBeAutoBalanced);
	void UpdateDeadCharacters();
	void SyncScoreEvents(TArray<struct FScoreEventByName> ScoreEvents);
	TArray<struct FScoreEventStruct> StatsGetPlayerScoreEvents();
	void SetPlayerVIPStatus(bool IsVIP);
	void SetPartyId(const struct FString& InPartyId);
	void SetNumInParty(int inNumInParty);
	void SetIsFriend(bool IsFriend);
	void ServerUploadPing(unsigned char NewPing);
	void ServerUpdateFriendStatus(class ATBLPlayerState* MyFriend, bool IsFriend);
	TArray<class ATBLPlayerState*> ReturnListOfFriends(TArray<class ATBLPlayerState*> PlayerStates);
	void ResetPartyId();
	void OnRep_Team();
	void OnRep_Takedowns();
	void OnRep_Presets();
	void OnRep_PlayerScore();
	void OnRep_PlatformUniqueId();
	void OnRep_PersonalityType();
	void OnRep_OnlineStats();
	void OnRep_OnlineAccount();
	void OnRep_NextSpawnTeam();
	void OnRep_NextSpawnPawnSubclass();
	void OnRep_Kills();
	void OnRep_GlobalRank();
	void OnRep_Deaths();
	void OnRep_ClientPlatform();
	void OnRep_CharacterClass();
	void OnRep_bMustSetLoadout();
	void OnRep_AttachToProjectile();
	void OnPawnDamaged(const struct FDamageTakenEvent& Event);
	void LocalPlayerPartyLeft(bool Result);
	void LocalPlayerPartyInviteAccepted(const struct FString& NewPartyId);
	void LocalPlayerPartyDisbanded();
	void LocalPlayerPartyCreated(bool Result, const struct FString& NewPartyId);
	bool IsInParty();
	bool GetPlayerVIPStatus();
	TEnumAsByte<EAudioPersonalityType> GetPersonalityType();
	struct FString GetPartyId();
	int GetNumInParty();
	bool GetIsFriend();
	struct FLinearColor GetDisplayColor();
	void GetDeathRecapEntryForTakeDowner(struct FDeathRecapEntry* Entry);
	void GetDeathRecapEntryForKiller(struct FDeathRecapEntry* Entry);
	TArray<struct FDeathRecapEntry> GetDeathRecapEntries();
	class ATBLCharacter* GetDeadCharacter(unsigned char ID);
	EHardwarePlatform GetClientHardwarePlatform();
	class UClass* /*ATBLCharacter*/ GetCharacterClass(bool* IsDead, bool* IsSpectating);
	void GetAllPresetsAsArray(TArray<struct FCustomizationPreset>* OutPresets);
	void ClientSetPlayerVIPStatus(bool IsVIP);
	void ClientScoreOverrideEvent(const struct FName& RowName, int ScoreAmount, class ATBLPlayerState* Killed, int16_t NoveltyScoreRowIndex);
	void ClientScoreEvent(const struct FName& RowName, int ScoreAmount, class ATBLPlayerState* Killed, int Bonuses, int16_t NoveltyScoreRowIndex);
	void ClientScoreCurveEvent(const struct FName& RowName, int ScoreCurveAmount, int ScoreAmount, class ATBLPlayerState* Killed, int16_t NoveltyScoreRowIndex);
	void ClientForceReplicate();
	void ClientBlockInput(bool BlockInput);
	bool CanBeAutoBalanced();
	void BroadcastStatsLevelUp(TArray<struct FLevelUpResult> NewLevelUpResults);
	void BroadcastPauseRagdolls(bool bPaused);
	void AddDeadCharacter(unsigned char ID, class ATBLCharacter* InCharacter, bool bSpawnedHead);
};


// Class TBL.ArenaPlayerState
// 0x0038 (0x0B10 - 0x0AD8)
class AArenaPlayerState : public ATBLPlayerState
{
public:
	struct FMulticastScriptDelegate                    OnLivesLeftChanged;                                       // 0x0AD8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnbIsDeadAndOutOfLivesChanged;                            // 0x0AE8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnIsPartOfRoundChanged;                                   // 0x0AF8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	int                                                LivesLeft;                                                // 0x0B08(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      bIsPartOfRound : 1;                                       // 0x0B0C(0x0001) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      bIsDeadAndOutOfLives : 1;                                 // 0x0B0C(0x0001) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0B0D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ArenaPlayerState"));
		return ptr;
	}


	void OnRep_LivesLeft();
	void OnRep_IsPartOfRound();
	void OnRep_IsDeadAndOutOfLives();
	int GetLivesLeft();
	bool GetIsPartOfRound();
	bool GetIsDeadAndOutOfLives();
};


// Class TBL.AsnycLoadingHelpers
// 0x0000 (0x0028 - 0x0028)
class UAsnycLoadingHelpers : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AsnycLoadingHelpers"));
		return ptr;
	}

};


// Class TBL.AttachRagdollInterface
// 0x0000 (0x0028 - 0x0028)
class UAttachRagdollInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AttachRagdollInterface"));
		return ptr;
	}


	void OnRagdollDetach(class ATBLCharacter* Character);
	void OnRagdollAttach(class ATBLCharacter* Character);
	void GetAttachRagdollParams(class ATBLCharacter* Character, const struct FDeathDamageTakenEvent& DamageEvent, struct FAttachRagdollParams* AttachRagdollParams);
};


// Class TBL.TracerType
// 0x0068 (0x00A8 - 0x0040)
class UTracerType : public UTBLObject
{
public:
	TArray<class UTracerShape*>                        TracerShapes;                                             // 0x0040(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDoWorldHit;                                              // 0x0050(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDoWorldHitAngleCheck;                                    // 0x0051(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0052(0x0002) MISSED OFFSET
	float                                              FacingEnemyMaxAngle;                                      // 0x0054(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FacingEnemyMaxAngleVertical;                              // 0x0058(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FacingTeammateMaxAngle;                                   // 0x005C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FacingOtherMaxAngle;                                      // 0x0060(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AngleCheckLocationOffset;                                 // 0x0064(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDoWeaponTipAngleCheck;                                   // 0x0068(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	struct FName                                       WeaponTipComponentName;                                   // 0x006C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FWeaponTipMaxAngle                          WeaponTipMaxAngle;                                        // 0x0074(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FWeaponTipMaxAngle                          WeaponTipDelayAngle;                                      // 0x007C(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              WeaponTipDelayTime;                                       // 0x0084(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              WeaponTipActiveTime;                                      // 0x0088(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              InvalidStabTime;                                          // 0x008C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              InvalidOverheadTime;                                      // 0x0090(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FColor                                      WeaponTipDebugColor;                                      // 0x0094(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FColor                                      BackSwingDebugColor;                                      // 0x0098(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FColor                                      InvalidWindupDebugColor;                                  // 0x009C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                Version;                                                  // 0x00A0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TracerType"));
		return ptr;
	}

};


// Class TBL.AttackTracers
// 0x0008 (0x00B0 - 0x00A8)
class UAttackTracers : public UTracerType
{
public:
	bool                                               bIgnoreTeammates;                                         // 0x00A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bParryImmediately;                                        // 0x00A9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00AA(0x0002) MISSED OFFSET
	struct FColor                                      DebugColor;                                               // 0x00AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AttackTracers"));
		return ptr;
	}

};


// Class TBL.AttackType
// 0x01E8 (0x0290 - 0x00A8)
class UAttackType : public UAssemblyBlueprint
{
public:
	struct FText                                       Description;                                              // 0x00A8(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_AssetRegistrySearchable, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanComboInto;                                            // 0x00C0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanComboOutOf;                                           // 0x00C1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanComboIntoSelf;                                        // 0x00C2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanRiposte;                                              // 0x00C3(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EComboTimingPolicy                                 ComboFromRecoveryPolicy;                                  // 0x00C4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EComboTimingPolicy                                 ComboFromThwackPolicy;                                    // 0x00C5(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EComboTimingPolicy                                 ComboFromReleasePolicy;                                   // 0x00C6(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EComboTimingPolicy                                 ComboFromParryReleasePolicy;                              // 0x00C7(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EComboTimingPolicy                                 ComboFromJabPolicy;                                       // 0x00C8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanQueueAttack;                                          // 0x00C9(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanBeCancelled;                                          // 0x00CA(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCancelUsesStamina;                                       // 0x00CB(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanFeint;                                                // 0x00CC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanFeintInto;                                            // 0x00CD(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanCrouch;                                               // 0x00CE(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EAttackTypeCategory                                AttackTypeCategory;                                       // 0x00CF(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EAnimationType                                     AnimationType;                                            // 0x00D0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00D1(0x0003) MISSED OFFSET
	float                                              MinimumHoldingTime;                                       // 0x00D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ECombatStateBehavior                               CombatStateBehavior;                                      // 0x00D8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EHeldBehavior                                      HeldBehavior;                                             // 0x00D9(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EWindupInputReleasedPolicy                         WindupInputReleasedPolicy;                                // 0x00DA(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EReleaseCancelPolicy                               ReleaseCancelPolicy;                                      // 0x00DB(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EAttackerBlockedPolicy                             AttackerBlockedPolicy;                                    // 0x00DC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EAttackerBlockedPolicy                             AttackerCounteredPolicy;                                  // 0x00DD(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EDefenderBlockedPolicy                             DefenderBlockedPolicy;                                    // 0x00DE(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EDefenderBlockedPolicy                             ParrySuccessShieldBreakPolicy;                            // 0x00DF(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EPassiveShieldPolicy                               PassiveShieldPolicy;                                      // 0x00E0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET
	TMap<EBlockingCategory, EAttackerBlockedPolicy>    BlockedPolicyPerCategory;                                 // 0x00E8(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_AssetRegistrySearchable, CPF_NativeAccessSpecifierPublic)
	EWorldHitPolicy                                    WorldHitPolicy;                                           // 0x0138(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EWorldHitPolicy                                    BreakableHitPolicy;                                       // 0x0139(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EOnHitPolicy                                       OnHitPolicy;                                              // 0x013A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ETeamHitPolicy                                     TeamHitPolicy;                                            // 0x013B(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanClash;                                                // 0x013C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EClashPolicy                                       ClashPolicy;                                              // 0x013D(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDoEarlyHits;                                             // 0x013E(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x1];                                       // 0x013F(0x0001) MISSED OFFSET
	float                                              EarlyHitDelay;                                            // 0x0140(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EEarlyHitPolicy                                    EarlyHitPolicy;                                           // 0x0144(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FEarlyHitParams                             EarlyHitParams;                                           // 0x0145(0x0003) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_NativeAccessSpecifierPublic)
	ETeamHitDamagePolicy                               TeamHitDamagePolicy;                                      // 0x0148(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EOnStaminaDrainedPolicy                            OnStaminaDrainedPolicy;                                   // 0x0149(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EOnHitEffect                                       TargetHitEffect;                                          // 0x014A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EOnHitEffect                                       TargetHitEffectHorse;                                     // 0x014B(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseStaminaDrain;                                         // 0x014C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x014D(0x0003) MISSED OFFSET
	struct FStaminaDrain                               StaminaDrain;                                             // 0x0150(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_AssetRegistrySearchable, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseTurnLock;                                             // 0x0170(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0171(0x0003) MISSED OFFSET
	struct FTurnLockParams                             TurnLockParams;                                           // 0x0174(0x003C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_NativeAccessSpecifierPublic)
	ECombatStateEvent                                  StartTurnLock;                                            // 0x01B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseHorseDamageModifier;                                  // 0x01B1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x2];                                       // 0x01B2(0x0002) MISSED OFFSET
	float                                              HorseDamageModifier;                                      // 0x01B4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseLocationBasedDamage;                                  // 0x01B8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseProjectileDamageModifiers;                            // 0x01B9(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseDownedDamageModifier;                                 // 0x01BA(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x1];                                       // 0x01BB(0x0001) MISSED OFFSET
	float                                              DownedDamageModifier;                                     // 0x01BC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseChargeStabDamageModifier;                             // 0x01C0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET
	class UCurveFloat*                                 ChargeStabDamageModifier;                                 // 0x01C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsUninterruptibleInRelease;                              // 0x01D0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHorseLeftSideAltAttack;                                  // 0x01D1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShouldLoopRelease;                                       // 0x01D2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseParryBreakDamageModifier;                             // 0x01D3(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSlowdownOnFire;                                          // 0x01D4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x3];                                       // 0x01D5(0x0003) MISSED OFFSET
	TArray<struct FName>                               CanBeBlockedByParryBox;                                   // 0x01D8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FCombatStateSlowdown>    CombatStateSlowdown;                                      // 0x01E8(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseAttackTypeModifier;                                   // 0x0238(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAddComboFromBlockedTime;                                 // 0x0239(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableArmCollision;                                     // 0x023A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseTracerHitDirection;                                   // 0x023B(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCancelOnAttackInput;                                     // 0x023C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x3];                                       // 0x023D(0x0003) MISSED OFFSET
	class UCurveVector*                                DamageScaleOnHorseback;                                   // 0x0240(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveVector*                                DamageScaleAgainstMountedRiders;                          // 0x0248(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EActivateAbility                                   ActivateAbility;                                          // 0x0250(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0251(0x0003) MISSED OFFSET
	struct FName                                       ActivateCombatState;                                      // 0x0254(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                Version;                                                  // 0x025C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       AttackCategory;                                           // 0x0260(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FullBodyStartOfReleaseTime;                               // 0x0268(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x4];                                       // 0x026C(0x0004) MISSED OFFSET
	TArray<struct FFullBodyAnimationModifier>          FullBodyAnimationModifiers;                               // 0x0270(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanComboOutOfIfMissed;                                   // 0x0280(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanHoldCombo;                                            // 0x0281(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanComboInInterrupt;                                     // 0x0282(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanCancelOtherAttack;                                    // 0x0283(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanAlwaysQueueCombo;                                     // 0x0284(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanBendUpperBody;                                        // 0x0285(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseLockTurnAngle;                                        // 0x0286(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData12[0x1];                                       // 0x0287(0x0001) MISSED OFFSET
	float                                              LockTurnAngle;                                            // 0x0288(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData13[0x4];                                       // 0x028C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AttackType"));
		return ptr;
	}


	EOnHitEffect GetHitEffect(class AActor* Target);
};


// Class TBL.AudioBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UAudioBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AudioBlueprintLibrary"));
		return ptr;
	}


	static void StopMusic(class UObject* WorldContextObject, int TransitionDurationMs);
	static void ResumeMusic(class UObject* WorldContextObject);
	static void PostMusicEvent(class UObject* WorldContextObject, class UAkAudioEvent* Event, int TransitionDurationMs);
	static void PauseMusic(class UObject* WorldContextObject);
	static bool IsPlayingMusic(class UObject* WorldContextObject);
};


// Class TBL.TracerShape
// 0x0020 (0x0060 - 0x0040)
class UTracerShape : public UTBLObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0040(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TracerShape"));
		return ptr;
	}

};


// Class TBL.AuraTracers
// 0x0120 (0x0180 - 0x0060)
class UAuraTracers : public UTracerShape
{
public:
	class UBlueprint*                                  ShapeBlueprint;                                           // 0x0060(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       ShapeComponentName;                                       // 0x0068(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUsePrecisionCameraCheck;                                 // 0x0070(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseCameraAim;                                            // 0x0071(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0xE];                                       // 0x0072(0x000E) MISSED OFFSET
	struct FTransform                                  RelativeTransform;                                        // 0x0080(0x0030) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FTransform                                  CurrentTransform;                                         // 0x00B0(0x0030) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FTransform                                  AimTransform;                                             // 0x00E0(0x0030) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FTransform                                  LeftTransform;                                            // 0x0110(0x0030) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FTransform                                  RightTransform;                                           // 0x0140(0x0030) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     BoxExtents;                                               // 0x0170(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x017C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AuraTracers"));
		return ptr;
	}

};


// Class TBL.AutoInvalidationBox
// 0x0018 (0x0150 - 0x0138)
class UAutoInvalidationBox : public UInvalidationBox
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0138(0x0010) MISSED OFFSET
	int                                                UpdateWeight;                                             // 0x0148(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EStaggeredUpdateCategory                           UpdateCategory;                                           // 0x014C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x014D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AutoInvalidationBox"));
		return ptr;
	}

};


// Class TBL.AutomationApiBase
// 0x0000 (0x0028 - 0x0028)
class UAutomationApiBase : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AutomationApiBase"));
		return ptr;
	}


	void MakeTeamSelection(class ATBLPlayerController* PlayerController);
	void MakeSpawnSelection(class ATBLPlayerController* PlayerController);
};


// Class TBL.AutomationLevelSequenceActor
// 0x0018 (0x0300 - 0x02E8)
class AAutomationLevelSequenceActor : public ALevelSequenceActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x02E8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AutomationLevelSequenceActor"));
		return ptr;
	}


	void OnStop();
	void OnSequenceEvent(const struct FAutomationSequenceEvent& SequenceEvent);
};


// Class TBL.AutomationSettings
// 0x00A0 (0x00C8 - 0x0028)
class UAutomationSettings : public UObject
{
public:
	float                                              MaxAiPlayerTestDuration;                                  // 0x0028(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MaxAiPlayerTestCharacterCount;                            // 0x002C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             ServerPreProfileCommands;                                 // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_NoClear, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             ServerPostProfileCommands;                                // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_NoClear, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             ClientPreProfileCommands;                                 // 0x0050(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_NoClear, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                        AutomationClass;                                          // 0x0060(0x0028) (CPF_Config, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             EnvironmentTestCsvColumn;                                 // 0x0088(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              EnvironmentPauseTime;                                     // 0x0098(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	struct FString                                     SplunkURL;                                                // 0x00A0(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     SplunkToken;                                              // 0x00B0(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseSplunk;                                               // 0x00C0(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AutomationSettings"));
		return ptr;
	}

};


// Class TBL.TBLCharacterBase
// 0x00B0 (0x06A0 - 0x05F0)
class ATBLCharacterBase : public ACharacter
{
public:
	struct FCharacterSignificanceState                 SignificanceState;                                        // 0x05F0(0x0028) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	class UTBLCharacterMovementBaseComponent*          MovementBase;                                             // 0x0618(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ViewDistance;                                             // 0x0620(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0624(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnRecentlyRendered;                                       // 0x0628(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	bool                                               bWasRecentlyRendered;                                     // 0x0638(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0639(0x0003) MISSED OFFSET
	int                                                LastAnimUpdateRate;                                       // 0x063C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0640(0x0008) MISSED OFFSET
	bool                                               bRootMotionActive;                                        // 0x0648(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bMontageActive;                                           // 0x0649(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWeaponTracersActive;                                     // 0x064A(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWaitingForAnimNotify;                                    // 0x064B(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIgnoreFaceRotation;                                      // 0x064C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsIdleAnimation;                                         // 0x064D(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsCarryableNPC;                                          // 0x064E(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x1];                                       // 0x064F(0x0001) MISSED OFFSET
	float                                              LastCarryTime;                                            // 0x0650(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EMeshVisibilityFlag                                MeshVisibilityFlag;                                       // 0x0654(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0655(0x0003) MISSED OFFSET
	float                                              HiddenAnimUpdateMaxDistance;                              // 0x0658(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bKillUponLanding;                                         // 0x065C(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x065D(0x0003) MISSED OFFSET
	float                                              FallDamageStartingSpeed;                                  // 0x0660(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FallDamageScale;                                          // 0x0664(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDamageSource*                               FallDamageSource;                                         // 0x0668(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FPhysMatFallingDamageMultiplier>     FallingDamagePhysMatMultipliers;                          // 0x0670(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               SkipClientOptimizations;                                  // 0x0680(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlacedInWorld;                                           // 0x0681(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x6];                                       // 0x0682(0x0006) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnRootTransformUpdated;                                   // 0x0688(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0698(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLCharacterBase"));
		return ptr;
	}


	void ShowThirdPersonMesh();
	static void SetCinematicSpawnInEnabled(class UObject* WorldContextObject, bool bEnabled);
	void PreRecalcRequiredBones_Mesh1P();
	void PostRecalcRequiredBones_Mesh1P();
	bool IsTargetable();
	bool IsFirstPerson();
	bool IsCustomizationCharacter();
	bool IsAlive();
	float GetTimeSinceCharacterWasCarried();
	EMeshVisibilityFlag GetMeshVisibilityFlag();
	float GetCreationTime();
	void EnableMeshCollisionForFakeClient();
	void DisableMeshCollisionForFakeClient();
};


// Class TBL.SiegeEngine
// 0x02A0 (0x0940 - 0x06A0)
class ASiegeEngine : public ATBLCharacterBase
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x06A0(0x0018) MISSED OFFSET
	struct FReplicationPredictionState                 PredictionState;                                          // 0x06B8(0x0070) (CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimationSet*/                    AnimationSet;                                             // 0x0728(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimationSet*/                    CharacterAnimationSet;                                    // 0x0730(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimationSet*/                    CharacterAnimationSet1P;                                  // 0x0738(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               Driver;                                                   // 0x0740(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AController*                                 DriverController;                                         // 0x0748(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AAIController*                               AIController;                                             // 0x0750(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkComponent*                                AudioComponent;                                           // 0x0758(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDriverMount;                                            // 0x0760(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDriverDismount;                                         // 0x0770(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<EWeaponAbilitySlotKey>                      DisableAbilitySlot;                                       // 0x0780(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       FireAbilityName;                                          // 0x0790(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CharacterAttachSocketName;                                // 0x0798(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CameraAttachSocketName;                                   // 0x07A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              YawRotationLimit;                                         // 0x07A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PitchRotationLimit;                                       // 0x07AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FTurnLimitSound                             TurnLimitSound;                                           // 0x07B0(0x0020) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AInventoryItem*/                   SiegeInventoryItemClass;                                  // 0x07D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AActor*                                      AIAimHintLocation;                                        // 0x07D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              SiegeInventoryItem;                                       // 0x07E0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFireHeld;                                                // 0x07E8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x07E9(0x0003) MISSED OFFSET
	float                                              RotationYaw;                                              // 0x07EC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseRotationYaw;                                          // 0x07F0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCompressRotationYaw;                                     // 0x07F1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2];                                       // 0x07F2(0x0002) MISSED OFFSET
	struct FName                                       SiegeEngineName;                                          // 0x07F4(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ESiegeEngineType                                   SiegeEngineType;                                          // 0x07FC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x07FD(0x0003) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnReadyToFire;                                            // 0x0800(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnLoadedAmmo;                                             // 0x0810(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               AllowEmoteAnimations;                                     // 0x0820(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0821(0x0007) MISSED OFFSET
	class ATBLCharacter*                               ReplicatedDriver;                                         // 0x0828(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseMountCombatState;                                     // 0x0830(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseDismountCombatState;                                  // 0x0831(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0xE];                                       // 0x0832(0x000E) MISSED OFFSET
	struct FMountBlendParams                           MountBlendParams;                                         // 0x0840(0x00D0) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               ValidCombatStates;                                        // 0x0910(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bNeedToInitializeTBLCharacter;                            // 0x0920(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0921(0x0003) MISSED OFFSET
	float                                              GamepadUsePressedTime;                                    // 0x0924(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class USceneComponent*>                     SiegeMountPointList;                                      // 0x0928(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0938(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SiegeEngine"));
		return ptr;
	}


	void UseKeyRepeat();
	void UseKeyReleased();
	void UseKeyPressed();
	void ServerDismountPressed();
	void OnTurnLockLimit(float DeltaTime, float DeltaYaw);
	void OnRiderCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState);
	void OnRep_Driver();
	void OnDriverSetRagdollPhysics();
	void OnDriverKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnAbilityError(class AActor* Initiator, TEnumAsByte<EResultCode> Code, class AAbilityInvocation* Invocation, const struct FName& AttackName, class UClass* /*AInventoryItem*/ ItemClass);
	void MountPressed(class ATBLCharacter* Character);
	bool IsLoaded();
	class UCombatStateComponent* GetSiegeEngineCombatStateComponent();
	float GetMinChargingToFire();
	class AActor* GetLoadedItem();
	class ATBLCharacter* GetDriver();
	float GetChargingPercent();
	void ForceDismount(EDismountType DismountType);
	void FocusReleased();
	void FocusPressed();
	void FireReleased();
	void Fire();
	void DismountReleased();
	void DismountPressed();
	bool CanMount(class APawn* Pawn);
	void BroadcastSetRotationYaw(float NewRotationYaw);
	void BroadcastMount(class ATBLCharacter* Character);
	void BroadcastInterpToMountLocation(class ATBLCharacter* Character);
	void BroadcastDismount(EDismountType DismountType);
	void ArrowCamReleased();
	void ArrowCamPressed();
	void ArrowCamGamePadReleased();
	void ArrowCamGamePadPressed();
};


// Class TBL.Ballista
// 0x0100 (0x0A40 - 0x0940)
class ABallista : public ASiegeEngine
{
public:
	class UAbilitiesComponent*                         Abilities;                                                // 0x0940(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class URepairableComponent*                        Repairable;                                               // 0x0948(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStatsComponent*                             Stats;                                                    // 0x0950(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnLimitStrength;                                        // 0x0958(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      RemoteViewYaw;                                            // 0x095C(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x095D(0x0003) MISSED OFFSET
	float                                              RotationSpeed;                                            // 0x0960(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bLoaded : 1;                                              // 0x0964(0x0001) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bRepaired : 1;                                            // 0x0964(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0965(0x0003) MISSED OFFSET
	struct FName                                       AmmoAttachSocketName;                                     // 0x0968(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               TurningSoundAKEvent;                                      // 0x0970(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAkAudioEvent*>                       FiringSounds;                                             // 0x0978(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ReloadSound;                                              // 0x0988(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMesh*                               HealthyMesh;                                              // 0x0990(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMesh*                               DamagedMesh;                                              // 0x0998(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMesh*                               BrokenMesh;                                               // 0x09A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UParticleSystem*                             BrokenParticle;                                           // 0x09A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationAsset*                             BrokenAnimation;                                          // 0x09B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimInstance*/                    AnimationBlueprint;                                       // 0x09B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnRepaired;                                               // 0x09C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBallistaKilled;                                         // 0x09D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FSiegeEngineDamageSounds                    DamageSounds;                                             // 0x09E0(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              DamagedThreshold;                                         // 0x0A00(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsBroken;                                                // 0x0A04(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bReplicatedIsBroken;                                      // 0x0A05(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0A06(0x0002) MISSED OFFSET
	struct FRotator                                    LastControlRotation;                                      // 0x0A08(0x000C) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    LastAimRotation;                                          // 0x0A14(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                HorizLockId;                                              // 0x0A20(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                VertLockId;                                               // 0x0A24(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                TurnRateId;                                               // 0x0A28(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RotationWeight;                                           // 0x0A2C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RotationWeightInterpSpeed;                                // 0x0A30(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0xC];                                       // 0x0A34(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.Ballista"));
		return ptr;
	}


	void SetBroken(bool bInBroken);
	void OnRep_RotationSpeed();
	void OnRep_Broken();
	void OnKilled(const struct FDeathDamageTakenEvent& Event);
	void OnHealthChanged(float Amount, class AActor* Initiator);
	void OnDamageTaken(const struct FDamageTakenEvent& Event);
	void EventUsePressed(class APawn* InPawn, class UInteractableComponent* InInteractable);
};


// Class TBL.TBLAchievementTask
// 0x0018 (0x0040 - 0x0028)
class UTBLAchievementTask : public UObject
{
public:
	struct FMulticastScriptDelegate                    OnProgressUpdated;                                        // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bResetOnDeath;                                            // 0x0038(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bResetOnNewMatch;                                         // 0x0039(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAchievementTask"));
		return ptr;
	}


	bool IsComplete();
	float GetProgressFloat();
	void BroadcastProgressUpdated();
};


// Class TBL.TBLAchievementTaskCountable
// 0x0010 (0x0050 - 0x0040)
class UTBLAchievementTaskCountable : public UTBLAchievementTask
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0040(0x0004) MISSED OFFSET
	int                                                Count;                                                    // 0x0044(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                RequiredCount;                                            // 0x0048(0x0004) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAchievementTaskCountable"));
		return ptr;
	}

};


// Class TBL.BandageXTimesTask
// 0x0008 (0x0058 - 0x0050)
class UBandageXTimesTask : public UTBLAchievementTaskCountable
{
public:
	class UClass* /*AInventoryItem*/                   BandageClass;                                             // 0x0050(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BandageXTimesTask"));
		return ptr;
	}

};


// Class TBL.TBLAchievementWorker
// 0x0098 (0x00C0 - 0x0028)
class UTBLAchievementWorker : public UObject
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0028(0x0038) MISSED OFFSET
	TArray<class UTBLAchievementTask*>                 LocalTasks;                                               // 0x0060(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<class ATBLPlayerController*, struct FRemoteTaskList> RemoteTasks;                                              // 0x0070(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAchievementWorker"));
		return ptr;
	}

};


// Class TBL.BandageXTimesWorker
// 0x0000 (0x00C0 - 0x00C0)
class UBandageXTimesWorker : public UTBLAchievementWorker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BandageXTimesWorker"));
		return ptr;
	}


	void OnPlayerUsedItem(class AInventoryItem* Item, class ATBLPlayerController* Controller);
};


// Class TBL.CombatState
// 0x0148 (0x0170 - 0x0028)
class UCombatState : public UAssemblyInstance
{
public:
	int                                                Version;                                                  // 0x0028(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       StateName;                                                // 0x002C(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<TEnumAsByte<EMod>>                          Modifiers;                                                // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FCombatStateModifiers                       ModifierList;                                             // 0x0048(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsAttackState : 1;                                       // 0x0050(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsSprintState : 1;                                       // 0x0050(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bRemainInSprint : 1;                                      // 0x0050(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bSprintDecelerate : 1;                                    // 0x0050(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bEndSpawnSpeedBonus : 1;                                  // 0x0050(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsClimbingState : 1;                                     // 0x0050(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCanBeRestarted : 1;                                      // 0x0050(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bUseTurnLock : 1;                                         // 0x0050(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bUseScaleDirectionalMovement : 1;                         // 0x0051(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCanSwitchInventoryItems : 1;                             // 0x0051(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCanMountActors : 1;                                      // 0x0051(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bKnockRiderOffHorse : 1;                                  // 0x0051(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bEndWeaponTracers : 1;                                    // 0x0051(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bAnimationEnded : 1;                                      // 0x0051(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bSameAttackClash : 1;                                     // 0x0051(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCancelHorseAttack : 1;                                   // 0x0051(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsActive : 1;                                            // 0x0052(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bBeginFire : 1;                                           // 0x0052(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bDidStartAttack : 1;                                      // 0x0052(0x0001) (CPF_BlueprintVisible, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bCanInitiateCrouch : 1;                                   // 0x0052(0x0001) (CPF_BlueprintVisible, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0053(0x0001) MISSED OFFSET
	float                                              DefaultTime;                                              // 0x0054(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                CrowdControlPriority;                                     // 0x0058(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CrowdControlThreshold;                                    // 0x005C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FTurnLimitParams                            TurnLimit;                                                // 0x0060(0x0018) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FTurnLockParams                             TurnLock;                                                 // 0x0078(0x003C) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
	struct FScaleDirectionParams                       ScaleDirectionalMovement;                                 // 0x00B8(0x0020) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	int                                                PushingPriority;                                          // 0x00D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EKillReason                                        KillReason;                                               // 0x00DC(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00DD(0x0003) MISSED OFFSET
	struct FRotator                                    KnockRiderOffHorseRotation;                               // 0x00E0(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              MinimumHoldingTime;                                       // 0x00EC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EAbilityTermination>                   EndAttackReason;                                          // 0x00F0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	TArray<struct FName>                               AttackTags;                                               // 0x00F8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              StartTime;                                                // 0x0108(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSoftRecovery;                                            // 0x010C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x010D(0x0003) MISSED OFFSET
	float                                              CurrentAnimationLength;                                   // 0x0110(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EAttackTransition                                  AttackTransition;                                         // 0x0114(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0115(0x0003) MISSED OFFSET
	TArray<int>                                        TimerHandles;                                             // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FNextStateTimer>                     NextStateTimers;                                          // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTurnLockState                              TurnLockState;                                            // 0x0138(0x0018) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FCombatStateSlowdown                        SlowdownState;                                            // 0x0150(0x0010) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                ScaleDirectionId;                                         // 0x0160(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SlowdownId;                                               // 0x0164(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                PushingId;                                                // 0x0168(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x4];                                       // 0x016C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CombatState"));
		return ptr;
	}


	void UseItem();
	void SyncDrawStrength();
	void StopFocus();
	void StartRevive(class ATBLCharacter* DownedCharacter);
	void StartReleaseStab();
	void StartHoldAttack();
	void StartHeavyAttack(bool bIsHeavy);
	void StartFocus();
	void StartFire();
	void StartFeint();
	void StartChargeStab();
	void StartAttack();
	bool ShouldUseDrawStrengthModifier();
	bool ShouldSprintDecelerate();
	bool ShouldRemainInSprint();
	void SetWeaponLoaded(bool bLoaded);
	void SetCombatStateTimer(const struct FScriptDelegate& Delegate, float Time, bool bLooping, int* OutHandle);
	void Revive();
	void RestOfCurrentState(bool InCanSwitchInventoryItems, bool InCanMountActors);
	void ResetMinimumHoldingTime();
	void ResetAmmoAttachment();
	void ProjectileInterrupted();
	void PlayEquipAnimation(class AInventoryItem* Item);
	bool OverrideCrowdControlEvent(ECrowdControlCombatState CombatState, ECrowdControlVariant Variant);
	void OnTurnLockTimeout(float OverTime);
	void OnStartEquip(class AInventoryItem* Item);
	void OnReloadPressed();
	void OnMovementInput(const struct FName& Direction);
	void OnJumpPressed();
	void OnItemStackChanged(class AInventoryItem* Item, int Delta);
	void OnFocusReleased();
	void OnFocusPressed();
	void OnFireProjectile();
	void OnEndTurnLock();
	void OnActivateAbility();
	bool NeedsReload();
	void KnockRiderOffHorse();
	bool IsWithinWindow(float WindowTime, bool bFromEndOfState);
	bool IsRiposte();
	bool IsOutOfAmmo();
	bool IsInitialized();
	bool IsHoldingReloadableThrowable();
	bool IsHoldingInput();
	bool IsHoldAttackPressed();
	bool IsHeavy();
	bool IsFocusQueued();
	bool IsFeint();
	bool IsCounter();
	bool IsCombo();
	bool IsCombatStateTimerActive(int Handle);
	bool IsAttackQueued();
	void HoldState(EHeldBehavior HeldBehavior);
	void HandleDelayedStartAttack();
	void Getup(const struct FName& Direction);
	float GetTimeSinceLastQueuedAttack();
	float GetTimeInStatePercent();
	float GetTimeInState();
	float GetSoftRecoveryPercent();
	float GetRemainingTime();
	EAttackTypeCategory GetQueuedAttackTypeCategory();
	class UAttackType* GetQueuedAttackType();
	struct FName GetQueuedAttackName();
	struct FName GetQueuedAttackCategory();
	bool GetQueuedAttackCanComboInInterrupt();
	class AActor* GetOwner();
	float GetMinimumHoldingTime();
	float GetMaxDrawStrengthTime();
	float GetDrawStrengthModifier();
	EAttackTypeCategory GetCurrentAttackTypeCategory();
	class UAttackType* GetCurrentAttackType();
	struct FName GetCurrentAttackName();
	struct FName GetCurrentAttackCategory();
	struct FName GetCombatStateFromQueuedAttack();
	class AInventoryItem* GetCharactersEquippedWeapon();
	void GetCharactersCurrentEmote(bool* IsRootAnimation, struct FPersonalityEmoteTableRow* Emote, int* EmoteId);
	class UTBLCharacterMovement* GetCharacterMovement();
	class ATBLCharacter* GetCharacter();
	struct FName GetCancelledCombatState();
	EAttackTransition GetAttackTransition();
	float GetAbilityPropertyValue(const struct FName& PropertyName);
	void EventWasParried(class ATBLCharacter* ParryingCharacter);
	void EventTick(float DeltaSeconds);
	void EventRagdolled();
	void EventParrySuccess(class ATBLCharacter* ParriedCharacter);
	void EventMeleeSuccess(class ATBLCharacter* DamagedCharacter);
	void EventLanded(class ACharacter* InTarget);
	void EventEndState(const struct FName& NextState, bool bStartAttack);
	void EventEndAnimation();
	void EventDamageCaused(const struct FDamageTakenEvent& DamageEvent);
	void EventDamage(const struct FDamageTakenEvent& DamageEvent);
	bool EventCannotQueueAttack(class UAttackType* AttackType);
	void EventCancelAttack();
	void EventBeginState(const struct FName& PreviousState, float PreviousStateTime, float AnimationLength);
	void EventBeginFire(const struct FName& AttackName, bool bHeldQueue);
	bool DisableSprintTurn();
	void CombatStateEvent(const struct FName& EventName);
	bool CanUseWeaponsAndSiegeActors();
	bool CanSwitchInventoryItems();
	bool CanSprint();
	bool CannotUseInteractables();
	bool CannotMove();
	bool CanMountActors();
	bool CanJump();
	bool CanInitiateQueuedAttack();
	bool CanInitiateCrouch();
	bool CanFeint();
	bool CanDash();
	bool CanCrouch();
	bool CanComboFromState();
	void CancelAttack();
	bool CanBeCancelled(bool bIsCancelIntoParry);
	bool AutomaticReload();
	void AddTimerHandle(int Handle, const struct FName& CombatStateName);
	void ActionQueueAttack();
	void ActionGotoState(const struct FName& NextState, float OverrideStateTime, bool bResetStateTime);
	void ActionClearToggleAltAttack();
	void ActionClearHeldAttackQueue();
	void ActionClearAttackQueue();
};


// Class TBL.BaseCombatState
// 0x0010 (0x0180 - 0x0170)
class UBaseCombatState : public UCombatState
{
public:
	unsigned char                                      CanReloadInState : 1;                                     // 0x0170(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0171(0x0003) MISSED OFFSET
	TWeakObjectPtr<class UUserWidget>                  InputHintsWidget;                                         // 0x0174(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x017C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BaseCombatState"));
		return ptr;
	}


	void ToggleReloadHint(bool Enable);
	void RemoveReloadHint();
	void Reload();
	bool NeedToReload();
	void ManualReload();
	float GetStaminaPercent();
	void DropHeavyObject();
	bool DidHitInRelease();
	void AddReloadHint();
};


// Class TBL.BaseKillTask
// 0x0000 (0x0050 - 0x0050)
class UBaseKillTask : public UTBLAchievementTaskCountable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BaseKillTask"));
		return ptr;
	}

};


// Class TBL.BaseKillWorker
// 0x0050 (0x0110 - 0x00C0)
class UBaseKillWorker : public UTBLAchievementWorker
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x00C0(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BaseKillWorker"));
		return ptr;
	}


	void OnCausedDamageInternal(const struct FDamageTakenEvent& DamageEvent);
	void OnCausedDamage(const struct FDamageTakenEvent& DamageEvent, class ATBLPlayerController* Controller);
};


// Class TBL.BatteringRam
// 0x0080 (0x09C0 - 0x0940)
class ABatteringRam : public ASiegeEngine
{
public:
	class UCombatStateSynchronization*                 CombatStateSynchronization;                               // 0x0940(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCombatStateQueue*                           CombatStateQueue;                                         // 0x0948(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UCombatStateSet*/                  CombatStateSet;                                           // 0x0950(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UInteractableComponent*                      LeftInteractable;                                         // 0x0958(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UInteractableComponent*                      RightInteractable;                                        // 0x0960(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USiegeMountPoint*                            LeftMountPoint;                                           // 0x0968(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USiegeMountPoint*                            RightMountPoint;                                          // 0x0970(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DamageScale;                                              // 0x0978(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ChargePercent;                                            // 0x0980(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ChargeTime;                                               // 0x0984(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TwoPlayerChargeBonus;                                     // 0x0988(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x098C(0x0004) MISSED OFFSET
	class UPhysicsAsset*                               StationaryPhysAsset;                                      // 0x0990(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               PushablePhysAsset;                                        // 0x0998(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPushableComponent*                          PushableComponent;                                        // 0x09A0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnChargeChanged;                                          // 0x09A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x09B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BatteringRam"));
		return ptr;
	}


	void OnRep_ChargePercent();
	void OnPushableActivated(bool bIsActive);
	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState);
	void OnCharacterMount(class ATBLCharacter* Character);
	void OnCharacterDismounted(class ATBLCharacter* DismountedDriver, EDismountType DismountType);
	int GetNumCharacters();
};


// Class TBL.BeRevivedTask
// 0x0000 (0x0050 - 0x0050)
class UBeRevivedTask : public UTBLAchievementTaskCountable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BeRevivedTask"));
		return ptr;
	}

};


// Class TBL.BeRevivedWorker
// 0x0000 (0x00C0 - 0x00C0)
class UBeRevivedWorker : public UTBLAchievementWorker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BeRevivedWorker"));
		return ptr;
	}


	void OnPlayerRevived(class APawn* Pawn, class ATBLPlayerController* Controller);
};


// Class TBL.BlockedDamage
// 0x0010 (0x0188 - 0x0178)
class UBlockedDamage : public UAction
{
public:
	float                                              BaseDamage;                                               // 0x0178(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
	class UDamageSource*                               DamageType;                                               // 0x0180(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BlockedDamage"));
		return ptr;
	}

};


// Class TBL.BlockProjectileTask
// 0x0000 (0x0050 - 0x0050)
class UBlockProjectileTask : public UTBLAchievementTaskCountable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BlockProjectileTask"));
		return ptr;
	}

};


// Class TBL.BlockProjectileWorker
// 0x0000 (0x00C0 - 0x00C0)
class UBlockProjectileWorker : public UTBLAchievementWorker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BlockProjectileWorker"));
		return ptr;
	}


	void OnBlockedAttack(EDefenderBlockedPolicy BlockPolicy, class ATBLCharacter* AttackingCharacter, bool bProjectileAttack, class ATBLPlayerController* Controller);
};


// Class TBL.BlueprintDebugMenuComponent
// 0x0008 (0x0110 - 0x0108)
class UBlueprintDebugMenuComponent : public UTBLComponent
{
public:
	class UClass* /*UUserWidget*/                      WidgetClass;                                              // 0x0108(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BlueprintDebugMenuComponent"));
		return ptr;
	}

};


// Class TBL.Bombard
// 0x02E0 (0x0C20 - 0x0940)
class ABombard : public ASiegeEngine
{
public:
	struct FMulticastScriptDelegate                    OnBombardStateChanged;                                    // 0x0940(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBombardKilled;                                          // 0x0950(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UInteractableComponent*                      MountInteractable;                                        // 0x0960(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAbilitiesComponent*                         Abilities;                                                // 0x0968(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPushingComponent*                           PushingComponent;                                         // 0x0970(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStatsComponent*                             Stats;                                                    // 0x0978(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class URepairableComponent*                        Repairable;                                               // 0x0980(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBoxComponent*                               RecoilKnockback;                                          // 0x0988(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                PushingPriority;                                          // 0x0990(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BaseTurnRate;                                             // 0x0994(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PitchMax;                                                 // 0x0998(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PitchMin;                                                 // 0x099C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnLimitStrength;                                        // 0x09A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PitchLoopSoundFadeOutTime;                                // 0x09A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       LoadedAmmoSocketName;                                     // 0x09A8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AutoLoadFacingAngle;                                      // 0x09B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FuseDuration;                                             // 0x09B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FuseEndTime;                                              // 0x09B8(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BombardRecoilCharacterVelocity;                           // 0x09BC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnFuseStarted;                                            // 0x09C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBombardFireAction;                                      // 0x09D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bReloadHeld;                                              // 0x09E0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFocusHeld;                                               // 0x09E1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsFiring;                                                // 0x09E2(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x5];                                       // 0x09E3(0x0005) MISSED OFFSET
	class AInventoryItem*                              LoadedAmmo;                                               // 0x09E8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              LastLoadedAmmo;                                           // 0x09F0(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ATBLPlayerState>              LoadedAmmoInstigator;                                     // 0x09F8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*AInventoryItem*/>           WhitelistAmmoItemTypes;                                   // 0x0A00(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class AInventoryItem*>                      AttachedItems;                                            // 0x0A10(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ItemLoadedSound;                                          // 0x0A20(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PlayReloadLoopSound;                                      // 0x0A28(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopReloadLoopSound;                                      // 0x0A30(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PlayTurnLoopSound;                                        // 0x0A38(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopTurnLoopSound;                                        // 0x0A40(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PlayPitchLoopSound;                                       // 0x0A48(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopPitchLoopSound;                                       // 0x0A50(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               MountSound;                                               // 0x0A58(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ReadyToFireSound;                                         // 0x0A60(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAkAudioEvent*>                       FiringSounds;                                             // 0x0A68(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FProjectileSounds                           BombardProjectileSoundOverride;                           // 0x0A78(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FSiegeEngineDamageSounds                    DamageSounds;                                             // 0x0AA0(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              DamagedThreshold;                                         // 0x0AC0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0AC4(0x0004) MISSED OFFSET
	class USkeletalMesh*                               HealthyMesh;                                              // 0x0AC8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMesh*                               DamagedMesh;                                              // 0x0AD0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMesh*                               BrokenMesh;                                               // 0x0AD8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UParticleSystem*                             BrokenParticle;                                           // 0x0AE0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationAsset*                             BrokenAnimation;                                          // 0x0AE8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimInstance*/                    AnimationBlueprint;                                       // 0x0AF0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               StationaryPhysAsset;                                      // 0x0AF8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               PushablePhysAsset;                                        // 0x0B00(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               DestroyedPhysAsset;                                       // 0x0B08(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBombardDamagedMeshApplied;                              // 0x0B10(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              DrawStrength;                                             // 0x0B20(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      IsBeingRotated;                                           // 0x0B24(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0B25(0x0003) MISSED OFFSET
	class AInventoryItem*                              BombardSiegeWeapon;                                       // 0x0B28(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnRepaired;                                               // 0x0B30(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              RotationPitch;                                            // 0x0B40(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DelayUntilPushbackKnockdown;                              // 0x0B44(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    LastAimRotation;                                          // 0x0B48(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                HorizLockId;                                              // 0x0B54(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                VertLockId;                                               // 0x0B58(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0B5C(0x0004) MISSED OFFSET
	struct FProjectileSounds                           LoadedAmmoProjectileBackupSounds;                         // 0x0B60(0x0028) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<class ATBLCharacter*>                       OverlappingCharacters;                                    // 0x0B88(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EBombardState                                      BombardState;                                             // 0x0B98(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsBroken;                                                // 0x0B99(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bReplicatedIsBroken;                                      // 0x0B9A(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x5];                                       // 0x0B9B(0x0005) MISSED OFFSET
	TWeakObjectPtr<class ATBLCharacter>                BlockedAutoLoadCharacter;                                 // 0x0BA0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x30];                                      // 0x0BA8(0x0030) MISSED OFFSET
	int                                                TurnRateId;                                               // 0x0BD8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastPitchRate;                                            // 0x0BDC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PitchRate;                                                // 0x0BE0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bMoveForwardHeld;                                         // 0x0BE4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bMoveBackHeld;                                            // 0x0BE5(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsPlayingPitchSound;                                     // 0x0BE6(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x1];                                       // 0x0BE7(0x0001) MISSED OFFSET
	float                                              MoveForwardHeldTime;                                      // 0x0BE8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MoveBackHeldTime;                                         // 0x0BEC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATBLCharacter>                FuseInitiatorDriver;                                      // 0x0BF0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector_NetQuantize10                       InitialRotation;                                          // 0x0BF8(0x000C) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0C04(0x0004) MISSED OFFSET
	TArray<class USceneComponent*>                     LoadingComponentList;                                     // 0x0C08(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0C18(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.Bombard"));
		return ptr;
	}


	void StartFire();
	void SetBroken(bool bInBroken);
	void SetBombardState(EBombardState State);
	void ServerStartFuse();
	void ServerPitchInput(float Value);
	void RemoveAttachedItem(class AInventoryItem* Item);
	void ReadyToFire();
	void OnRep_RotationSpeed();
	void OnRep_RotationPitch();
	void OnRep_LoadedAmmo();
	void OnRep_FuseEndTime();
	void OnRep_BombardState(EBombardState PreviousState);
	void OnReloadCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo);
	void OnPushableActivated(bool IsActive);
	void OnLoadVolumeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnLoadVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo);
	void OnLoadedAmmoPorjectileMovementFinished();
	void OnKilled(const struct FDeathDamageTakenEvent& Event);
	void OnItemPickup(class AInventoryItem* Item, bool IsAddedToInventory);
	void OnHealthChanged(float Amount, class AActor* Initiator);
	void OnFire();
	void OnDamageTaken(const struct FDamageTakenEvent& Event);
	void OnBombardFireAnimComplete();
	void OnBombardFireAnimBegin(class UTBLBombardAnimInstance* AnimInstance);
	void K2_OnBombardStateChanged(EBombardState State, EBombardState PreviousState);
	bool IsPushable();
	bool IsPackaged();
	bool IsInteractable();
	bool IsBroken();
	bool IsBombardAmmo(class AInventoryItem* Item);
	class UPrimitiveComponent* GetReloadCollision();
	class UPrimitiveComponent* GetLoadVolume();
	EBombardState GetBombardState();
	void EventUsePressed(class APawn* InPawn, class UInteractableComponent* InInteractable);
	void ClientOnFire();
	bool CanLoad(class AInventoryItem* Item);
	void BombardLoadItem(class AInventoryItem* Item, class ATBLCharacter* Initiator);
	void AddLogEntry(const struct FString& LogEntry);
};


// Class TBL.CombatStateActivationMethod
// 0x0040 (0x00D0 - 0x0090)
class UCombatStateActivationMethod : public UAbilityActivationMethod
{
public:
	struct FName                                       CostExceededGotoState;                                    // 0x0090(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               CostExceededInterruptableStates;                          // 0x0098(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       AbilitiesTableRow;                                        // 0x00A8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              InventoryItem;                                            // 0x00B0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       KeyBind;                                                  // 0x00B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                EmoteId;                                                  // 0x00C0(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCombatStateAttackStarted;                                // 0x00C4(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAnimationDataTableNotFound;                              // 0x00C5(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xA];                                       // 0x00C6(0x000A) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CombatStateActivationMethod"));
		return ptr;
	}


	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
};


// Class TBL.ChargingActivationMethod
// 0x0018 (0x00E8 - 0x00D0)
class UChargingActivationMethod : public UCombatStateActivationMethod
{
public:
	TArray<class UAction*>                             ActivationActions;                                        // 0x00D0(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	double                                             LastInitiatorActionsTime;                                 // 0x00E0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ChargingActivationMethod"));
		return ptr;
	}

};


// Class TBL.BombardActivationMethod
// 0x0000 (0x00E8 - 0x00E8)
class UBombardActivationMethod : public UChargingActivationMethod
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BombardActivationMethod"));
		return ptr;
	}


	void OnAnimNotifyBombardFire(class UTBLBombardAnimInstance* AnimInstance);
};


// Class TBL.CompositeTargetMethod
// 0x0050 (0x0208 - 0x01B8)
class UCompositeTargetMethod : public UAbilityTargetMethod
{
public:
	TArray<class UAbilityTargetMethod*>                StaticChildren;                                           // 0x01B8(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAbilityTargetMethod*>                Children;                                                 // 0x01C8(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIgnoreChildrenInitiateRequirements;                      // 0x01D8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01D9(0x0007) MISSED OFFSET
	TArray<class UAbilityTargetMethod*>                DynamicChildren;                                          // 0x01E0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UAbilityTargetMethod*>                RunningChildren;                                          // 0x01F0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPendingFinish;                                           // 0x0200(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0201(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CompositeTargetMethod"));
		return ptr;
	}


	void TargetUsingMethod(class UAbilityTargetMethod* TargetMethod, const struct FAbilityInitiationParams& InInitiationParams, bool bLocal, int InMultiTargetMethodIndex);
};


// Class TBL.ProjectileTargetMethod
// 0x0130 (0x0338 - 0x0208)
class UProjectileTargetMethod : public UCompositeTargetMethod
{
public:
	TArray<class UAction*>                             ProjectileSpawnedActions;                                 // 0x0208(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       ProjectileName;                                           // 0x0218(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAbilityTargetMethod*                        HitTargetMethod;                                          // 0x0220(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHitDeactivatesInvocation;                                // 0x0228(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0229(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AInventoryItem>               Projectile;                                               // 0x022C(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UTBLProjectileMovementComponent> ProjectileMovement;                                       // 0x0234(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AllowedClientSpawnLocationErrorSq;                        // 0x023C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWantsToFinish;                                           // 0x0240(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0241(0x0007) MISSED OFFSET
	TArray<struct FHitResult>                          DelayedCharacterHits;                                     // 0x0248(0x0010) (CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FHitResult>                          DelayedNonCharacterHits;                                  // 0x0258(0x0010) (CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FHitResult>                          DelayedCharacterHitsCosmetic;                             // 0x0268(0x0010) (CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FHitResult>                          DelayedNonCharacterHitsCosmetic;                          // 0x0278(0x0010) (CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UProjectileCollision*>                CollisionHandlers;                                        // 0x0288(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0298(0x0018) MISSED OFFSET
	TWeakObjectPtr<class AInventoryItem>               CosmeticProjectile;                                       // 0x02B0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UTBLProjectileMovementComponent> CosmeticProjectileMovement;                               // 0x02B8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UTBLProjectileMovementComponent> FakeClientProjectile;                                     // 0x02C0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<TWeakObjectPtr<class UTBLProjectileMovementComponent>, TWeakObjectPtr<class UTBLProjectileMovementComponent>> FakeClientTargetMap;                                      // 0x02C8(0x0050) (CPF_ExportObject, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USceneComponent>              FakeClientUpdatedComponent;                               // 0x0318(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastFakeClientTime;                                       // 0x0320(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FakeClientTotalTime;                                      // 0x0324(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSpawnFakeProjectileOnServerRep;                          // 0x0328(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0329(0x0003) MISSED OFFSET
	struct FVector                                     FakeClientInterpOffset;                                   // 0x032C(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ProjectileTargetMethod"));
		return ptr;
	}


	void UpdateFakeClientProjectile();
	class AInventoryItem* SpawnProjectile(const struct FTransform& SpawnTransform, bool bFakeClient, class AActor* TargetProj, int InvocationId);
	void OnStop(const struct FHitResult& Hit);
	void OnProjectileMovementFinished();
	void OnProjectileDisabled();
	void OnProjectileDestroyedCosmetic(class AActor* DestroyedActor);
	void OnProjectileDestroyed(class AActor* DestroyedActor);
	void OnProjectileBeginPlay(class AInventoryItem* Item);
	void OnHitCosmetic(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnHit(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnBeginOverlapCosmetic(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& HitResult);
	void OnBeginOverlap(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo);
	void HandlePassiveShieldHit(class AInventoryItem* Shield, class ATBLCharacter* HitCharacter, const struct FHitResult& Hit);
	bool HandleParries(const struct FHitResult& Hit, class ATBLCharacter* HitCharacter);
	void HandleDelayedHitsCosmetic();
	void HandleDelayedHits();
	void AddDelayedHit(const struct FHitResult& Hit);
};


// Class TBL.BombardTargetMethod
// 0x0000 (0x0338 - 0x0338)
class UBombardTargetMethod : public UProjectileTargetMethod
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BombardTargetMethod"));
		return ptr;
	}

};


// Class TBL.BoneList
// 0x0010 (0x0040 - 0x0030)
class UBoneList : public UDataAsset
{
public:
	TArray<struct FName>                               Bones;                                                    // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BoneList"));
		return ptr;
	}

};


// Class TBL.BotSpawnOverrides
// 0x0008 (0x0030 - 0x0028)
class UBotSpawnOverrides : public UObject
{
public:
	class UDataTable*                                  Table;                                                    // 0x0028(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BotSpawnOverrides"));
		return ptr;
	}

};


// Class TBL.ShapeTargetMethod
// 0x0018 (0x01D0 - 0x01B8)
class UShapeTargetMethod : public UAbilityTargetMethod
{
public:
	int                                                Version;                                                  // 0x01B8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01BC(0x0004) MISSED OFFSET
	TArray<TEnumAsByte<ECollisionChannel>>             TargetObjectTypes;                                        // 0x01C0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ShapeTargetMethod"));
		return ptr;
	}

};


// Class TBL.BoxTargetMethod
// 0x0038 (0x0208 - 0x01D0)
class UBoxTargetMethod : public UShapeTargetMethod
{
public:
	bool                                               bTargetSelf;                                              // 0x01D0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseControllerRotation;                                   // 0x01D1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseMountRotation;                                        // 0x01D2(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x1];                                       // 0x01D3(0x0001) MISSED OFFSET
	struct FRotator                                    RotationOffset;                                           // 0x01D4(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     BoxExtend;                                                // 0x01E0(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     BoxOffset;                                                // 0x01EC(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DelayFinishTime;                                          // 0x01F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     TargetChannel;                                            // 0x01FC(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<ETargetVisibilityCheck>                CheckVisibility;                                          // 0x01FD(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0xA];                                       // 0x01FE(0x000A) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BoxTargetMethod"));
		return ptr;
	}


	void DelayFinish();
};


// Class TBL.BoxTracers
// 0x01B0 (0x0210 - 0x0060)
class UBoxTracers : public UTracerShape
{
public:
	struct FName                                       BoxComponentName;                                         // 0x0060(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                IgnoreParryDepth;                                         // 0x0068(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseCustomSocket;                                         // 0x006C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	struct FName                                       CustomSocketName;                                         // 0x0070(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     CustomSocketExtents;                                      // 0x0078(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0084(0x000C) MISSED OFFSET
	struct FTransform                                  LocalBoxTransform;                                        // 0x0090(0x0030) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                CurrentIndex;                                             // 0x00C0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET
	TArray<struct FTransform>                          TracerTransforms;                                         // 0x00C8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FVector>                             TracerDirection;                                          // 0x00D8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     BoxExtents;                                               // 0x00E8(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	class UBoxComponent*                               BoxComponent;                                             // 0x00F8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsValid;                                                 // 0x0100(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanClash;                                                // 0x0101(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0102(0x0002) MISSED OFFSET
	struct FHitResult                                  DelayHit;                                                 // 0x0104(0x0088) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              DelayHitTime;                                             // 0x018C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDelayedHit;                                              // 0x0190(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsHorizontalBackSwingDone;                               // 0x0191(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsVerticalBackSwingDone;                                 // 0x0192(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsStabWindupDone;                                        // 0x0193(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsOverheadWindupDone;                                    // 0x0194(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x7B];                                      // 0x0195(0x007B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BoxTracers"));
		return ptr;
	}

};


// Class TBL.BrawlAlwaysOnMusicManager
// 0x0050 (0x0360 - 0x0310)
class ABrawlAlwaysOnMusicManager : public ATBLActor
{
public:
	class UAkComponent*                                AkComponent;                                              // 0x0310(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EBrawlAlwaysOnMusicState                           BrawlAlwaysOnMusicState;                                  // 0x0318(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	EBrawlAlwaysOnMusicState                           PreviousBrawlAlwaysOnMusicState;                          // 0x0319(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               IsMusicPlaying;                                           // 0x031A(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x5];                                       // 0x031B(0x0005) MISSED OFFSET
	class UAkAudioEvent*                               PlayJukeBoxEvent;                                         // 0x0320(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               StopJukeBoxEvent;                                         // 0x0328(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               RecordScartch;                                            // 0x0330(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               WaitingToStart;                                           // 0x0338(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0340(0x0010) MISSED OFFSET
	TArray<int>                                        RecentSongs;                                              // 0x0350(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BrawlAlwaysOnMusicManager"));
		return ptr;
	}


	void SetCurrentMusicState(EBrawlAlwaysOnMusicState NewState);
	void OnRep_BrawlAlwaysOnMusicState();
	EBrawlAlwaysOnMusicState GetCurrentMusicState();
};


// Class TBL.BreakableActor
// 0x0018 (0x0328 - 0x0310)
class ABreakableActor : public ATBLActor
{
public:
	class USceneComponent*                             SceneComponent;                                           // 0x0310(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBreakableComponent*                         BreakableComponent;                                       // 0x0318(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStatsComponent*                             StatsComponent;                                           // 0x0320(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BreakableActor"));
		return ptr;
	}

};


// Class TBL.BreakableComponent
// 0x00A8 (0x01B0 - 0x0108)
class UBreakableComponent : public UActorComponent
{
public:
	float                                              StartingHealth;                                           // 0x0108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxHealth;                                                // 0x010C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDamageTaken;                                            // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnKilled;                                                 // 0x0120(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBreakableThresholdReached;                              // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UStatsComponent>              StatsComponent;                                           // 0x0140(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UTeamOwnershipComponent>      TeamOwnershipComponent;                                   // 0x0148(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UTBLGameScoringComponent>     GameScoringComponent;                                     // 0x0150(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           FriendlyTeam;                                             // 0x0158(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0159(0x0007) MISSED OFFSET
	TArray<struct FBreakableThreshold>                 ThresholdsWithObjects;                                    // 0x0160(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FStageActorAction                           StageActorAction;                                         // 0x0170(0x0030) (CPF_Edit, CPF_BlueprintVisible, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     FocalPointOffset;                                         // 0x01A0(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01AC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BreakableComponent"));
		return ptr;
	}


	void SetHealth(float InHealth);
	void SetFriendlyTeam(EFaction InFriendlyTeam);
	void Killed(const struct FDeathDamageTakenEvent& Event);
	void HealthStatChanged(float Amount, class AActor* Initiator);
	void Damaged(const struct FDamageTakenEvent& Event);
};


// Class TBL.BurnableComponent
// 0x0040 (0x0148 - 0x0108)
class UBurnableComponent : public UActorComponent
{
public:
	TWeakObjectPtr<class UStatsComponent>              Stats;                                                    // 0x0108(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UConditionsComponent>         ConditionsComponent;                                      // 0x0110(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDamageSource*                               DamageSource;                                             // 0x0118(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UFlammableStaticMeshComponent*/    FlammableStaticMeshComponentClass;                        // 0x0120(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SphereCollisionRadius;                                    // 0x0128(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnDamageAppliedToFlammableComponent;                      // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              PercentHealth;                                            // 0x0140(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ActorBoundingBoxTweak;                                    // 0x0144(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BurnableComponent"));
		return ptr;
	}


	void HandleOwnerDamageTaken(const struct FDamageTakenEvent& Event);
	float GetTimeUntilBurnedDown();
};


// Class TBL.CameraModifier_ArrowCam
// 0x0078 (0x00C0 - 0x0048)
class UCameraModifier_ArrowCam : public UCameraModifier
{
public:
	class AInventoryItem*                              Projectile;                                               // 0x0048(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bArrowCamPressed;                                         // 0x0050(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	class UInputComponent*                             InputComponent;                                           // 0x0058(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     SmoothOffset;                                             // 0x0060(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    SmoothRotation;                                           // 0x006C(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0078(0x0008) MISSED OFFSET
	struct FTransform                                  TransformOnCollision;                                     // 0x0080(0x0030) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              TimeAfterCollision;                                       // 0x00B0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0xC];                                       // 0x00B4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CameraModifier_ArrowCam"));
		return ptr;
	}


	void UpdateCharacterMesh();
	void ArrowCamReleased();
	void ArrowCamPressed();
};


// Class TBL.CameraModifier_BlendInRotation
// 0x0000 (0x0048 - 0x0048)
class UCameraModifier_BlendInRotation : public UCameraModifier
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CameraModifier_BlendInRotation"));
		return ptr;
	}

};


// Class TBL.CameraModifier_CancelRotation
// 0x0000 (0x0048 - 0x0048)
class UCameraModifier_CancelRotation : public UCameraModifier
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CameraModifier_CancelRotation"));
		return ptr;
	}

};


// Class TBL.CameraModifier_DeathCam
// 0x00F0 (0x0138 - 0x0048)
class UCameraModifier_DeathCam : public UCameraModifier
{
public:
	struct FDeathCamSettings                           DeathCamSettings_Immediate;                               // 0x0048(0x0040) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FDeathCamSettings                           DeathCamSettings_FromDeathAnimation;                      // 0x0088(0x0040) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               KilledCharacter;                                          // 0x00C8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentDurationTime;                                      // 0x00D0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              PanOutDurationTime;                                       // 0x00D4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector                                     SavedCameraDir;                                           // 0x00D8(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector                                     DeadActorPosition;                                        // 0x00E4(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector                                     PrevCameraLocation;                                       // 0x00F0(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FRotator                                    PrevCameraRotation;                                       // 0x00FC(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	float                                              CurrentDistance;                                          // 0x0108(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bWasBlocked;                                              // 0x010C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x010D(0x0003) MISSED OFFSET
	struct FRotator                                    PrevAccumInputRotation;                                   // 0x0110(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	struct FRotator                                    AccumInputRotation;                                       // 0x011C(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	struct FVector                                     KilledFocusLocation;                                      // 0x0128(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bUseImmediateSettings;                                    // 0x0134(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0135(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CameraModifier_DeathCam"));
		return ptr;
	}


	void UpdateOnCinematicStateChanged(const struct FGameplayTag& PreviousStateTag, class UCinematicState* PreviousState, const struct FGameplayTag& NewStateTag, class UCinematicState* NewState);
};


// Class TBL.CameraModifier_DeathCam1P
// 0x0038 (0x0080 - 0x0048)
class UCameraModifier_DeathCam1P : public UCameraModifier
{
public:
	float                                              YawRotationLimit;                                         // 0x0048(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PitchRotationLimit;                                       // 0x004C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnLimitStrength;                                        // 0x0050(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	struct FDeathCamContext_1P                         Context;                                                  // 0x0058(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    CameraOffset;                                             // 0x0060(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	int                                                TurnRateId;                                               // 0x006C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                HorizLockId;                                              // 0x0070(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                VertLockId;                                               // 0x0074(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0078(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CameraModifier_DeathCam1P"));
		return ptr;
	}

};


// Class TBL.CameraModifier_FollowAnimation
// 0x00E0 (0x0128 - 0x0048)
class UCameraModifier_FollowAnimation : public UCameraModifier
{
public:
	struct FFollowAnimationBlend                       BlendInParams;                                            // 0x0048(0x003C) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FFollowAnimationBlend                       BlendOutParams;                                           // 0x0084(0x003C) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FFollowAnimationBlend                       CancelBlendOutParams;                                     // 0x00C0(0x003C) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bFollowPitch;                                             // 0x00FC(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFollowYaw;                                               // 0x00FD(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00FE(0x0002) MISSED OFFSET
	class ATBLCharacter*                               TargetCharacter;                                          // 0x0100(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PrevSocketPitch;                                          // 0x0108(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PrevSocketYaw;                                            // 0x010C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    PrevBlendRot;                                             // 0x0110(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              AnimationPitch;                                           // 0x011C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AnimationYaw;                                             // 0x0120(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0124(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CameraModifier_FollowAnimation"));
		return ptr;
	}


	bool ShouldBlend(const struct FRotator& ControlRot, const struct FRotator& SocketRot);
	void Cancel();
};


// Class TBL.CameraModifier_TurnLock
// 0x0040 (0x0088 - 0x0048)
class UCameraModifier_TurnLock : public UCameraModifier
{
public:
	struct FMulticastScriptDelegate                    OnTurnLockLimit;                                          // 0x0048(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               Character;                                                // 0x0058(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AActor*                                      UseActorRotation;                                         // 0x0060(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USceneComponent*                             UseComponentRotation;                                     // 0x0068(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    StartingRotation;                                         // 0x0070(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              MaxAngle;                                                 // 0x007C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShouldInterpolateToLimit;                                // 0x0080(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
	float                                              InterpSpeed;                                              // 0x0084(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CameraModifier_TurnLock"));
		return ptr;
	}

};


// Class TBL.CameraModifier_HorizontalLock
// 0x0000 (0x0088 - 0x0088)
class UCameraModifier_HorizontalLock : public UCameraModifier_TurnLock
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CameraModifier_HorizontalLock"));
		return ptr;
	}

};


// Class TBL.CameraModifier_LockCamera
// 0x05D8 (0x0620 - 0x0048)
class UCameraModifier_LockCamera : public UCameraModifier
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET
	struct FMinimalViewInfo                            CameraPOV;                                                // 0x0050(0x05D0) (CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CameraModifier_LockCamera"));
		return ptr;
	}

};


// Class TBL.CameraModifier_Offset
// 0x0048 (0x0090 - 0x0048)
class UCameraModifier_Offset : public UCameraModifier
{
public:
	struct FVector                                     LocationOffset;                                           // 0x0048(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    RotationOffset;                                           // 0x0054(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	class AActor*                                      AttachToActor;                                            // 0x0060(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      AttachToMesh;                                             // 0x0068(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAttachToProjectile;                                      // 0x0070(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	class AInventoryItem*                              LastProjectile;                                           // 0x0078(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       AttachToBone;                                             // 0x0080(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOverrideRotation;                                        // 0x0088(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseAttachRotation;                                       // 0x0089(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x6];                                       // 0x008A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CameraModifier_Offset"));
		return ptr;
	}

};


// Class TBL.CameraModifier_SpawnFadeOut
// 0x05F8 (0x0640 - 0x0048)
class UCameraModifier_SpawnFadeOut : public UCameraModifier
{
public:
	float                                              StartTime;                                                // 0x0048(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              Duration;                                                 // 0x004C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMinimalViewInfo                            CameraPOV;                                                // 0x0050(0x05D0) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UInputComponent*                             InputComponent;                                           // 0x0620(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MoveForwardInput;                                         // 0x0628(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MoveRightInput;                                           // 0x062C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MoveUpInput;                                              // 0x0630(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxSpeed;                                                 // 0x0634(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATBLCharacter>                CachedFollowTarget;                                       // 0x0638(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CameraModifier_SpawnFadeOut"));
		return ptr;
	}


	void UpdateCharacterMesh();
};


// Class TBL.CameraModifier_TurnLimit
// 0x0050 (0x0098 - 0x0048)
class UCameraModifier_TurnLimit : public UCameraModifier
{
public:
	float                                              LeftTurnRatePercent;                                      // 0x0048(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RightTurnRatePercent;                                     // 0x004C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              UpTurnRatePercent;                                        // 0x0050(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DownTurnRatePercent;                                      // 0x0054(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LeftTurnLimit;                                            // 0x0058(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RightTurnLimit;                                           // 0x005C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              UpTurnLimit;                                              // 0x0060(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DownTurnLimit;                                            // 0x0064(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              HorizontalDirection;                                      // 0x0068(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HorizontalInitialDirection;                               // 0x006C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                HorizontalChangedDirectionCount;                          // 0x0070(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              VerticalDirection;                                        // 0x0074(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              VerticalInitialDirection;                                 // 0x0078(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                VerticalChangedDirectionCount;                            // 0x007C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SkippedFrameTime;                                         // 0x0080(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LeftTurnRateEndSpeed;                                     // 0x0084(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RightTurnRateEndSpeed;                                    // 0x0088(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              UpTurnRateEndSpeed;                                       // 0x008C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DownTurnRateEndSpeed;                                     // 0x0090(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CameraModifier_TurnLimit"));
		return ptr;
	}


	void SmoothTurnLimitEnding(float TargetTurnLimit, float DeltaTime, float* CurrentTurnLimit, float* EndSpeed);
	float CalcTurnLimit(float InPercent);
};


// Class TBL.CameraModifier_VerticalLock
// 0x0000 (0x0088 - 0x0088)
class UCameraModifier_VerticalLock : public UCameraModifier_TurnLock
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CameraModifier_VerticalLock"));
		return ptr;
	}

};


// Class TBL.CameraModifier_Zoom
// 0x0008 (0x0050 - 0x0048)
class UCameraModifier_Zoom : public UCameraModifier
{
public:
	float                                              ZoomedFOV;                                                // 0x0048(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CameraModifier_Zoom"));
		return ptr;
	}

};


// Class TBL.CampaignList
// 0x0050 (0x0158 - 0x0108)
class UCampaignList : public UActorComponent
{
public:
	struct FMulticastScriptDelegate                    OnCampaignsChanged;                                       // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>                CampaignStubs;                                            // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<TScriptInterface<class UCampaign>>          AllCampaigns;                                             // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<TScriptInterface<class UCampaign>>          OwnedCampaigns;                                           // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<TScriptInterface<class UCampaign>>          ActiveCampaigns;                                          // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CampaignList"));
		return ptr;
	}


	void SlotCampaign(const TScriptInterface<class UCampaign>& Campaign);
	TArray<TScriptInterface<class UCampaign>> GetOwnedCampaigns();
	int GetMaxActiveQuests();
	TArray<TScriptInterface<class UCampaign>> GetAllCampaigns();
	TArray<TScriptInterface<class UCampaign>> GetActiveCampaigns();
	void AbandonCampaign(const TScriptInterface<class UCampaign>& Campaign);
};


// Class TBL.CampaignStub
// 0x01C8 (0x01F0 - 0x0028)
class UCampaignStub : public UObject
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0028(0x0038) MISSED OFFSET
	struct FText                                       Title;                                                    // 0x0060(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	struct FText                                       Description;                                              // 0x0078(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	struct FText                                       GoalText;                                                 // 0x0090(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	struct FSlateBrush                                 Icon;                                                     // 0x00A8(0x0088) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	struct FSlateBrush                                 Image;                                                    // 0x0130(0x0088) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	EQuestDifficulty                                   Difficulty;                                               // 0x01B8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01B9(0x0007) MISSED OFFSET
	class UQuestStub*                                  InnerQuest;                                               // 0x01C0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                        InnerQuestClass;                                          // 0x01C8(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CampaignStub"));
		return ptr;
	}

};


// Class TBL.Condition
// 0x0110 (0x0150 - 0x0040)
class UCondition : public UTBLObject
{
public:
	bool                                               bLogEvents;                                               // 0x0040(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bTreatInitiatorAsTarget;                                  // 0x0041(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
	struct FActionContext                              Context;                                                  // 0x0048(0x00E8) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UObject>                      Initiator;                                                // 0x0130(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UObject>                      Target;                                                   // 0x0138(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     TargetLocation;                                           // 0x0140(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x014C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.Condition"));
		return ptr;
	}

};


// Class TBL.CanDash
// 0x0000 (0x0150 - 0x0150)
class UCanDash : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CanDash"));
		return ptr;
	}

};


// Class TBL.CanDropItem
// 0x0000 (0x0150 - 0x0150)
class UCanDropItem : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CanDropItem"));
		return ptr;
	}

};


// Class TBL.CanJump
// 0x0000 (0x0150 - 0x0150)
class UCanJump : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CanJump"));
		return ptr;
	}

};


// Class TBL.CanSwitchInventoryItem
// 0x0000 (0x0150 - 0x0150)
class UCanSwitchInventoryItem : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CanSwitchInventoryItem"));
		return ptr;
	}

};


// Class TBL.CanUseItem
// 0x0000 (0x0150 - 0x0150)
class UCanUseItem : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CanUseItem"));
		return ptr;
	}

};


// Class TBL.CaptureVolume
// 0x0040 (0x0350 - 0x0310)
class ACaptureVolume : public ATBLActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0310(0x0008) MISSED OFFSET
	class UBoxComponent*                               CaptureBox;                                               // 0x0318(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCapsuleComponent*                           CaptureCapsule;                                           // 0x0320(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    PlayersInCaptureVolumeChanged;                            // 0x0328(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	TArray<class ATBLCharacter*>                       PlayersInCaptureVolume;                                   // 0x0338(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseCaptureBoxComponent;                                  // 0x0348(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseCaptureCapsuleComponent;                              // 0x0349(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<ECaptureVolumeControlType>             CapturePointRule;                                         // 0x034A(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<ECapturePointState>                    CurrentCaptureState;                                      // 0x034B(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<ECapturePointState>                    PreviousCaptureState;                                     // 0x034C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x034D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CaptureVolume"));
		return ptr;
	}


	void RemovePlayerFromCapturePoint(class ATBLCharacter* Player);
	void RefreshActorsInCaptureZone();
	bool PlayerSatisfiesCaptureRequirments(class ATBLCharacter* Player);
	void OnTrackedCharacterKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnTrackedCharacterDestroyed(class AActor* DestroyedActor);
	void OnRep_CaptureState();
	void OnCaptureStateNeutralizing();
	void OnCaptureStateIdle();
	void OnCaptureStateContested();
	void OnCaptureStateCapturing();
	void OnCaptureStateCaptured();
	class ATBLTeam* GetControllingTeam(bool* IsTie);
	void EndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void ClientEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void ClientBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void BeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void AddPlayerToCapturePoint(class ATBLCharacter* Player);
};


// Class TBL.CarryablePlayerComponent
// 0x00B8 (0x01C0 - 0x0108)
class UCarryablePlayerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	class UClass* /*AInventoryItem*/                   CarryableItemClass;                                       // 0x0118(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    RelativeCarryRotation;                                    // 0x0120(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    RelativeThrownRotation;                                   // 0x012C(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              RelativeLandingYawOffset;                                 // 0x0138(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              YawRotationLimit;                                         // 0x013C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanPickupFromDowned;                                     // 0x0140(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanKillOnThrow;                                          // 0x0141(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanRevive;                                               // 0x0142(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0143(0x0005) MISSED OFFSET
	struct FReplicated_AInventoryItem                  CarryableItem;                                            // 0x0148(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class ATBLCharacterBase*                           OwnerCharacter;                                           // 0x0160(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class ATBLCharacter*                               ParentCharacter;                                          // 0x0168(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UInteractableComponent*                      InteractableComponent;                                    // 0x0170(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                HorizLockId;                                              // 0x0178(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsBeingHeld;                                             // 0x017C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHeldByEnemy;                                             // 0x017D(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWasThrown;                                               // 0x017E(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bOnRootTransformUpdate;                                   // 0x017F(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0180(0x0008) MISSED OFFSET
	bool                                               bUsedFakedClientThrow;                                    // 0x0188(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUsedFakedClientDrop;                                     // 0x0189(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCachedRVOEnabled;                                        // 0x018A(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x5];                                       // 0x018B(0x0005) MISSED OFFSET
	struct FTransform                                  CachedOwnerItemDroppedTransform;                          // 0x0190(0x0030) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CarryablePlayerComponent"));
		return ptr;
	}


	void StartPickup();
	void OnUseReleased(class APawn* Pawn, float UseTime);
	void OnUseHeld(class APawn* Pawn, float UseTime, class UInteractableComponent* Interactable);
	void OnUse(class APawn* Pawn, class UInteractableComponent* Interactable);
	void OnThrown(class AInventoryItem* Item, class ATBLCharacter* Character, const struct FTransform& Transform);
	void OnSpawnFakeClient(class AInventoryItem* FakeClient);
	void OnSetAttached(bool bAttached);
	void OnRootTransformUpdated();
	void OnRep_CarryableItem();
	void OnPreThrown(class AInventoryItem* Item, class ATBLCharacter* Character, const struct FTransform& Transform);
	void OnInteractableEnabled(bool bEnabled);
	void OnFakeClientProjectileHit(const struct FProjectileHitParams& HitParams);
	void OnDropped(class AInventoryItem* Item, class ATBLCharacter* Character, const struct FTransform& Transform);
	void OnCharacterKilled(const struct FDeathDamageTakenEvent& Event);
	void OnCharacterDestroyed(class AActor* Actor);
	void OnCarryableItemDestroyed(class AActor* Actor);
	void OnCarryableAnimationEvent(const struct FName& EventName);
	bool CanPickup(class APawn* Pawn);
};


// Class TBL.Catapult
// 0x0270 (0x0BB0 - 0x0940)
class ACatapult : public ASiegeEngine
{
public:
	struct FMulticastScriptDelegate                    OnCatapultStateChanged;                                   // 0x0940(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCatapultFireNoDriver;                                   // 0x0950(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCatapultKilled;                                         // 0x0960(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UInteractableComponent*                      MountInteractable;                                        // 0x0970(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAbilitiesComponent*                         Abilities;                                                // 0x0978(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPushingComponent*                           PushingComponent;                                         // 0x0980(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStatsComponent*                             Stats;                                                    // 0x0988(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class URepairableComponent*                        Repairable;                                               // 0x0990(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                PushingPriority;                                          // 0x0998(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BaseTurnRate;                                             // 0x099C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ChargePercent;                                            // 0x09A0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x09A4(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnChargePercentChanged;                                   // 0x09A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              MinChargeTime;                                            // 0x09B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RemainingChargeTime;                                      // 0x09BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                ChargeIncrements;                                         // 0x09C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinChargeToFire;                                          // 0x09C4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOverrideDrawStrength;                                    // 0x09C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x09C9(0x0003) MISSED OFFSET
	float                                              MinDrawStrength;                                          // 0x09CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxDrawStrength;                                          // 0x09D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       LoadedAmmoSocketName;                                     // 0x09D4(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AutoLoadFacingAngle;                                      // 0x09DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnforceYawRotationLimitOnCatapult;                       // 0x09E0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bReloadHeld;                                              // 0x09E1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFocusHeld;                                               // 0x09E2(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsFiring;                                                // 0x09E3(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsCharging;                                              // 0x09E4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsUnwinding;                                             // 0x09E5(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2];                                       // 0x09E6(0x0002) MISSED OFFSET
	float                                              PreviousChargeIncrement;                                  // 0x09E8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              NextChargeIncrement;                                      // 0x09EC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              LoadedAmmo;                                               // 0x09F0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              LastLoadedAmmo;                                           // 0x09F8(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ATBLPlayerState>              LoadedAmmoInstigator;                                     // 0x0A00(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*AInventoryItem*/>           WhitelistAmmoItemTypes;                                   // 0x0A08(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class AInventoryItem*>                      AttachedItems;                                            // 0x0A18(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ItemLoadedSound;                                          // 0x0A28(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PlayReloadLoopSound;                                      // 0x0A30(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopReloadLoopSound;                                      // 0x0A38(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PlayTurnLoopSound;                                        // 0x0A40(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopTurnLoopSound;                                        // 0x0A48(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               MountSound;                                               // 0x0A50(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ReadyToFireSound;                                         // 0x0A58(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAkAudioEvent*>                       FiringSounds;                                             // 0x0A60(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FProjectileSounds                           CatapultProjectileSoundOverride;                          // 0x0A70(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FSiegeEngineDamageSounds                    DamageSounds;                                             // 0x0A98(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              DamagedThreshold;                                         // 0x0AB8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0ABC(0x0004) MISSED OFFSET
	class USkeletalMesh*                               HealthyMesh;                                              // 0x0AC0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMesh*                               DamagedMesh;                                              // 0x0AC8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMesh*                               BrokenMesh;                                               // 0x0AD0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UParticleSystem*                             BrokenParticle;                                           // 0x0AD8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationAsset*                             BrokenAnimation;                                          // 0x0AE0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimInstance*/                    AnimationBlueprint;                                       // 0x0AE8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               StationaryPhysAsset;                                      // 0x0AF0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               PushablePhysAsset;                                        // 0x0AF8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               DestroyedPhysAsset;                                       // 0x0B00(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCatapultDamagedMeshApplied;                             // 0x0B08(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      IsBeingRotated;                                           // 0x0B18(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0B19(0x0007) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnRepaired;                                               // 0x0B20(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0B30(0x0008) MISSED OFFSET
	struct FRotator                                    LastAimRotation;                                          // 0x0B38(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                HorizLockId;                                              // 0x0B44(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                VertLockId;                                               // 0x0B48(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0B4C(0x0004) MISSED OFFSET
	struct FProjectileSounds                           LoadedAmmoProjectileBackupSounds;                         // 0x0B50(0x0028) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<class ATBLCharacter*>                       OverlappingCharacters;                                    // 0x0B78(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECatapultState                                     CatapultState;                                            // 0x0B88(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsBroken;                                                // 0x0B89(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bReplicatedIsBroken;                                      // 0x0B8A(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x5];                                       // 0x0B8B(0x0005) MISSED OFFSET
	TWeakObjectPtr<class ATBLCharacter>                BlockedAutoLoadCharacter;                                 // 0x0B90(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0xC];                                       // 0x0B98(0x000C) MISSED OFFSET
	struct FVector_NetQuantize10                       InitialRotation;                                          // 0x0BA4(0x000C) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.Catapult"));
		return ptr;
	}


	void SetCatapultState(ECatapultState State);
	void SetBroken(bool bInBroken);
	void ServerReloadReleased();
	void ServerReloadPressed();
	void ServerFireReleased();
	void ServerFirePressed();
	void RemoveAttachedItem(class AInventoryItem* Item);
	void ReloadReleased();
	void ReloadPressed();
	void ReadyToFire();
	void OnRep_RotationSpeed();
	void OnRep_LoadedAmmo();
	void OnRep_ChargePercent();
	void OnRep_CatapultState(ECatapultState PreviousState);
	void OnRep_Broken();
	void OnReloadCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo);
	void OnPushableActivated(bool IsActive);
	void OnLoadVolumeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnLoadVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo);
	void OnKilled(const struct FDeathDamageTakenEvent& Event);
	void OnItemPickup(class AInventoryItem* Item, bool IsAddedToInventory);
	void OnHealthChanged(float Amount, class AActor* Initiator);
	void OnFire();
	void OnDamageTaken(const struct FDamageTakenEvent& Event);
	void K2_OnCatapultStateChanged(ECatapultState State, ECatapultState PreviousState);
	bool IsPushable();
	bool IsPackaged();
	bool IsInteractable();
	bool IsCatapultRock(class AInventoryItem* Item);
	class UPrimitiveComponent* GetSpoonCollision();
	class UPrimitiveComponent* GetReloadCollision();
	class UPrimitiveComponent* GetLoadVolume();
	void EventUsePressed(class APawn* InPawn, class UInteractableComponent* InInteractable);
	void ClientOnFire();
	void CatapultLoadItem(class AInventoryItem* Item, class ATBLCharacter* Initiator);
	bool CanLoad(class AInventoryItem* Item);
	void BroadcastFireNoDriver();
};


// Class TBL.CatapultActivationMethod
// 0x0000 (0x00E8 - 0x00E8)
class UCatapultActivationMethod : public UChargingActivationMethod
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CatapultActivationMethod"));
		return ptr;
	}


	void OnAnimNotifyCatapultFire(class UTBLCatapultAnimInstance* AnimInstance);
};


// Class TBL.CatapultTargetMethod
// 0x0000 (0x0338 - 0x0338)
class UCatapultTargetMethod : public UProjectileTargetMethod
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CatapultTargetMethod"));
		return ptr;
	}

};


// Class TBL.ChannelingActivationMethod
// 0x0010 (0x00A0 - 0x0090)
class UChannelingActivationMethod : public UAbilityActivationMethod
{
public:
	bool                                               bHasClientMovement;                                       // 0x0090(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0091(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ChannelingActivationMethod"));
		return ptr;
	}

};


// Class TBL.CharacterMountableActor
// 0x00C0 (0x0A00 - 0x0940)
class ACharacterMountableActor : public ASiegeEngine
{
public:
	class UCombatStateSynchronization*                 CombatStateSynchronization;                               // 0x0940(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCombatStateQueue*                           CombatStateQueue;                                         // 0x0948(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UCombatStateSet*/                  CombatStateSet;                                           // 0x0950(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UInteractableComponent*                      LeftInteractable;                                         // 0x0958(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UInteractableComponent*                      RightInteractable;                                        // 0x0960(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USiegeMountPoint*                            LeftMountPoint;                                           // 0x0968(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USiegeMountPoint*                            RightMountPoint;                                          // 0x0970(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ChargeToDamageScale;                                      // 0x0978(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ChargePercent;                                            // 0x0980(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ChargeTime;                                               // 0x0984(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TwoPlayerChargeBonus;                                     // 0x0988(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x098C(0x0004) MISSED OFFSET
	class UPhysicsAsset*                               PhysAsset;                                                // 0x0990(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnChargeChanged;                                          // 0x0998(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMountableActorKilledAnimComplete;                       // 0x09A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnFinalMontageSectionPlaying;                             // 0x09B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnAnimationStarting;                                      // 0x09C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CharacterMountableActorAnimName;                          // 0x09D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       AbilityChargeName;                                        // 0x09E0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       AbilityAttackName;                                        // 0x09E8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinimumChargePercent;                                     // 0x09F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ATBLCharacter>                AbilityInstigatingDriver;                                 // 0x09F4(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x09FC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CharacterMountableActor"));
		return ptr;
	}


	void OnRep_ChargePercent();
	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState);
	void OnCharacterMount(class ATBLCharacter* Character);
	void OnCharacterDismounted(class ATBLCharacter* DismountedDriver, EDismountType DismountType);
	bool NeedsTick();
	class UPrimitiveComponent* GetPushingComponent();
	int GetNumCharacters();
};


// Class TBL.HollowNavBlocker
// 0x0000 (0x0258 - 0x0258)
class AHollowNavBlocker : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HollowNavBlocker"));
		return ptr;
	}


	void Deactivate();
	void Activate();
};


// Class TBL.CharacterPerformanceTestSettings
// 0x0048 (0x02A0 - 0x0258)
class ACharacterPerformanceTestSettings : public AActor
{
public:
	TArray<struct FCharacterPerformanceTestSingleSetting> Tests;                                                    // 0x0258(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     SeriesName;                                               // 0x0268(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                WaitForCharacterCount;                                    // 0x0278(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x027C(0x0004) MISSED OFFSET
	TArray<struct FString>                             PreTestCommands;                                          // 0x0280(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             StartTestCommands;                                        // 0x0290(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CharacterPerformanceTestSettings"));
		return ptr;
	}

};


// Class TBL.CharacterVOAKBank
// 0x0010 (0x0040 - 0x0030)
class UCharacterVOAKBank : public UPrimaryDataAsset
{
public:
	TEnumAsByte<EAudioPersonalityType>                 Tag;                                                      // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UAkAudioBank*                                AudioBank;                                                // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CharacterVOAKBank"));
		return ptr;
	}

};


// Class TBL.ChatInputEditableTextBox
// 0x0000 (0x0A38 - 0x0A38)
class UChatInputEditableTextBox : public UEditableTextBox
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ChatInputEditableTextBox"));
		return ptr;
	}

};


// Class TBL.ChatLineBinding
// 0x0000 (0x0060 - 0x0060)
class UChatLineBinding : public UPropertyBinding
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ChatLineBinding"));
		return ptr;
	}


	struct FChatLine GetValue();
};


// Class TBL.ChatMessageText
// 0x00C0 (0x01C8 - 0x0108)
class UChatMessageText : public UWidget
{
public:
	TArray<struct FName>                               ChatTypeStyles;                                           // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FText>                               ChatFormatStrings;                                        // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FChatLine                                   ChatLine;                                                 // 0x0128(0x0050) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FText                                       TimestampFormatString;                                    // 0x0178(0x0018) (CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             ChatLineDelegate;                                         // 0x0190(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              WrapWidth;                                                // 0x01A0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRenderTimestamps;                                        // 0x01A4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01A5(0x0003) MISSED OFFSET
	struct FScriptDelegate                             bRenderTimestampsDelegate;                                // 0x01A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x10];                                      // 0x01B8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ChatMessageText"));
		return ptr;
	}

};


// Class TBL.ChatWidget
// 0x0088 (0x0190 - 0x0108)
class UChatWidget : public UWidget
{
public:
	struct FMulticastScriptDelegate                    OnAddedChatLine;                                          // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnEnterInputMode;                                         // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnChangedAlwaysVisible;                                   // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnEnterLastChannelInputMode;                              // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bShowTimestamps;                                          // 0x0148(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAlwaysVisible;                                           // 0x0149(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseAbbreviatedChatHistory;                               // 0x014A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x1];                                       // 0x014B(0x0001) MISSED OFFSET
	struct FScriptDelegate                             bUseAbbreviatedChatHistoryDelegate;                       // 0x014C(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	int                                                SecondsToConsiderMessageFresh;                            // 0x015C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnGenerateRowEvent;                                       // 0x0160(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0170(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ChatWidget"));
		return ptr;
	}


	void UsedChat();
	void SetAlwaysVisible(bool InAlwaysVisible);
};


// Class TBL.CinematicAnimationRemapping
// 0x0070 (0x0098 - 0x0028)
class UCinematicAnimationRemapping : public UObject
{
public:
	TArray<struct FCinematicAnimationRemapSet>         RemapSets;                                                // 0x0028(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             AutomapWeaponNames;                                       // 0x0038(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<class UAnimSequenceBase*, int>                AnimToRemapSetsIndex;                                     // 0x0048(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CinematicAnimationRemapping"));
		return ptr;
	}


	class UAnimSequenceBase* OverrideSequencerAnimation(class UAnimSequenceBase* InAnim, class USkeletalMeshComponent* SkelMeshComp);
};


// Class TBL.CinematicState
// 0x0000 (0x0028 - 0x0028)
class UCinematicState : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CinematicState"));
		return ptr;
	}


	void Tick(float DeltaTime);
	void HideLoadingScreen();
	void HandleUIStateChanged(const struct FGameplayTag& UIState);
	void HandleTeamChanged(class ATBLTeam* NewTeam);
	void HandleSuicideNotify(EKillReason KillReason);
	void HandlePossessedPawn(class APawn* Pawn);
	void HandlePendingSpawn(class ASpawner* PendingSpawner, float ServerSpawnTimeSeconds);
	void HandleNextSpawnWaveChanged(class ASpawnWave* SpawnWave);
	void HandleNextSpawnTeamChanged(class ATBLTeam* NewTeam);
	void HandleMatchStateChanged(const struct FName& MatchState);
	void HandleGoingToSpawnAtSpawner(class ASpawner* Spawner);
	void HandleGameCinematicStateChanged(ECinematicGameState GameStateCinematicState);
	void HandleCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState);
	void HandleCharacterAllowControl();
	class ATBLCharacter* GetTBLCharacter();
	class ATBLPlayerController* GetPlayerController();
	class UCinematicsComponent* GetCinematicsComponent();
	void EndState(const struct FGameplayTag& NextState);
	void BeginState(const struct FGameplayTag& PreviousState);
};


// Class TBL.CinematicsComponent
// 0x0130 (0x0238 - 0x0108)
class UCinematicsComponent : public UActorComponent
{
public:
	struct FGameplayTag                                InitialState;                                             // 0x0108(0x0008) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, TSoftClassPtr<class UClass>> DefaultStates;                                            // 0x0110(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCinematicStateChanged;                                  // 0x0160(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class UCinematicState*>  States;                                                   // 0x0170(0x0050) (CPF_NativeAccessSpecifierPrivate)
	struct FGameplayTag                                CurrentState;                                             // 0x01C0(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FGameplayTag                                CurrentUIState;                                           // 0x01C8(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                        CinematicAnimationRemappingClass;                         // 0x01D0(0x0028) (CPF_Config, CPF_GlobalConfig, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UCinematicAnimationRemapping*                CinematicAnimationRemapping;                              // 0x01F8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0200(0x0010) MISSED OFFSET
	TWeakObjectPtr<class UCombatStateComponent>        PreviousCombatStateComponent;                             // 0x0210(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0218(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CinematicsComponent"));
		return ptr;
	}


	void SetUIState(const struct FGameplayTag& UIState);
	bool IsInState(const struct FGameplayTag& State);
	void HandleTeamChanged(class ATBLTeam* NewTeam);
	void HandleSuicideNotify(EKillReason KillReason);
	void HandlePossessedPawn(class APawn* Pawn);
	void HandlePendingSpawn(class ASpawner* PendingSpawner, float ServerSpawnTimeSeconds);
	void HandleNextSpawnWaveChanged(class ASpawnWave* SpawnWave);
	void HandleNextSpawnTeamChanged(class ATBLTeam* NewTeam);
	void HandleMatchStateChanged(const struct FName& MatchState);
	void HandleGoingToSpawnAtSpawner(class ASpawner* Spawner);
	void HandleGameCinematicStateChanged(ECinematicGameState GameStateCinematicState);
	void HandleCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState);
	void GotoState(const struct FGameplayTag& NextState);
	class UCinematicState* GetState(const struct FGameplayTag& Tag);
	struct FGameplayTag GetCurrentUIState();
	struct FGameplayTag GetCurrentStateTag();
	class UCinematicState* GetCurrentState();
	void BindToPlayerState(class APlayerState* PlayerState);
};


// Class TBL.CombatStateBlueprint
// 0x0010 (0x00B8 - 0x00A8)
class UCombatStateBlueprint : public UAssemblyBlueprint
{
public:
	TArray<struct FName>                               Tags;                                                     // 0x00A8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CombatStateBlueprint"));
		return ptr;
	}

};


// Class TBL.CombatStateComponent
// 0x0950 (0x0A58 - 0x0108)
class UCombatStateComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0108(0x0028) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnCombatStateChanged;                                     // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnStartAttack;                                            // 0x0140(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSwitchAttack;                                           // 0x0150(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCombatStateBegin;                                       // 0x0160(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCombatStateEnd;                                         // 0x0170(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCrowdControlNoDamage;                                   // 0x0180(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnAnimationEnd;                                           // 0x0190(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCombatStateEvent;                                       // 0x01A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnRagdollHitEvent;                                        // 0x01B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnRagdollHitFxEvent;                                      // 0x01C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnGetUp;                                                  // 0x01D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnProjectileCounterWindowStart;                           // 0x01E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnProjectileCounterWindowEnd;                             // 0x01F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCounterWindowStart;                                     // 0x0200(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCounterWindowEnd;                                       // 0x0210(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnActiveRiposteWindowStart;                               // 0x0220(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnActiveRiposteWindowEnd;                                 // 0x0230(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDownedStateChanged;                                     // 0x0240(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FName                                       InitialState;                                             // 0x0250(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicatedCombatStateInfo                  SimulatedCombatState;                                     // 0x0258(0x000A) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0262(0x0006) MISSED OFFSET
	TArray<struct FDelayedQueueHeldInputs>             DelayedQueueHeldInputs;                                   // 0x0268(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     DisplayDebugTitle;                                        // 0x0278(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              OverrideHitDirectionTime;                                 // 0x0288(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       OverrideHitDirection;                                     // 0x028C(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                OverrideCrowdControlVariant;                              // 0x0294(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FTurnLimitState                             TurnLimitState;                                           // 0x0298(0x0048) (CPF_Transient, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    PostUpdateWeaponTracers;                                  // 0x02E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bWeaponTracersUpdating : 1;                               // 0x02F0(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bForceCanMount : 1;                                       // 0x02F0(0x0001) (CPF_BlueprintVisible, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bHorseAttackSwitchDirection : 1;                          // 0x02F0(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x02F1(0x0007) MISSED OFFSET
	struct FReplicated_FReplicatedCombatStateInfo      ReplicatedCombatState;                                    // 0x02F8(0x0020) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UCombatStateSynchronization*                 CombatStateSynchronization;                               // 0x0318(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCombatStateQueue*                           CombatStateQueue;                                         // 0x0320(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UDataTable*                                  NonAbilitiesAnimationDataTable;                           // 0x0328(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x20];                                      // 0x0330(0x0020) MISSED OFFSET
	class UCombatStateSet*                             CombatStateSet;                                           // 0x0350(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<struct FName, class UCombatState*>            AllStates;                                                // 0x0358(0x0050) (CPF_NativeAccessSpecifierPrivate)
	struct FCombatStateInfo                            CurrentState;                                             // 0x03A8(0x0128) (CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPrivate)
	struct FName                                       CurrentEvent;                                             // 0x04D0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                ComboCount;                                               // 0x04D8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                IdenticalComboCount;                                      // 0x04DC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FPreviousCombatState>                PreviousStates;                                           // 0x04E0(0x0010) (CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FSwingThroughInfo                           CurrentSwingThroughInfo;                                  // 0x04F0(0x0050) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	TArray<struct FSwingThroughInfo>                   PreviousSwingThroughInfo;                                 // 0x0540(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<struct FName, float>                          CooldownEndTime;                                          // 0x0550(0x0050) (CPF_NativeAccessSpecifierPrivate)
	struct FString                                     ErrorMessage;                                             // 0x05A0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bIsValidCombatState;                                      // 0x05B0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bWasKilled;                                               // 0x05B1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bIsSwitchingStates;                                       // 0x05B2(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bCancelToParry;                                           // 0x05B3(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FNextStateQueue                             NextStateQueue;                                           // 0x05B4(0x0010) (CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	bool                                               bHasNextStateInputParams;                                 // 0x05C4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x3];                                       // 0x05C5(0x0003) MISSED OFFSET
	struct FInputPressedParams                         NextStateInputParams;                                     // 0x05C8(0x0038) (CPF_NativeAccessSpecifierPrivate)
	struct FDamageTakenEvent                           LastDamageEvent;                                          // 0x0600(0x0148) (CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPrivate)
	class AActor*                                      LastAttacker;                                             // 0x0748(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              AnimationTimerOvertime;                                   // 0x0750(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bShouldOverrideCurrentAnimTiming;                         // 0x0754(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0755(0x0003) MISSED OFFSET
	struct FAnimationTiming                            OverrideCurrentAnimTiming;                                // 0x0758(0x0014) (CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	float                                              SyncClientTimeStamp;                                      // 0x076C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bSyncStartAttack;                                         // 0x0770(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bIsStartingAttack;                                        // 0x0771(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData06[0x6];                                       // 0x0772(0x0006) MISSED OFFSET
	struct FCombatStateStartAttack                     SyncStartAttackParams;                                    // 0x0778(0x0038) (CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData07[0xA0];                                      // 0x07B0(0x00A0) MISSED OFFSET
	TArray<class UAction*>                             InstancedObjects;                                         // 0x0850(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bWeaponTracerStarted;                                     // 0x0860(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData08[0x7];                                       // 0x0861(0x0007) MISSED OFFSET
	TArray<class AInventoryItem*>                      CurrentTracerWeapons;                                     // 0x0868(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              EndTracerTime;                                            // 0x0878(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                OnEndAnimationTimerHandle;                                // 0x087C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UDataTable*                                  AbilitiesOverridesDataTable;                              // 0x0880(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bSwitchAttack;                                            // 0x0888(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0889(0x0007) MISSED OFFSET
	struct FAttackInfo                                 SwitchAttackInfo;                                         // 0x0890(0x0108) (CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FName>                               OverrideTimingStates;                                     // 0x0998(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FName>                               InterruptingCombatStates;                                 // 0x09A8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FName>                               CooldownRefreshCombatStates;                              // 0x09B8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FName>                               KnockedDownCombatStates;                                  // 0x09C8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FName>                               DownedCombatStates;                                       // 0x09D8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FName>                               CounterAttacks;                                           // 0x09E8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FName>                               ActiveRiposteAttacks;                                     // 0x09F8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              DrawStrengthModifier;                                     // 0x0A08(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                ProjectileCounterTimer;                                   // 0x0A0C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                CounterTimer;                                             // 0x0A10(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                ActiveRiposteTimer;                                       // 0x0A14(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              DashTime;                                                 // 0x0A18(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              AttackStartTime;                                          // 0x0A1C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              FeintStartTime;                                           // 0x0A20(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              NewFeintTime;                                             // 0x0A24(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              NewFeintAttackTime;                                       // 0x0A28(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              NewFeintHeavyAttackTime;                                  // 0x0A2C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class ULockTurnAngle*                              LockTurnAngle;                                            // 0x0A30(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UDrainStamina*                               DrainStamina;                                             // 0x0A38(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bAbilityActivated;                                        // 0x0A40(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bIsFocused;                                               // 0x0A41(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData10[0x2];                                       // 0x0A42(0x0002) MISSED OFFSET
	float                                              LagCompensation;                                          // 0x0A44(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              MaxLagCompensationMS;                                     // 0x0A48(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              LastCancelTime;                                           // 0x0A4C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bWasInterruptedByJab;                                     // 0x0A50(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bWasHitByProjectile;                                      // 0x0A51(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData11[0x6];                                       // 0x0A52(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CombatStateComponent"));
		return ptr;
	}


	bool WasInterruptedByJab();
	bool WasHitByProjectile();
	bool WasBlockedWithParryForgivenessWindow();
	void StartProjectileCounterWindow();
	void StartCounterWindow();
	void StartActiveRiposteWindow();
	bool ShouldEndCounterWindow();
	bool ShouldEndActiveRiposteWindow();
	void SetSimulatedCombatState(bool bBroadcastEndState);
	void ServerStartReleaseStab(const struct FCombatStateReleaseStab& Params);
	void ServerStartHeavyAttack(const struct FCombatStateHeavyAttack& Params);
	void ServerStartFire(const struct FCombatStateFire& Params);
	void ServerStartChargeStab(const struct FCombatStateChargeStab& Params);
	void ServerManualReload(const struct FTBL_FManualReload& Params);
	void ServerHitSuccessWorldWithStats(int AttackID, const struct FHitResultCompressed& HitCompressed, bool bParried, bool bBreakableHit);
	void ServerHitSuccess(int AttackID, const struct FHitResultCompressed& HitCompressed, bool bParried, bool bIsInTeamThwackRange);
	void ServerGetUp(const struct FCombatStateGetUp& Params);
	void ServerDisableAttackRootMotion(const struct FTBL_FDisableAttackRootMotion& Params);
	void ServerDebugGotoState(const struct FName& CombatState, const struct FName& HitDirection, int CrowdControlVariant);
	void ServerCancelAttack(const struct FCombatStateCancelAttack& Params);
	void ResetQueuedInputs();
	struct FReplicatedCombatStateInfo ReplicateCombatState(bool bForceNetUpdate);
	void Reload(class AInventoryItem* Item, bool bReplicateToClient);
	void QueueHeldInputs(const struct FName& InputName, bool bIgnoreLastAttackInput);
	void OnWasParried(class ATBLCharacter* AttackingCharacter, class ATBLCharacter* DefendingCharacter, const struct FParryEventState& ParryEventState);
	void OnStaminaDrained();
	void OnReplicatedCombatState();
	void OnRagdolled();
	void OnProjectileCounterWindowTimeout(float OverTime);
	void OnParrySuccess(class ATBLCharacter* DefendingCharacter, class ATBLCharacter* AttackingCharacter, const struct FParryEventState& ParryEventState);
	void OnMovementInput(const struct FName& Direction);
	void OnMeleeSuccess(class ATBLCharacter* HitCharacter);
	void OnLanded(const struct FLandedResult& LandedResult);
	void OnKilled();
	void OnJumpPressed();
	void OnItemStackChanged(class AInventoryItem* Item, int Delta);
	void OnHitWorld(class AActor* HitActor, bool bBreakableHit, bool bAutonomous);
	void OnEndAnimationTimeout(float OverTime);
	void OnEndAnimation();
	void OnDismount(class AActor* AttachParent, EDismountType DismountType);
	void OnDamageCaused(const struct FDamageTakenEvent& DamageEvent);
	void OnDamage(const struct FDamageTakenEvent& DamageEvent);
	void OnCounterWindowTimeout(float OverTime);
	void OnClash(class ATBLCharacter* Initiator, class ATBLCharacter* Target);
	void OnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnActiveRiposteWindowTimeout(float OverTime);
	void OnActivateTimer(float OverTime);
	void OnAbilityInitiated(class AAbilityInvocation* Invocation);
	void ManualReload();
	bool IsUsingAttackTracers();
	bool IsRiposte();
	bool IsPreMovement();
	bool IsParryQueued();
	bool IsKnockedDown();
	bool IsInterrupted();
	bool IsInState(const struct FName& StateName);
	bool IsInProjectileCounterWindow();
	bool IsInParryForgivenessWindow();
	bool IsInCounterWindow();
	bool IsInActiveRiposteWindow();
	bool IsHoldingInput();
	bool IsHoldAttackPressed();
	bool IsHeavy();
	bool IsFocused();
	bool IsFeint();
	bool IsDowned();
	bool IsCounter();
	bool IsCombo();
	bool IsCancelling();
	bool IsActiveRiposte();
	bool IsActiveCounter();
	bool IsAbilityUnblockable();
	void HandleDelayedQueueHeldInputs();
	void GotoStateReplicated(const struct FName& NextStateName, bool bAutonomous, float OverrideStateTime, ECrowdControlVariant Variant);
	void GotoState(const struct FName& NextStateName, float OverrideStateTime, bool bStartAttack, ECrowdControlVariant Variant);
	void GotoParrySuccessReplicated(int ParryAttackID, bool bWasBlockedWithParryForgivenessWindow);
	void GotoCounterReadyStateReplicated(int ParryAttackID, const struct FName& AttackerAttackName);
	struct FName GetState();
	struct FName GetQueuedInput();
	struct FCombatStateInfo GetPreviousStateInfoByName(const struct FName& InCombatState);
	struct FCombatStateInfo GetPreviousStateInfo(bool bLastAttackState, bool bIgnoreQuickIdle);
	float GetMinimumHoldingTime();
	ECrowdControlDirection GetLastHitDirection_CrowdControl();
	struct FName GetLastHitDirection();
	float GetFeintMinTime();
	TArray<struct FString> GetDebugPreviousSwingThroughInfo();
	TArray<struct FString> GetDebugPreviousStates();
	struct FCombatStateInfo GetCurrentStateInfo();
	EAttackTypeCategory GetCurrentAttackTypeCategory();
	float GetCurrentAttackTime();
	class AInventoryItem* GetCurrentAttackItem();
	struct FAttackInfo GetCurrentAttackInfo(bool bLastValidAttack);
	struct FName GetCurrentAttackDirection();
	struct FName GetCurrentAttackComboState();
	struct FName GetCurrentAttackCategory();
	struct FName GetCurrentAttack();
	float GetCurrentAnimationLength();
	float GetCounterWindowTime();
	struct FString GetComboTimingPolicyString(EComboTimingPolicy ComboTimingPolicy);
	class UCombatStateSynchronization* GetCombatStateSynchronization();
	class UCombatStateQueue* GetCombatStateQueue();
	class UCombatState* GetCombatStateBlueprint(const struct FName& StateName);
	float GetClientTimeStamp();
	struct FString GetAttackTransitionString(EAttackTransition AttackTransition);
	float GetAttackCooldownRemainingByName(const struct FName& AttackName);
	void ExtendCounterWindow();
	void EndProjectileCounterWindow();
	void EndCounterWindow();
	void EndActiveRiposteWindow();
	void DoHitSuccess(int AttackID, const struct FHitResultCompressed& HitCompressed, bool bParried, bool bIsInTeamThwackRange);
	bool DidLastAttackDisarm();
	void DebugGotoState(const struct FName& CombatState, const struct FName& HitDirection, int CrowdControlVariant);
	void CrowdControl_NoDamage(ECrowdControlCombatState CombatState, const struct FCrowdControlParams& CrowdControlParams, bool bAutonomous);
	void ClientRecordPreviousSwingThroughInfo(const struct FSwingThroughInfo& SwingThroughInfo);
	void ClientOutOfStamina(const struct FName& NewState);
	void ClientGotoState(const struct FName& NextState, float OverrideStateTime, ECrowdControlVariant Variant);
	void ClientGotoParrySuccess(int ParryAttackID, bool bWasBlockedWithParryForgivenessWindow);
	void ClientGotoCounterReadyState(int ParryAttackID, const struct FName& AttackerAttackName);
	void ClientCancelProjectile(const struct FName& CombatState);
	bool CanDoHeavyAttack();
	bool CanCrouch();
	void BroadcastGetUp(const struct FName& Direction);
	void BroadcastDrawStrengthModifier(unsigned char InDrawStrengthModifier);
	void BroadcastDebugGotoState(const struct FName& CombatState, const struct FName& HitDirection, int CrowdControlVariant);
	void BroadcastCrowdControl_NoDamage(ECrowdControlCombatState CombatState, const struct FCrowdControlParams& CrowdControlParams, bool bSkipAutonomous);
	void AnimNotify_EndWeaponTracers();
	void AnimNotify_ActivateAbility();
	bool AbilityHasMeleeTargetMethod(class UAbilitySpec* AbilitySpec);
};


// Class TBL.CombatStateQueue
// 0x0200 (0x0308 - 0x0108)
class UCombatStateQueue : public UActorComponent
{
public:
	class UCombatStateComponent*                       CombatStateComponent;                                     // 0x0108(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCombatStateSynchronization*                 CombatStateSynchronization;                               // 0x0110(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               EarlyBlockStates;                                         // 0x0118(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               ParryCounterQueueStates;                                  // 0x0128(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               SendHeldInputToServer;                                    // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               HeldInput;                                                // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FInputPressedParams>                 InputQueue;                                               // 0x0158(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FAttackInfo>                         AttackList;                                               // 0x0168(0x0010) (CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                PendingAttackId;                                          // 0x0178(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
	struct FAttackInfo                                 PendingParryCounterAttack;                                // 0x0180(0x0108) (CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bHoldAttack;                                              // 0x0288(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0289(0x0003) MISSED OFFSET
	struct FName                                       HoldAttackQueued;                                         // 0x028C(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HoldAttackQueueTime;                                      // 0x0294(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              GamepadReloadPressedStartTime;                            // 0x0298(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAltAttack;                                               // 0x029C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bToggleAlt;                                               // 0x029D(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFocusHeld;                                               // 0x029E(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFocusAttackHeld;                                         // 0x029F(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastAltAttackPressedTime;                                 // 0x02A0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastAltAttackTime;                                        // 0x02A4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeSinceLastQueuedAttack;                                // 0x02A8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CancelAttackPressedTime;                                  // 0x02AC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CancelIntoParryPressedTime;                               // 0x02B0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsCancelAttackKeyDown;                                   // 0x02B4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsCancelIntoParryKeyDown;                                // 0x02B5(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsCancelGamepadKeyDown;                                  // 0x02B6(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsParryGamepadKeyDown;                                   // 0x02B7(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanFeintSameAttackOnGamepad;                             // 0x02B8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x02B9(0x0003) MISSED OFFSET
	float                                              ComboCancelTime;                                          // 0x02BC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ComboCancelTimer;                                         // 0x02C0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x02C4(0x0004) MISSED OFFSET
	TArray<struct FKey>                                ConsumedKeys;                                             // 0x02C8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bShouldComboCancelQueue : 1;                              // 0x02D8(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x3];                                       // 0x02D9(0x0003) MISSED OFFSET
	struct FName                                       ComboCancelQueued;                                        // 0x02DC(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                FeintQueueTimer;                                          // 0x02E4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CancelGamepadTimer;                                       // 0x02E8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFeintQueued;                                             // 0x02EC(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x3];                                       // 0x02ED(0x0003) MISSED OFFSET
	struct FName                                       LastJumpInput;                                            // 0x02F0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bParryQueued;                                             // 0x02F8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x3];                                       // 0x02F9(0x0003) MISSED OFFSET
	struct FName                                       QueuedInput;                                              // 0x02FC(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bQueueHeldInputs;                                         // 0x0304(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisableThrow;                                            // 0x0305(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisableSpecial;                                          // 0x0306(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x1];                                       // 0x0307(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CombatStateQueue"));
		return ptr;
	}


	void TryCancelAttack();
	void ServerRemoveHeldInput(const struct FName& InputActionName);
	void ServerQueueParry();
	void ServerQueueInput(const struct FName& NewQueuedInput);
	void ServerAddHeldInput(const struct FName& InputActionName);
	void QueueFeint(const struct FName& FeintAttack);
	void OnShowInGameMenu();
	void OnFeintQueueTimeout(float OverTime);
	void OnComboCancelTimeout(float OverTime);
	void OnCancelGamepadTimeout(float OverTime);
	void ClearHeldAttackQueue();
};


// Class TBL.CombatStateSet
// 0x0028 (0x0068 - 0x0040)
class UCombatStateSet : public UTBLObject
{
public:
	TArray<class UClass* /*UCombatState*/>             CombatStateBlueprints;                                    // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAutoFillFromDirectory;                                   // 0x0050(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIncludeSubDirectories;                                   // 0x0051(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0052(0x0006) MISSED OFFSET
	TArray<class UClass* /*UCombatState*/>             ExcludeCombatStates;                                      // 0x0058(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CombatStateSet"));
		return ptr;
	}

};


// Class TBL.CombatStateSetBlueprint
// 0x0000 (0x00A8 - 0x00A8)
class UCombatStateSetBlueprint : public UAssemblyBlueprint
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CombatStateSetBlueprint"));
		return ptr;
	}

};


// Class TBL.CombatStateSynchronization
// 0x0298 (0x03A0 - 0x0108)
class UCombatStateSynchronization : public UActorComponent
{
public:
	class UCombatStateComponent*                       CombatStateComponent;                                     // 0x0108(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCombatStateQueue*                           CombatStateQueue;                                         // 0x0110(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                LatestAttackID;                                           // 0x0118(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	TArray<struct FSyncAttackId>                       ReceivedAcks;                                             // 0x0120(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FSyncAttackId>                       FailedAttacks;                                            // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FSyncAttackId>                       CancelledAttacks;                                         // 0x0140(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FFailedAttackInfo                           LastFailedAttack;                                         // 0x0150(0x0250) (CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CombatStateSynchronization"));
		return ptr;
	}


	void ClientOnAttackFailed(int AttackID);
};


// Class TBL.ConditionalActions
// 0x0070 (0x01E8 - 0x0178)
class UConditionalActions : public UAction
{
public:
	TArray<class UCondition*>                          Conditions;                                               // 0x0178(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAction*>                             Actions;                                                  // 0x0188(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAction*>                             FalseActions;                                             // 0x0198(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAlwaysOnDeadPawn;                                        // 0x01A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01A9(0x0007) MISSED OFFSET
	struct FAbilityInitiationParams                    LastInitiationParams;                                     // 0x01B0(0x0038) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ConditionalActions"));
		return ptr;
	}

};


// Class TBL.ConditionsComponent
// 0x0128 (0x0230 - 0x0108)
class UConditionsComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnApplyCondition;                                         // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnRemoveCondition;                                        // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UConditionsSpec*                             ConditionsSpec;                                           // 0x0138(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                DownedTurnRateId;                                         // 0x0140(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                NumTimesDowned;                                           // 0x0144(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                NumTimesCrippled;                                         // 0x0148(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                BleedingTicks;                                            // 0x014C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                BurningTicks;                                             // 0x0150(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                OnFireTicks;                                              // 0x0154(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              DownedScore;                                              // 0x0158(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              MaxDownedScore;                                           // 0x015C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x48];                                      // 0x0160(0x0048) MISSED OFFSET
	TArray<struct FConditionEntry>                     Conditions;                                               // 0x01A8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FReplicated_UInt32                          ReplicatedConditions;                                     // 0x01B8(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FReplicated_Float                           TotalBurnTime;                                            // 0x01D0(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FReplicated_Float                           TotalOnFireTime;                                          // 0x01E8(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FReplicated_Int8                            ReplicatedDownedScore;                                    // 0x0200(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FReplicated_Bool                            bDownedCanGetup;                                          // 0x0218(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ConditionsComponent"));
		return ptr;
	}


	void SetDownedScore(float Score);
	void ServerGetUpFromDowned();
	void Revive(class ATBLCharacter* RevivedBy);
	void ReplicateConditions();
	void RemoveCondition(EConditionType Condition, bool bClearStacks, class AActor* ConditionRemover);
	void OnRep_DownedScore();
	void OnRep_Conditions();
	void OnDownedDamageCaused(const struct FDamageTakenEvent& Event);
	bool HasCondition(EConditionType Condition);
	void HandleOwnerUsed(class APawn* UsedBy, class UInteractableComponent* InteractableComponent);
	void HandleOwnerPreBroadcastDamage(const struct FDamageTakenEvent& DamageTakenEvent);
	void HandleOwnerDamageTaken(const struct FDamageTakenEvent& Event);
	void GetUpFromDowned();
	float GetMaxDownedScore();
	float GetDownedTime();
	float GetDownedScorePercent();
	float GetDownedScore();
	bool GetDownedCanGetUp();
	void ApplyCondition(EConditionType Condition, class AActor* DamageCauser);
};


// Class TBL.ConditionsSpec
// 0x00D0 (0x0178 - 0x00A8)
class UConditionsSpec : public UAssemblyBlueprint
{
public:
	TArray<EConditionType>                             ValidConditions;                                          // 0x00A8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDamageSource*                               FallDamageSource;                                         // 0x00B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDamageSource*                               FireDamageSource;                                         // 0x00C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDamageSource*                               WaterDamageSource;                                        // 0x00C8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                DownedDeathSaveHealth;                                    // 0x00D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DownedTurnRatePercent;                                    // 0x00D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FDownedScore                                DownedScore;                                              // 0x00D8(0x0028) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              ShellShockTime;                                           // 0x0100(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BleedingTime;                                             // 0x0104(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                BleedingTicks;                                            // 0x0108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BleedingDamagePerTick;                                    // 0x010C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDamageSource*                               BleedingDamageType;                                       // 0x0110(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BleedingFatalTime;                                        // 0x0118(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	class UDamageSource*                               BleedingFatalDamageType;                                  // 0x0120(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BurningTime;                                              // 0x0128(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                BurningTicks;                                             // 0x012C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BurningDamagePerTick;                                     // 0x0130(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	class UDamageSource*                               BurningDamageType;                                        // 0x0138(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              OnFireTime;                                               // 0x0140(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                OnFireTicks;                                              // 0x0144(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              OnFireDamagePerTick;                                      // 0x0148(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	class UDamageSource*                               OnFireDamageType;                                         // 0x0150(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CrippledTime;                                             // 0x0158(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MaxTimesFallingDamageDeathSave;                           // 0x015C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                FallingDamageDeathSaveHealth;                             // 0x0160(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MultipleDismembermentDeathSaveHealth;                     // 0x0164(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RequiredOverkillDamageToKill;                             // 0x0168(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BandageKitTime;                                           // 0x016C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              InspiredTime;                                             // 0x0170(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0174(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ConditionsSpec"));
		return ptr;
	}

};


// Class TBL.ContextVOManager
// 0x0050 (0x0078 - 0x0028)
class UContextVOManager : public UObject
{
public:
	TMap<TWeakObjectPtr<class UObject>, struct FTimersArray> StageTimerHandles;                                        // 0x0028(0x0050) (CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ContextVOManager"));
		return ptr;
	}


	void RemoveStage(class UObject* Stage);
	void AddStageContextVo(class UObject* Stage, TArray<struct FContextVoEntry> ContextVO);
};


// Class TBL.CounterXTask
// 0x0000 (0x0050 - 0x0050)
class UCounterXTask : public UTBLAchievementTaskCountable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CounterXTask"));
		return ptr;
	}

};


// Class TBL.CounterXWorker
// 0x0000 (0x00C0 - 0x00C0)
class UCounterXWorker : public UTBLAchievementWorker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CounterXWorker"));
		return ptr;
	}


	void OnCounteredAttack(EDefenderBlockedPolicy BlockPolicy, class ATBLCharacter* AttackingCharacter, class ATBLPlayerController* Controller);
};


// Class TBL.MapModifierProperty
// 0x0040 (0x0068 - 0x0028)
class UMapModifierProperty : public UObject
{
public:
	struct FText                                       Name;                                                     // 0x0028(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FText                                       Description;                                              // 0x0040(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FString                                     CommandlineStr;                                           // 0x0058(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MapModifierProperty"));
		return ptr;
	}


	void SetNameAndDescription(const struct FText& inName, const struct FText& inDescription);
};


// Class TBL.MapModifierFloatProperty
// 0x0010 (0x0078 - 0x0068)
class UMapModifierFloatProperty : public UMapModifierProperty
{
public:
	float                                              DefaultValue;                                             // 0x0068(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinValue;                                                 // 0x006C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxValue;                                                 // 0x0070(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              Value;                                                    // 0x0074(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MapModifierFloatProperty"));
		return ptr;
	}


	void SetValue(float NewValue);
};


// Class TBL.MapModifierIntProperty
// 0x0010 (0x0078 - 0x0068)
class UMapModifierIntProperty : public UMapModifierProperty
{
public:
	int                                                DefaultValue;                                             // 0x0068(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MinValue;                                                 // 0x006C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MaxValue;                                                 // 0x0070(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                Value;                                                    // 0x0074(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MapModifierIntProperty"));
		return ptr;
	}


	void SetValue(int NewValue);
};


// Class TBL.MapModifierBoolProperty
// 0x0008 (0x0070 - 0x0068)
class UMapModifierBoolProperty : public UMapModifierProperty
{
public:
	bool                                               DefaultValue;                                             // 0x0068(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               Value;                                                    // 0x0069(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x006A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MapModifierBoolProperty"));
		return ptr;
	}


	void SetValue(bool NewValue);
};


// Class TBL.MapModifierComboBoxProperty
// 0x0018 (0x0080 - 0x0068)
class UMapModifierComboBoxProperty : public UMapModifierProperty
{
public:
	int                                                DefaultValue;                                             // 0x0068(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                Value;                                                    // 0x006C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FText>                               TextValues;                                               // 0x0070(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MapModifierComboBoxProperty"));
		return ptr;
	}


	void SetValue(int NewValue);
};


// Class TBL.MapOptionsObject
// 0x00D8 (0x0100 - 0x0028)
class UMapOptionsObject : public UObject
{
public:
	struct FText                                       MapName;                                                  // 0x0028(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	TArray<TEnumAsByte<EGameModeType>>                 GameModeTypes;                                            // 0x0040(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<TEnumAsByte<EGameModeType>, struct FMapModifierPropertiesArray> MapPropertiesByGameModeType;                              // 0x0050(0x0050) (CPF_NativeAccessSpecifierPublic)
	TMap<TEnumAsByte<EGameModeType>, struct FText>     MapNameByGameMode;                                        // 0x00A0(0x0050) (CPF_NativeAccessSpecifierPublic)
	class UMapModifierComboBoxProperty*                GamemodeTypesComboboxProperty;                            // 0x00F0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMapModifierComboBoxProperty*                ServerTypeComboboxProperty;                               // 0x00F8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MapOptionsObject"));
		return ptr;
	}


	bool GetMapMofidiersForGameMode(TEnumAsByte<EGameModeType> GamemodeType, TArray<class UMapModifierProperty*>* MapModifiers);
	struct FText GetGameModeMapName(TEnumAsByte<EGameModeType> GamemodeType);
	struct FString GenerateMapURL(TArray<class UMapModifierProperty*> InMapModifierProperties);
};


// Class TBL.GameConfigObjectBase
// 0x0050 (0x0078 - 0x0028)
class UGameConfigObjectBase : public UObject
{
public:
	TMap<struct FString, struct FMapSummaryData>       MapSummaryLookup;                                         // 0x0028(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_EditConst, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.GameConfigObjectBase"));
		return ptr;
	}


	void ClearCachedMapsData();
	void CacheMapData(const struct FMapOption& MapOption);
	void CacheAllMapsData(TArray<struct FMapOption> MapOptions, bool bClearOldData);
	void BuildDerivedProperties();
};


// Class TBL.CreateGameLibrary
// 0x0068 (0x0090 - 0x0028)
class UCreateGameLibrary : public UBlueprintFunctionLibrary
{
public:
	TMap<TEnumAsByte<EGameModeType>, struct FMapModifierPropertiesArray> DefaultGameModeModifiers;                                 // 0x0028(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	TArray<class UMapModifierProperty*>                DefaultModifiers;                                         // 0x0078(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                GlobalTimeLimitOverride;                                  // 0x0088(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CreateGameLibrary"));
		return ptr;
	}


	static class UMapOptionsObject* MakeMapOption(class UObject* WorldContextObject, const struct FMapOption& MapOptions);
	static void GetTOOptions(class UObject* WorldContextObject, int* ThereAreNoOptionsAtTheMoment);
	static void GetTDMOptions(class UObject* WorldContextObject, int* TicketCountOverride, int* TimeLimitOverride);
	static int GetGlobalTimeLimitOverride();
	static bool GetGenericModifiers(TArray<class UMapModifierProperty*>* Modifiers);
	static void GetFFAOptions(class UObject* WorldContextObject, int* ScoreLimitOverride, int* TimeLimitOverride);
	static bool GetDefaultModifiersForGameMode(TEnumAsByte<EGameModeType> GameMode, TArray<class UMapModifierProperty*>* Modifiers);
};


// Class TBL.CreditsScrollBox
// 0x0020 (0x08A0 - 0x0880)
class UCreditsScrollBox : public UScrollBox
{
public:
	float                                              SecondsBeforeResumingScroll;                              // 0x0880(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ScrollPerSecond;                                          // 0x0884(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ReversePerSecond;                                         // 0x0888(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxScrollOffset;                                          // 0x088C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0890(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CreditsScrollBox"));
		return ptr;
	}


	void UpdateScrolling(float DeltaTime);
	TArray<struct FCreditsSection> GetCredits();
};


// Class TBL.CrowdControl
// 0x0008 (0x0180 - 0x0178)
class UCrowdControl : public UAction
{
public:
	ECrowdControlCombatState                           CombatState;                                              // 0x0178(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0179(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CrowdControl"));
		return ptr;
	}

};


// Class TBL.VirtualGood
// 0x0108 (0x0200 - 0x00F8)
class UVirtualGood : public UGameSparksAsset
{
public:
	int64_t                                            ID;                                                       // 0x00F8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSlateBrush                                 Icon;                                                     // 0x0100(0x0088) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	int                                                MaxQuantity;                                              // 0x0188(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x018C(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       TagContainer;                                             // 0x0190(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FString                                     Type;                                                     // 0x01B0(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FText                                       CategoryText;                                             // 0x01C0(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               BackendTags;                                              // 0x01D8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bTransient;                                               // 0x01E8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01E9(0x0007) MISSED OFFSET
	TArray<struct FPrimaryAssetId>                     BundledItems;                                             // 0x01F0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.VirtualGood"));
		return ptr;
	}

};


// Class TBL.VirtualGoodItem
// 0x0000 (0x0200 - 0x0200)
class UVirtualGoodItem : public UVirtualGood
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.VirtualGoodItem"));
		return ptr;
	}

};


// Class TBL.CTBase
// 0x0128 (0x0328 - 0x0200)
class UCTBase : public UVirtualGoodItem
{
public:
	int                                                LoadPriority;                                             // 0x0200(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0204(0x0004) MISSED OFFSET
	TArray<ECustomizationTag>                          Tags;                                                     // 0x0208(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FCustomizationAttributes                    CustomizationAttributes;                                  // 0x0218(0x0110) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_AssetRegistrySearchable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTBase"));
		return ptr;
	}


	bool Apply(class APawn* InPawn, struct FCustomizationContext* InContext);
};


// Class TBL.CTArmourSet
// 0x0010 (0x0338 - 0x0328)
class UCTArmourSet : public UCTBase
{
public:
	class UCTTorso*                                    Torso;                                                    // 0x0328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCTLeg*                                      Leg;                                                      // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTArmourSet"));
		return ptr;
	}

};


// Class TBL.CTBaseCharacter
// 0x0000 (0x0328 - 0x0328)
class UCTBaseCharacter : public UCTBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTBaseCharacter"));
		return ptr;
	}

};


// Class TBL.CTBeard
// 0x0020 (0x0348 - 0x0328)
class UCTBeard : public UCTBase
{
public:
	class USkeletalMesh*                               Mesh;                                                     // 0x0328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInterface*                          Material;                                                 // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTexture*                                    Utility;                                                  // 0x0338(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTexture*                                    Normal;                                                   // 0x0340(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTBeard"));
		return ptr;
	}

};


// Class TBL.CTEyeColors
// 0x0010 (0x0338 - 0x0328)
class UCTEyeColors : public UCTBase
{
public:
	struct FLinearColor                                Color;                                                    // 0x0328(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTEyeColors"));
		return ptr;
	}

};


// Class TBL.CTFacePaint
// 0x0018 (0x0340 - 0x0328)
class UCTFacePaint : public UCTBase
{
public:
	class UTexture*                                    Map;                                                      // 0x0328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                Color;                                                    // 0x0330(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTFacePaint"));
		return ptr;
	}

};


// Class TBL.CTHair
// 0x0020 (0x0348 - 0x0328)
class UCTHair : public UCTBase
{
public:
	class USkeletalMesh*                               Mesh;                                                     // 0x0328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInterface*                          Material;                                                 // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTexture*                                    Utility;                                                  // 0x0338(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTexture*                                    Normal;                                                   // 0x0340(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTHair"));
		return ptr;
	}

};


// Class TBL.CTHairColor
// 0x0030 (0x0358 - 0x0328)
class UCTHairColor : public UCTBase
{
public:
	struct FLinearColor                                Color;                                                    // 0x0328(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                Color2;                                                   // 0x0338(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                DisplayColor;                                             // 0x0348(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTHairColor"));
		return ptr;
	}

};


// Class TBL.CTHead
// 0x0018 (0x0340 - 0x0328)
class UCTHead : public UCTBase
{
public:
	class USkeletalMesh*                               Mesh;                                                     // 0x0328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInterface*                          Material;                                                 // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       MorphTarget;                                              // 0x0338(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTHead"));
		return ptr;
	}

};


// Class TBL.CTHelmet
// 0x0018 (0x0340 - 0x0328)
class UCTHelmet : public UCTBase
{
public:
	class USkeletalMesh*                               Mesh;                                                     // 0x0328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInterface*                          Material;                                                 // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HideHair;                                                 // 0x0338(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HideBeard;                                                // 0x0339(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HideEar;                                                  // 0x033A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               JoustHelmet;                                              // 0x033B(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x033C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTHelmet"));
		return ptr;
	}

};


// Class TBL.CTHeraldry
// 0x0010 (0x0338 - 0x0328)
class UCTHeraldry : public UCTBase
{
public:
	class UTexture*                                    Color;                                                    // 0x0328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTexture*                                    Normal;                                                   // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTHeraldry"));
		return ptr;
	}

};


// Class TBL.CTLeg
// 0x0038 (0x0360 - 0x0328)
class UCTLeg : public UCTBase
{
public:
	TSoftObjectPtr<class USkeletalMesh>                Mesh;                                                     // 0x0328(0x0028) (CPF_Edit, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInterface*                          Material;                                                 // 0x0350(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HasKneePadLeft;                                           // 0x0358(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HasKneePadRight;                                          // 0x0359(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x035A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTLeg"));
		return ptr;
	}

};


// Class TBL.CTNickname
// 0x0018 (0x0340 - 0x0328)
class UCTNickname : public UCTBase
{
public:
	struct FText                                       Nickname;                                                 // 0x0328(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTNickname"));
		return ptr;
	}

};


// Class TBL.CTNovelty
// 0x0008 (0x0330 - 0x0328)
class UCTNovelty : public UCTBase
{
public:
	class UClass* /*AInventoryItem*/                   Asset;                                                    // 0x0328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTNovelty"));
		return ptr;
	}


	class UClass* /*UObject*/ ResolveAssetClass();
};


// Class TBL.CTPersonality
// 0x0008 (0x0330 - 0x0328)
class UCTPersonality : public UCTBase
{
public:
	TEnumAsByte<EAudioPersonalityType>                 PersonalityType;                                          // 0x0328(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0329(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTPersonality"));
		return ptr;
	}

};


// Class TBL.CTScar
// 0x0010 (0x0338 - 0x0328)
class UCTScar : public UCTBase
{
public:
	class UTexture*                                    Color;                                                    // 0x0328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTexture*                                    Normal;                                                   // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTScar"));
		return ptr;
	}

};


// Class TBL.CTShield
// 0x0040 (0x0368 - 0x0328)
class UCTShield : public UCTBase
{
public:
	struct FSoftClassPath                              Asset;                                                    // 0x0328(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStaticMesh*                                 StaticMesh;                                               // 0x0340(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStaticMesh*                                 DamagedStaticMesh;                                        // 0x0348(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStaticMesh*                                 DestroyedStaticMesh;                                      // 0x0350(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInterface*                          Material;                                                 // 0x0358(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EWeaponTag                                         WeaponTag;                                                // 0x0360(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0361(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTShield"));
		return ptr;
	}


	class UClass* /*UObject*/ ResolveAssetClass();
};


// Class TBL.CTSkinTone
// 0x0020 (0x0348 - 0x0328)
class UCTSkinTone : public UCTBase
{
public:
	struct FLinearColor                                Color;                                                    // 0x0328(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                DisplayColor;                                             // 0x0338(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTSkinTone"));
		return ptr;
	}

};


// Class TBL.CTTattoo
// 0x0020 (0x0348 - 0x0328)
class UCTTattoo : public UCTBase
{
public:
	class UTexture*                                    Map;                                                      // 0x0328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ETattooColorChannel                                MapChannel;                                               // 0x0330(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0331(0x0003) MISSED OFFSET
	struct FLinearColor                                InkColor;                                                 // 0x0334(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0344(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTTattoo"));
		return ptr;
	}

};


// Class TBL.CTTorso
// 0x0040 (0x0368 - 0x0328)
class UCTTorso : public UCTBase
{
public:
	TSoftObjectPtr<class USkeletalMesh>                Mesh;                                                     // 0x0328(0x0028) (CPF_Edit, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInterface*                          Material;                                                 // 0x0350(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HideHair;                                                 // 0x0358(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HideBeard;                                                // 0x0359(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HideEar;                                                  // 0x035A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HasShoulderPadLeft;                                       // 0x035B(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HasShoulderPadRight;                                      // 0x035C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HasElbowPadLeft;                                          // 0x035D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HasElbowPadRight;                                         // 0x035E(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HasCoifMorph;                                             // 0x035F(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HasLeftFrontArmorPad;                                     // 0x0360(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HasRightFrontArmorPad;                                    // 0x0361(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HasBackArmorPad;                                          // 0x0362(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HasSkirtBone;                                             // 0x0363(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0364(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTTorso"));
		return ptr;
	}

};


// Class TBL.CTWeapon
// 0x0038 (0x0360 - 0x0328)
class UCTWeapon : public UCTBase
{
public:
	struct FSoftClassPath                              Asset;                                                    // 0x0328(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStaticMesh*                                 StaticMesh;                                               // 0x0340(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInterface*                          Material;                                                 // 0x0348(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMesh*                               SkeletalMesh;                                             // 0x0350(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EWeaponTag                                         WeaponTag;                                                // 0x0358(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0359(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CTWeapon"));
		return ptr;
	}


	class UClass* /*UObject*/ ResolveAssetClass();
};


// Class TBL.SpawnQueuer
// 0x0040 (0x0080 - 0x0040)
class USpawnQueuer : public UTBLObject
{
public:
	struct FName                                       Name;                                                     // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnActivated;                                              // 0x0048(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDeactivated;                                            // 0x0058(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSpawnQueuePlayerReadyToSpawn;                           // 0x0068(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	bool                                               bApplysToAllTeams;                                        // 0x0078(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           Faction;                                                  // 0x0079(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAutoActivate;                                            // 0x007A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAutoDeactivate;                                          // 0x007B(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SpawnQueuer"));
		return ptr;
	}


	bool RequestSpawnFor(class AController* PC);
	bool RemoveFromQueue(class AController* PC);
	void ReceiveDeactivate();
	void ReceiveActivate();
	bool IsActive();
	void Deactivate();
	bool CanDeactivate();
	bool CanActivate();
	void Activate();
};


// Class TBL.CumulativeSpawnQueuer
// 0x0070 (0x00F0 - 0x0080)
class UCumulativeSpawnQueuer : public USpawnQueuer
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0080(0x0008) MISSED OFFSET
	float                                              CumulativeTime;                                           // 0x0088(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              StartingRespawnTime;                                      // 0x008C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FCumulativePlayerSpawnPair>          SpawnQueue;                                               // 0x0090(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<TWeakObjectPtr<class AController>, float>     PlayerCumulativeTimes;                                    // 0x00A0(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CumulativeSpawnQueuer"));
		return ptr;
	}

};


// Class TBL.CustomizationAttachment
// 0x0040 (0x0298 - 0x0258)
class ACustomizationAttachment : public AActor
{
public:
	struct FText                                       DisplayName;                                              // 0x0258(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FName                                       AttachRootComponentName;                                  // 0x0270(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       ThumbnailCameraComponentName;                             // 0x0278(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bAttach1PMesh : 1;                                        // 0x0280(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bAttach3PMesh : 1;                                        // 0x0280(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0281(0x0007) MISSED OFFSET
	TArray<struct FName>                               ExcludeIfAttached;                                        // 0x0288(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CustomizationAttachment"));
		return ptr;
	}

};


// Class TBL.CustomizationComponent
// 0x0090 (0x0198 - 0x0108)
class UCustomizationComponent : public UTBLComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnCustomizationApplied;                                   // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCachedMeshApplied;                                      // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_FCustomizationPreset            CustomizationPreset;                                      // 0x0138(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FCustomizationData                          CustomizationData;                                        // 0x0150(0x0040) (CPF_Transient, CPF_NativeAccessSpecifierPublic)
	bool                                               CustomizationApplied;                                     // 0x0190(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0191(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CustomizationComponent"));
		return ptr;
	}


	void OnRep_CustomizationPreset();
	TArray<struct FPrimaryAssetId> GetPendingCustomization();
	TArray<struct FPrimaryAssetId> GetCurrentCustomization();
	bool FindPreset(struct FCustomizationPreset* OutPreset);
};


// Class TBL.CustomizationConfig
// 0x0050 (0x0078 - 0x0028)
class UCustomizationConfig : public UObject
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0028(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CustomizationConfig"));
		return ptr;
	}


	void GetParametersAndMorphTargetsToApply(const struct FName& Category, int SelectedSwatch, TArray<struct FName>* ScalarNames, TArray<float>* ScalarValues, TArray<struct FName>* VectorNames, TArray<struct FLinearColor>* VectorValues, TArray<struct FName>* TextureNames, TArray<class UTexture*>* TextureValues, TArray<TSoftObjectPtr<class UTexture>>* TextureReferenceValues, TArray<struct FName>* MorphTargetNames, TArray<float>* MorphTargetValues);
	int GetNumSwatchesInCategory(const struct FName& Category);
	void GetCategorySwatchNames(const struct FName& Category, TArray<struct FString>* SwatchNames);
	void GetCategorySwatchAttachments(const struct FName& Category, class UCustomizationComponent* CustomizationComponent, TArray<class UClass* /*ACustomizationAttachment*/>* SwatchAttachments);
	void GetCategories(TArray<struct FName>* Categories);
	void ApplySwatchToMID(const struct FName& SwatchCategoryName, int SelectedSwatch, class UMaterialInstanceDynamic* Mid, class UMeshComponent* MeshComponent);
};


// Class TBL.CustomizationAssetContainer
// 0x0010 (0x0040 - 0x0030)
class UCustomizationAssetContainer : public UDataAsset
{
public:
	TArray<class UCTBase*>                             Assets;                                                   // 0x0030(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CustomizationAssetContainer"));
		return ptr;
	}

};


// Class TBL.CustomizationLibrary
// 0x0000 (0x0028 - 0x0028)
class UCustomizationLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CustomizationLibrary"));
		return ptr;
	}


	static void SetVectorParameterOnMaterials(class ATBLCharacter* Char, const struct FName& ParameterName, const struct FVector& ParameterValue);
	static bool SetTextureParameterValueOnMaterials(class ATBLCharacter* InCharacter, const struct FName& InMeshName, const struct FName& ParameterName, class UTexture* ParameterValue, const struct FName& SlotName);
	static bool SetStaticMeshAndMaterial(class UStaticMeshComponent* SKM, class UStaticMesh* SrcMesh, class UMaterialInterface* Material, const struct FName& SlotName);
	static bool SetScalarParameterValueOnMaterials(class ATBLCharacter* InCharacter, const struct FName& InMeshName, const struct FName& InParameterName, float InParameterValue);
	static void SetScalarParameterOnMaterials(class ATBLCharacter* Char, const struct FName& ParameterName, float ParameterValue);
	static bool SetMorphTarget(class ATBLCharacter* InCharacter, const struct FName& InMeshName, const struct FName& MorphTargetName, float InValue);
	static bool SetMeshAndMaterial(class ATBLCharacter* InCharacter, const struct FName& InMeshName, class USkeletalMesh* SrcMesh, class UMaterialInterface* Material, const struct FName& SlotName);
	static void SetHelmetHidden(class ATBLCharacter* Char, bool Hide);
	static void SetHairHidden(class ATBLCharacter* Char, bool Hide);
	static void SetHairBeardEarHiddenFromContext(class ATBLCharacter* Char, bool bUseItemsVisibilityForContext);
	static void SetEarHidden(class ATBLCharacter* Char, bool Hide);
	static bool SetColorParameterValueOnMaterials(class ATBLCharacter* InCharacter, const struct FName& InMeshName, const struct FName& InParameterName, const struct FLinearColor& InParameterValue);
	static void SetBeardHidden(class ATBLCharacter* Char, bool Hide);
	static void SaveAssetsForClassFaction(class ATBLPlayerState* PlayerState, TEnumAsByte<EAudioClassType> ClassType, EFaction Faction);
	static void PreviewAssetsForClassFaction(class ATBLPlayerState* PlayerState, class ATBLCharacter* Char, TEnumAsByte<EAudioClassType> ClassType, EFaction Faction, const struct FPrimaryAssetId& InAssetIdsToPreview);
	static bool LoadCustomizationPreset(class APawn* Pawn, struct FCustomizationPreset* InPreset);
	static void InitializeContext(TArray<struct FPrimaryAssetId> AssetIds, struct FCustomizationContext* Context);
	static EWeaponTag GetWeaponTagFromPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAsset);
	static class USkeletalMeshComponent* GetTorsoMesh(class ATBLCharacter* Char, bool WantFirstPerson);
	static void GetTattooCustomizationEnabled(bool* Enabled);
	static void GetRandomAssets(class ATBLCharacter* Char, TArray<struct FPrimaryAssetId>* OutAssetIds);
	static class UClass* /*UObject*/ GetPrimaryAssetClass(const struct FPrimaryAssetId& PrimaryAsset);
	static struct FText GetOnlineStoreOfferTitle(const struct FOnlineStoreOffer& OnlineStoreOffer);
	static class USkeletalMeshComponent* GetLegsMesh(class ATBLCharacter* Char, bool WantFirstPerson);
	static struct FText GetItemNameFromAssetId(const struct FPrimaryAssetId& PrimaryAsset);
	static class USkeletalMeshComponent* GetInventorySKMesh(class ATBLCharacter* Char, const struct FSoftObjectPath& WeaponAsset, class AActor** ItemOut);
	static class UStaticMeshComponent* GetInventoryMesh(class ATBLCharacter* Char, const struct FSoftObjectPath& WeaponAsset, class AActor** ItemOut);
	static class USkeletalMeshComponent* GetHelmetMesh(class ATBLCharacter* Char, bool WantFirstPerson);
	static class USkeletalMeshComponent* GetHeadMesh(class ATBLCharacter* Char, bool WantFirstPerson);
	static class USkeletalMeshComponent* GetHairMesh(class ATBLCharacter* Char, bool WantFirstPerson);
	static class UCTBase* GetCustomizationAsset(class ATBLCharacter* Char, class UClass* /*UCTBase*/ CustomizationType, class UClass* /*AInventoryItem*/ WeaponClass);
	static class USkeletalMeshComponent* GetBeardMesh(class ATBLCharacter* Char, bool WantFirstPerson);
	static void GetAllWeaponMesh(class ATBLCharacter* Char, TArray<class UMeshComponent*>* OutComponents);
	static void GetAllCharMesh(class ATBLCharacter* Char, TArray<class UMeshComponent*>* OutComponents);
	static bool ForceAllMipLevelsOnMaterials(class ATBLCharacter* InCharacter, const struct FName& InMeshName, const struct FName& ParameterName, const struct FName& SlotName, float Seconds);
	static void EquipAssetsForClassFaction(class ATBLPlayerState* PlayerState, class ATBLCharacter* Char, TEnumAsByte<EAudioClassType> ClassType, EFaction Faction, TArray<struct FPrimaryAssetId> InAssetIds, TArray<class UClass* /*UCTBase*/> CTClassesToIgnore);
	static void CustomizeHead(class AActor* HeadActor, const struct FReplicated_FCustomizationPreset& CustomizationPreset);
	static void ApplyRandomAsset(class ATBLCharacter* Char, const struct FPrimaryAssetType& PrimaryAssetType);
	static void ApplyCutomizationToCharacter(class ATBLCharacter* InCharacter);
	static void ApplyCustomizationToItem(class ATBLCharacter* Character, class AInventoryItem* NewItem, class ATBLPlayerState* PlaterState, EFaction Faction, TEnumAsByte<EAudioClassType> Class);
	static void ApplyAssets(class ATBLCharacter* Char, TArray<struct FPrimaryAssetId>* InAssetIds);
};


// Class TBL.CustomizationLoadingJob
// 0x0120 (0x0148 - 0x0028)
class UCustomizationLoadingJob : public UObject
{
public:
	unsigned char                                      UnknownData00[0xB0];                                      // 0x0028(0x00B0) MISSED OFFSET
	TArray<class UCTBase*>                             Assets;                                                   // 0x00D8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FCustomizationContext                       TemporaryCustomizationContext;                            // 0x00E8(0x0058) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0140(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CustomizationLoadingJob"));
		return ptr;
	}

};


// Class TBL.CharacterCustomizationLoadingJob
// 0x0020 (0x0168 - 0x0148)
class UCharacterCustomizationLoadingJob : public UCustomizationLoadingJob
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0148(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CharacterCustomizationLoadingJob"));
		return ptr;
	}

};


// Class TBL.CustomizationLoadingManager
// 0x0020 (0x0048 - 0x0028)
class UCustomizationLoadingManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET
	TArray<class UCustomizationLoadingJob*>            Jobs;                                                     // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CustomizationLoadingManager"));
		return ptr;
	}

};


// Class TBL.CustomizationRulesLibrary
// 0x0000 (0x0028 - 0x0028)
class UCustomizationRulesLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CustomizationRulesLibrary"));
		return ptr;
	}


	static void SortCustomizationEntries(bool bSortByLevel, bool bSortByAlignment, bool bSortByRarity, TArray<struct FCustomizationEntry>* RefCustomizationEntries);
	static TArray<struct FCustomizationEntry> OnlyCustomizationEntriesCompatibleWithOwnerPreset(class ATBLPlayerController* PlayerController, TArray<struct FCustomizationEntry> CustomizationEntries, TEnumAsByte<EAudioClassType> ClassType, EFaction Faction);
	static TArray<struct FPrimaryAssetId> OnlyCustomizationAssetsCompatibleWithOwnerPreset(class ATBLPlayerController* PlayerController, TArray<struct FPrimaryAssetId> CustomizationAssets, TEnumAsByte<EAudioClassType> ClassType, EFaction Faction);
	static void GroupCustomizationEntries(class ATBLPlayerController* PlayerController, TArray<struct FCustomizationEntry> CustomizationEntries, TArray<struct FCustomizationEntriesGroup>* CustomizationGroups, ECustomizationGroupSearchResult* SearchResult);
	static struct FPrimaryAssetId FindReplacementAsset(const struct FPrimaryAssetId& AssetToReplace, TEnumAsByte<EAudioClassType> ClassType, EFaction Faction, const struct FCustomizationConstraintsQuery& ConstraintsQuery, const struct FCustomizationCompatibilityQuery& CompatibilityQuery, const struct FCustomizationConstraintsQuery& OptionalConstraintsQuery, const struct FCustomizationCompatibilityQuery& OptionalCompatibilityQuery, int Alignment, TArray<struct FPrimaryAssetId> DefaultAssets);
	static TArray<struct FCustomizationEntry> FilterCustomizationEntries(TArray<struct FCustomizationEntry> CustomizationEntries, const struct FCustomizationConstraintsQuery& ConstraintsQuery);
	static TArray<struct FPrimaryAssetId> FilterCustomizationAssets(TArray<struct FPrimaryAssetId> CustomizationAssets, const struct FCustomizationConstraintsQuery& ConstraintsQuery);
};


// Class TBL.CustomizationSettings
// 0x0150 (0x0188 - 0x0038)
class UCustomizationSettings : public UDeveloperSettings
{
public:
	struct FCustomizationTagDefinitionList             Exclusivity;                                              // 0x0038(0x0010) (CPF_Edit, CPF_Config, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, struct FCustomizationTagDefinitionList> Categories;                                               // 0x0048(0x0050) (CPF_Edit, CPF_Config, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, struct FCustomizationSortingTagDefinitionList> SortingAttributes;                                        // 0x0098(0x0050) (CPF_Edit, CPF_Config, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, struct FCustomizationGroupData> Groups;                                                   // 0x00E8(0x0050) (CPF_Edit, CPF_Config, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EWeaponTag, EWeaponCategoryTypes>             WeaponTagToCategoryMap;                                   // 0x0138(0x0050) (CPF_Edit, CPF_Config, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CustomizationSettings"));
		return ptr;
	}

};


// Class TBL.CharacterCustomization
// 0x00B0 (0x00D8 - 0x0028)
class UCharacterCustomization : public UObject
{
public:
	TMap<class UClass* /*UCTBase*/, class UCTBase*>    CustomizationMap;                                         // 0x0028(0x0050) (CPF_Edit, CPF_NativeAccessSpecifierPrivate)
	TMap<class UClass* /*UObject*/, class UCTBase*>    Weapons;                                                  // 0x0078(0x0050) (CPF_NativeAccessSpecifierPrivate)
	TArray<struct FPrimaryAssetId>                     AppendedAssets;                                           // 0x00C8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CharacterCustomization"));
		return ptr;
	}

};


// Class TBL.DefaultCharacterCustomization
// 0x0010 (0x0038 - 0x0028)
class UDefaultCharacterCustomization : public UObject
{
public:
	TArray<TSoftObjectPtr<class UCTBase>>              DefaultCharacterCustomizations;                           // 0x0028(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DefaultCharacterCustomization"));
		return ptr;
	}

};


// Class TBL.DefaultWeaponCustomization
// 0x0050 (0x0078 - 0x0028)
class UDefaultWeaponCustomization : public UObject
{
public:
	TMap<TSoftClassPtr<class UClass>, class UCTBase*>  DefaultCustomizationWeaponMap;                            // 0x0028(0x0050) (CPF_Edit, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DefaultWeaponCustomization"));
		return ptr;
	}

};


// Class TBL.CustomizationDebugPresetSettings
// 0x0010 (0x0038 - 0x0028)
class UCustomizationDebugPresetSettings : public UObject
{
public:
	TArray<struct FCustomizationPreset>                Presets;                                                  // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CustomizationDebugPresetSettings"));
		return ptr;
	}

};


// Class TBL.DamagerInterface
// 0x0000 (0x0028 - 0x0028)
class UDamagerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DamagerInterface"));
		return ptr;
	}


	bool ShouldDealTeamDamageAgainst(class AActor* TargetTeammate);
};


// Class TBL.DamageSource
// 0x0050 (0x00F8 - 0x00A8)
class UDamageSource : public UAssemblyBlueprint
{
public:
	struct FString                                     Name;                                                     // 0x00A8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FText                                       DisplayName;                                              // 0x00B8(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FCanvasIcon                                 Icon;                                                     // 0x00D0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              ArmourPenetration;                                        // 0x00E8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BonusStaminaDamagePercentage;                             // 0x00EC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FriendlyFirePercent;                                      // 0x00F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               FriendlyFireCanInterrupt;                                 // 0x00F4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DamageSource"));
		return ptr;
	}

};


// Class TBL.Delay
// 0x0020 (0x0198 - 0x0178)
class UDelay : public UAction
{
public:
	float                                              Delay;                                                    // 0x0178(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
	TArray<class UAction*>                             Actions;                                                  // 0x0180(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0190(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.Delay"));
		return ptr;
	}

};


// Class TBL.DelegateWrapper_ActorDestroyed
// 0x0010 (0x0038 - 0x0028)
class UDelegateWrapper_ActorDestroyed : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DelegateWrapper_ActorDestroyed"));
		return ptr;
	}


	void OnExecute(class AActor* Actor);
};


// Class TBL.DemoList
// 0x0078 (0x0180 - 0x0108)
class UDemoList : public UWidget
{
public:
	float                                              ItemHeight;                                               // 0x0108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x14];                                      // 0x010C(0x0014) MISSED OFFSET
	TEnumAsByte<ESelectionMode>                        SelectionMode;                                            // 0x0120(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0121(0x0003) MISSED OFFSET
	struct FScriptDelegate                             OnGenerateRowEvent;                                       // 0x0124(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4C];                                      // 0x0134(0x004C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DemoList"));
		return ptr;
	}


	void RefreshDemoList();
};


// Class TBL.DestinationGeneratorVolume
// 0x0058 (0x02E8 - 0x0290)
class ADestinationGeneratorVolume : public AVolume
{
public:
	struct FGameplayTagContainer                       AITagsToAddWhenActivated;                                 // 0x0290(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsActive;                                                // 0x02B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02B1(0x0003) MISSED OFFSET
	float                                              DestinationDensity;                                       // 0x02B4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DestinationVariance;                                      // 0x02B8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EGenerationMode                                    GenerationMode;                                           // 0x02BC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x02BD(0x0003) MISSED OFFSET
	float                                              NavMeshProjectionDepenetrationDistance;                   // 0x02C0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x02C4(0x0004) MISSED OFFSET
	TArray<struct FVector>                             DestinationList;                                          // 0x02C8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FVector>                             DestinationListRelative;                                  // 0x02D8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DestinationGeneratorVolume"));
		return ptr;
	}


	void ProjectDestinationListToNavMesh();
	struct FVector GetRandomDestination();
	TArray<struct FVector> GetDestinationsInGridDistance(const struct FVector& QueryLocation, int GridDistance);
	TArray<struct FVector> GetDestinationList();
	struct FVector GetDestinationByIndex(int Index);
	void GeneratePoints();
	void Deactivate();
	void Activate();
};


// Class TBL.DestinationRenderingComponent
// 0x0040 (0x04B0 - 0x0470)
class UDestinationRenderingComponent : public UPrimitiveComponent
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0470(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DestinationRenderingComponent"));
		return ptr;
	}

};


// Class TBL.DestroyableByPushableInterface
// 0x0000 (0x0028 - 0x0028)
class UDestroyableByPushableInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DestroyableByPushableInterface"));
		return ptr;
	}


	void OnPushableBeginOverlap(class UPushableComponent* Pushable);
};


// Class TBL.InteractableComponent
// 0x0358 (0x0460 - 0x0108)
class UInteractableComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0108(0x0018) MISSED OFFSET
	class UInteractableComponent*                      OverrideInteractable;                                     // 0x0120(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnUseHeldInitiated;                                       // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnUse;                                                    // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnUseHeld;                                                // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnUseSyncFailed;                                          // 0x0158(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCooldown;                                               // 0x0168(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnUseReleased;                                            // 0x0178(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInteractableReachable;                                  // 0x0188(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInteractableUnreachable;                                // 0x0198(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInteractableFocused;                                    // 0x01A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInteractableLostFocus;                                  // 0x01B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInteracbleUsesUpdated;                                  // 0x01C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInteractableEnabled;                                    // 0x01D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPawnChanged;                                            // 0x01E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnCanShowUI;                                              // 0x01F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnCanBeUsed;                                              // 0x0208(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	class APawn*                                       UsingPawn;                                                // 0x0218(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_AActorPtr                       CurrentUsingPawn;                                         // 0x0220(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                InitialUses;                                              // 0x0238(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x023C(0x0004) MISSED OFFSET
	struct FReplicated_Int32                           Uses;                                                     // 0x0240(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAllowProximityCheck;                                     // 0x0258(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0259(0x0003) MISSED OFFSET
	int                                                MaxUses;                                                  // 0x025C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              UseRechargeTime;                                          // 0x0260(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                RechargeStacks;                                           // 0x0264(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_EInteractableRechargeRule       ReplicatedRechargeRule;                                   // 0x0268(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	EInteractableRechargeRule                          RechargeRule;                                             // 0x0280(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0281(0x0007) MISSED OFFSET
	struct FReplicated_EInteractionType                ReplicatedInteractionType;                                // 0x0288(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	EInteractionType                                   InteractionType;                                          // 0x02A0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x7];                                       // 0x02A1(0x0007) MISSED OFFSET
	struct FText                                       ActorName;                                                // 0x02A8(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_NativeAccessSpecifierPublic)
	struct FText                                       Description;                                              // 0x02C0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_NativeAccessSpecifierPublic)
	struct FName                                       KeyBind;                                                  // 0x02D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EInteractableUILocation                            UILocation;                                               // 0x02E0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           AllowedTeam;                                              // 0x02E1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOnlyAllowOwningPlayer;                                   // 0x02E2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x5];                                       // 0x02E3(0x0005) MISSED OFFSET
	TArray<struct FName>                               ValidCollisionComponents;                                 // 0x02E8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSet<class UPrimitiveComponent*>                   ValidCollisionComponentSet;                               // 0x02F8(0x0050) (CPF_ExportObject, CPF_Transient, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	bool                                               bCheckValidEquipState;                                    // 0x0348(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EInteractCombatState                               InteractCombatState;                                      // 0x0349(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x6];                                       // 0x034A(0x0006) MISSED OFFSET
	struct FReplicated_EFaction                        UseableByTeam;                                            // 0x0350(0x0018) (CPF_Net, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              InitiateUseDuration;                                      // 0x0368(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x4];                                       // 0x036C(0x0004) MISSED OFFSET
	struct FReplicated_Float                           ReplicatedInitiateUseDuration;                            // 0x0370(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DecayRate;                                                // 0x0388(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              Cooldown;                                                 // 0x038C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentCooldownTime;                                      // 0x0390(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOnCooldown;                                              // 0x0394(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0395(0x0003) MISSED OFFSET
	float                                              CurrentUseTime;                                           // 0x0398(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsUseHeld;                                               // 0x039C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x3];                                       // 0x039D(0x0003) MISSED OFFSET
	class UClass* /*AInventoryItem*/                   ItemRequiredToUse;                                        // 0x03A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FStageActorAction                           StageActorAction;                                         // 0x03A8(0x0030) (CPF_Edit, CPF_BlueprintVisible, CPF_NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                        ConfigWidgetClass;                                        // 0x03D8(0x0028) (CPF_Config, CPF_GlobalConfig, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                        WidgetClass;                                              // 0x0400(0x0028) (CPF_Edit, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShouldHaveHudMarker;                                     // 0x0428(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAutoPickupOnly;                                          // 0x0429(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x6];                                       // 0x042A(0x0006) MISSED OFFSET
	struct FReplicated_Bool                            bEnabled;                                                 // 0x0430(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData11[0x8];                                       // 0x0448(0x0008) MISSED OFFSET
	TArray<class ATBLCharacter*>                       HoldingCharacterList;                                     // 0x0450(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.InteractableComponent"));
		return ptr;
	}


	void Use(class APawn* Pawn);
	void StopRechargeTimer();
	void SetUseableByTeam(EFaction EFaction);
	void SetRechargeRule(EInteractableRechargeRule InRechargeRule);
	void SetOnlyAllowOwningPlayer(bool bInOnlyAllowOwningPlayer);
	void SetInteractionType(EInteractionType InInteractionType);
	void SetInitiateUseDuration(float InInitiateUseDuration);
	void SetEnabled(bool Enabled, bool bForceClient);
	void RestartRechargeTimer();
	void OnRep_Uses();
	void OnRep_RechargeRule();
	void OnRep_InteractionType();
	void OnRep_InitiateUseDuration();
	void OnRep_Enabled();
	void OnRep_CurrentUsingPawn();
	bool IsValidCollisionComponent(class UPrimitiveComponent* Component);
	TArray<class UPrimitiveComponent*> GetValidCollisionComponents();
	int GetUses();
	EFaction GetUseableByTeam();
	EInteractableRechargeRule GetRechargeRule();
	EInteractionType GetInteractionType();
	class UInteractableComponent* GetInteractableComponent();
	bool GetEnabled();
	bool CanShowUI(class APawn* Pawn);
};


// Class TBL.DestroyableComponent
// 0x0008 (0x0468 - 0x0460)
class UDestroyableComponent : public UInteractableComponent
{
public:
	TWeakObjectPtr<class UStatsComponent>              StatsComponent;                                           // 0x0460(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DestroyableComponent"));
		return ptr;
	}

};


// Class TBL.DieFromFireTask
// 0x0008 (0x0048 - 0x0040)
class UDieFromFireTask : public UTBLAchievementTask
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0040(0x0004) MISSED OFFSET
	bool                                               bIsFinished;                                              // 0x0044(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DieFromFireTask"));
		return ptr;
	}

};


// Class TBL.DieFromFireWorker
// 0x0050 (0x0110 - 0x00C0)
class UDieFromFireWorker : public UTBLAchievementWorker
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x00C0(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DieFromFireWorker"));
		return ptr;
	}


	void OnTakenDamage(const struct FDamageTakenEvent& DamageEvent, class ATBLPlayerController* Controller);
};


// Class TBL.DisplayComponent
// 0x0048 (0x0150 - 0x0108)
class UDisplayComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0108(0x0018) MISSED OFFSET
	TSoftClassPtr<class UClass>                        WidgetClass;                                              // 0x0120(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EWidgetContainer                                   WidgetContainerType;                                      // 0x0148(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0149(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DisplayComponent"));
		return ptr;
	}


	static EFaction GetFactionFromRelevantFactionStatic(class UObject* WorldContextObject, EFactionOrAttackerDefender RelevantFaction);
	EFaction GetFactionFromRelevantFaction(EFactionOrAttackerDefender RelevantFaction);
};


// Class TBL.ActorInfoDisplayComponent
// 0x0010 (0x0160 - 0x0150)
class UActorInfoDisplayComponent : public UDisplayComponent
{
public:
	TArray<struct FActorDisplayInfo>                   PerTeamDisplayInfo;                                       // 0x0150(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ActorInfoDisplayComponent"));
		return ptr;
	}

};


// Class TBL.ObjectiveStatusDisplayComponent
// 0x0070 (0x01C0 - 0x0150)
class UObjectiveStatusDisplayComponent : public UDisplayComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0150(0x0008) MISSED OFFSET
	bool                                               ShowProgress;                                             // 0x0158(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bLocalPlayerInsideZone;                                   // 0x0159(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EObjectiveState                                    DefaultObjectiveState;                                    // 0x015A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x1];                                       // 0x015B(0x0001) MISSED OFFSET
	float                                              DefaultProgress;                                          // 0x015C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           DefaultOwningTeam;                                        // 0x0160(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0161(0x0007) MISSED OFFSET
	struct FText                                       DefaultAgathaText;                                        // 0x0168(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FText                                       DefaultMasonText;                                         // 0x0180(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FText                                       DefaultTenosiaText;                                       // 0x0198(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	class UMaterialInstance*                           ActiveObjectiveIcon;                                      // 0x01B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInstance*                           ContestedObjectiveIcon;                                   // 0x01B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ObjectiveStatusDisplayComponent"));
		return ptr;
	}

};


// Class TBL.SimpleDisplayComponent
// 0x0000 (0x0150 - 0x0150)
class USimpleDisplayComponent : public UDisplayComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SimpleDisplayComponent"));
		return ptr;
	}

};


// Class TBL.ZoneDisplayComponent
// 0x0010 (0x0160 - 0x0150)
class UZoneDisplayComponent : public UDisplayComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0150(0x0008) MISSED OFFSET
	bool                                               bLocalPlayerInsideZone;                                   // 0x0158(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0159(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ZoneDisplayComponent"));
		return ptr;
	}

};


// Class TBL.HudMarkerDisplayComponent
// 0x0288 (0x03D8 - 0x0150)
class UHudMarkerDisplayComponent : public UDisplayComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0150(0x0008) MISSED OFFSET
	struct FReplicated_AActorPtr                       ActorToDisplayInfoFor;                                    // 0x0158(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AActor*                                      DefaultActorToDisplayInfoFor;                             // 0x0170(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     RelativeLocation;                                         // 0x0178(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseRelativeAsWorldOffset;                                // 0x0184(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0185(0x0003) MISSED OFFSET
	struct FReplicated_Bool                            Visible;                                                  // 0x0188(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               StartVisible;                                             // 0x01A0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           VisibleToTeam;                                            // 0x01A1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EMarkerType                                        MarkerType;                                               // 0x01A2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x1];                                       // 0x01A3(0x0001) MISSED OFFSET
	float                                              VisibleRadius;                                            // 0x01A4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinVisibleDistance;                                       // 0x01A8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxVisibleDistance;                                       // 0x01AC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseActorLocation;                                        // 0x01B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsFocusMarker;                                           // 0x01B1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOnlyRenderInLos;                                         // 0x01B2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOnlyFocusInLos;                                          // 0x01B3(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinFocusDist;                                             // 0x01B4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxFocusDist;                                             // 0x01B8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x01BC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 PercentFromCenterDistanceModifier;                        // 0x01C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 PercentFromCenterAlphaCurve;                              // 0x01C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 PercentFromCenterScaleCurve;                              // 0x01D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DistAlphaCurve;                                           // 0x01D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DistScaleCurve;                                           // 0x01E0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               VisibleEvenOnOwnPawn;                                     // 0x01E8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x01E9(0x0003) MISSED OFFSET
	float                                              MinimumFriendPartyMemberScale;                            // 0x01EC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseItemVisibility;                                       // 0x01F0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           ItemVisibilityRelevantFaction;                            // 0x01F1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x6];                                       // 0x01F2(0x0006) MISSED OFFSET
	class UClass* /*AInventoryItem*/                   InventoryItemClass;                                       // 0x01F8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EInventoryVisibilityCondition                      VisibilityCondition;                                      // 0x0200(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseMountVisibility;                                      // 0x0201(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x6];                                       // 0x0202(0x0006) MISSED OFFSET
	class UClass* /*ASiegeEngine*/                     MountClass;                                               // 0x0208(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EMountVisibilityCondition                          MountVisibilityCondition;                                 // 0x0210(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0211(0x0003) MISSED OFFSET
	TWeakObjectPtr<class UWidgetVisibilityComponent>   WidgetVisibilityComponent;                                // 0x0214(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x4];                                       // 0x021C(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnReceivedWidgetVisibilityComponent;                      // 0x0220(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bClampToScreen;                                           // 0x0230(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWantsToBeReplicated;                                     // 0x0231(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x6];                                       // 0x0232(0x0006) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnPerTeamDisplayInfoChanged;                              // 0x0238(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<struct FActorDisplayInfo>                   PerTeamDisplayInfo;                                       // 0x0248(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ShowProgress;                                             // 0x0258(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bLocalPlayerInsideZone;                                   // 0x0259(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EObjectiveState                                    DefaultObjectiveState;                                    // 0x025A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x1];                                       // 0x025B(0x0001) MISSED OFFSET
	float                                              DefaultProgress;                                          // 0x025C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           DefaultOwningTeam;                                        // 0x0260(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x7];                                       // 0x0261(0x0007) MISSED OFFSET
	struct FText                                       DefaultAgathaText;                                        // 0x0268(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FText                                       DefaultMasonText;                                         // 0x0280(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FText                                       DefaultTenosiaText;                                       // 0x0298(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	class UMaterialInstance*                           ActiveObjectiveIcon;                                      // 0x02B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInstance*                           ContestedObjectiveIcon;                                   // 0x02B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_EObjectiveState                 ObjectiveState;                                           // 0x02C0(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Float                           Progress;                                                 // 0x02D8(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_EFaction                        OwningTeam;                                               // 0x02F0(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_FText                           AgathaText;                                               // 0x0308(0x0028) (CPF_Net, CPF_RepNotify, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_FText                           MasonText;                                                // 0x0330(0x0028) (CPF_Net, CPF_RepNotify, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_FText                           TenosiaText;                                              // 0x0358(0x0028) (CPF_Net, CPF_RepNotify, CPF_NativeAccessSpecifierPublic)
	bool                                               bForceUsePerTeamDisplayInfo;                              // 0x0380(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData12[0x7];                                       // 0x0381(0x0007) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnForceUsePerTeamDisplayInfo;                             // 0x0388(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnObjectiveStateChanged;                                  // 0x0398(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnProgressChanged;                                        // 0x03A8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnOwningTeamChanged;                                      // 0x03B8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnObjectiveStateTextChanged;                              // 0x03C8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HudMarkerDisplayComponent"));
		return ptr;
	}


	bool ShouldForceUsePerTeamDisplayInfo();
	bool ShouldClampToScreen();
	void SetWidgetVisibilityComponent(class UWidgetVisibilityComponent* InWidgetVisibilityComponent);
	void SetVisible(bool Value);
	void SetProgress(float Value);
	void SetPerTeamDisplayInfo(TArray<struct FActorDisplayInfo> InPerTeamDisplayInfo);
	void SetOwningTeam(EFaction Value);
	void SetObjectiveStateText(EFaction Faction, const struct FText& Value);
	void SetObjectiveState(EObjectiveState Value);
	void SetActorToDisplayInfoFor(class AActor* Actor);
	void SetActiveIcon(class UMaterialInstance* NewIcon);
	void OnRep_Progress();
	void OnRep_OwningTeam();
	void OnRep_ObjectiveStateText();
	void OnRep_ObjectiveState();
	bool IsVisibleFor(class APlayerController* PlayerController, bool bCheckVisiblityComponent);
	bool IsVisible();
	class UWidgetVisibilityComponent* GetWidgetVisibilityComponent();
	bool GetVisible();
	struct FVector GetScreenLocation(class APlayerController* PlayerController, const struct FVector2D& WidgetSize, bool* bIsOnScreen, bool* bWasClamped);
	struct FActorDisplayInfo GetRelevantDisplayInfo(EFaction Faction, bool bFlip);
	float GetProgress();
	EFaction GetOwningTeam();
	struct FText GetObjectiveStateText(EFaction Faction);
	EObjectiveState GetObjectiveState();
	class AActor* GetActorToDisplayInfoFor();
	void ForceUsePerTeamDisplayInfo();
};


// Class TBL.UnderCrosshairDisplayComponent
// 0x0008 (0x0158 - 0x0150)
class UUnderCrosshairDisplayComponent : public UDisplayComponent
{
public:
	EFaction                                           VisibleToTeam;                                            // 0x0150(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0151(0x0003) MISSED OFFSET
	float                                              MaxVisibleDistance;                                       // 0x0154(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.UnderCrosshairDisplayComponent"));
		return ptr;
	}

};


// Class TBL.SubObjectiveZoneDisplayComponent
// 0x0010 (0x03E8 - 0x03D8)
class USubObjectiveZoneDisplayComponent : public UHudMarkerDisplayComponent
{
public:
	struct FMulticastScriptDelegate                    OnLocalPlayerInsideChanged;                               // 0x03D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SubObjectiveZoneDisplayComponent"));
		return ptr;
	}

};


// Class TBL.ObjectiveZoneDisplayComponent
// 0x0000 (0x03E8 - 0x03E8)
class UObjectiveZoneDisplayComponent : public USubObjectiveZoneDisplayComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ObjectiveZoneDisplayComponent"));
		return ptr;
	}

};


// Class TBL.WidgetVisibilityComponent
// 0x0028 (0x0130 - 0x0108)
class UWidgetVisibilityComponent : public UActorComponent
{
public:
	struct FMulticastScriptDelegate                    OnVisibilityChanged;                                      // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnWidgetVisibilityComponentDestroyed;                     // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bVisible;                                                 // 0x0128(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCompletedFadeOut;                                        // 0x0129(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x012A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.WidgetVisibilityComponent"));
		return ptr;
	}


	void SetVisibile(bool bInVisibility);
	void NotifyWidgetCompletedFadeOut(bool bInCompletedFadeOut);
	bool IsVisible();
	bool HasWidgetCompletedFadeOut();
	void ErrorNotifyTimer();
};


// Class TBL.DisplayComponentInterface
// 0x0000 (0x0028 - 0x0028)
class UDisplayComponentInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DisplayComponentInterface"));
		return ptr;
	}

};


// Class TBL.DisplayDebugFileWriter
// 0x0010 (0x02E0 - 0x02D0)
class UDisplayDebugFileWriter : public UCanvas
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02D0(0x0008) MISSED OFFSET
	float                                              LastY;                                                    // 0x02D8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DisplayDebugFileWriter"));
		return ptr;
	}

};


// Class TBL.DrainStamina
// 0x0038 (0x0060 - 0x0028)
class UDrainStamina : public UObject
{
public:
	TArray<struct FName>                               CombatStates;                                             // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DrainRate;                                                // 0x0038(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 DrainRateModifier;                                        // 0x0040(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              Time;                                                     // 0x0048(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastTickTime;                                             // 0x004C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                DisabledId;                                               // 0x0050(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bEnabled;                                                 // 0x0054(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0xB];                                       // 0x0055(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DrainStamina"));
		return ptr;
	}


	void OnKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnDestroyed(class AActor* DestroyedActor);
	void OnCombatStateEvent(class AActor* InActor, const struct FName& EventName, const struct FAttackInfo& EventAttackInfo);
};


// Class TBL.DropItem
// 0x0000 (0x0178 - 0x0178)
class UDropItem : public UAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DropItem"));
		return ptr;
	}

};


// Class TBL.EnableInteractableComponent
// 0x0008 (0x0180 - 0x0178)
class UEnableInteractableComponent : public UAction
{
public:
	bool                                               bRestoreOnUndo;                                           // 0x0178(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSavedEnabled;                                            // 0x0179(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x017A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.EnableInteractableComponent"));
		return ptr;
	}

};


// Class TBL.EnvQueryGen_DestinationVolume
// 0x0048 (0x00C8 - 0x0080)
class UEnvQueryGen_DestinationVolume : public UEnvQueryGenerator_ProjectedPoints
{
public:
	class UClass* /*UEnvQueryContext*/                 Center;                                                   // 0x0080(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FGameplayTag                                Tag;                                                      // 0x0088(0x0008) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FAIDataProviderIntValue                     GridDistance;                                             // 0x0090(0x0038) (CPF_Edit, CPF_DisableEditOnInstance, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.EnvQueryGen_DestinationVolume"));
		return ptr;
	}

};


// Class TBL.EnvQueryTest_InCombatArea
// 0x0008 (0x0200 - 0x01F8)
class UEnvQueryTest_InCombatArea : public UEnvQueryTest
{
public:
	class UClass* /*UEnvQueryContext*/                 Context;                                                  // 0x01F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.EnvQueryTest_InCombatArea"));
		return ptr;
	}

};


// Class TBL.EnvQueryTest_IsAlive
// 0x0008 (0x0200 - 0x01F8)
class UEnvQueryTest_IsAlive : public UEnvQueryTest
{
public:
	class UClass* /*UEnvQueryContext*/                 Context;                                                  // 0x01F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.EnvQueryTest_IsAlive"));
		return ptr;
	}

};


// Class TBL.EnvQueryTest_IsEnemy
// 0x0008 (0x0200 - 0x01F8)
class UEnvQueryTest_IsEnemy : public UEnvQueryTest
{
public:
	class UClass* /*UEnvQueryContext*/                 Context;                                                  // 0x01F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.EnvQueryTest_IsEnemy"));
		return ptr;
	}

};


// Class TBL.EnvQueryTest_OtherBotsTargetting
// 0x0008 (0x0200 - 0x01F8)
class UEnvQueryTest_OtherBotsTargetting : public UEnvQueryTest
{
public:
	bool                                               bSameTeamAsQuerier;                                       // 0x01F8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01F9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.EnvQueryTest_OtherBotsTargetting"));
		return ptr;
	}

};


// Class TBL.EnvQueryTest_TimesTargettedBy
// 0x0008 (0x0200 - 0x01F8)
class UEnvQueryTest_TimesTargettedBy : public UEnvQueryTest
{
public:
	class UClass* /*UEnvQueryContext*/                 TargettedBy;                                              // 0x01F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.EnvQueryTest_TimesTargettedBy"));
		return ptr;
	}

};


// Class TBL.TriggeredAction
// 0x0020 (0x0198 - 0x0178)
class UTriggeredAction : public UAction
{
public:
	TArray<class UAction*>                             Actions;                                                  // 0x0178(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bTriggerOnce : 1;                                         // 0x0188(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bTriggerMustOccur : 1;                                    // 0x0188(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIgnoreTerminate : 1;                                     // 0x0188(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0189(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       TargetActor;                                              // 0x018C(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0194(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TriggeredAction"));
		return ptr;
	}


	void OnInvocationComplete(class AAbilityInvocation* Invocation, class UAbilitySpec* AbilitySpec);
};


// Class TBL.EventCombatStateChanged
// 0x0018 (0x01B0 - 0x0198)
class UEventCombatStateChanged : public UTriggeredAction
{
public:
	struct FName                                       CombatState;                                              // 0x0198(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CombatStateTag;                                           // 0x01A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bTriggerOnEnd : 1;                                        // 0x01A8(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01A9(0x0003) MISSED OFFSET
	int                                                AttackID;                                                 // 0x01AC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.EventCombatStateChanged"));
		return ptr;
	}


	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
};


// Class TBL.FireArrowsTask
// 0x0018 (0x0068 - 0x0050)
class UFireArrowsTask : public UTBLAchievementTaskCountable
{
public:
	struct FName                                       RequiredState;                                            // 0x0050(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*AInventoryItem*/>           EligibleWeapons;                                          // 0x0058(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.FireArrowsTask"));
		return ptr;
	}

};


// Class TBL.FireArrowsWorker
// 0x0000 (0x00C0 - 0x00C0)
class UFireArrowsWorker : public UTBLAchievementWorker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.FireArrowsWorker"));
		return ptr;
	}


	void OnCombatStateEnd(const struct FName& State, class AInventoryItem* AttackingWeapon, class UCombatState* InCombatState);
};


// Class TBL.FireSourceComponent
// 0x0010 (0x0118 - 0x0108)
class UFireSourceComponent : public UActorComponent
{
public:
	TArray<struct FName>                               CollisionComponents;                                      // 0x0108(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.FireSourceComponent"));
		return ptr;
	}


	void OnLookAtFireSource(class ATBLCharacter* Character);
};


// Class TBL.FirstPersonCineCameraActor
// 0x0000 (0x0830 - 0x0830)
class AFirstPersonCineCameraActor : public ACineCameraActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.FirstPersonCineCameraActor"));
		return ptr;
	}

};


// Class TBL.FirstPersonCineCameraComponent
// 0x0050 (0x0980 - 0x0930)
class UFirstPersonCineCameraComponent : public UCineCameraComponent
{
public:
	float                                              SecondsSpentOutOfRange;                                   // 0x0930(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CameraTakeoverMinAngle;                                   // 0x0934(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_Interp, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CameraTakeoverMaxAngle;                                   // 0x0938(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_Interp, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SnapBackRotationRate;                                     // 0x093C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_Interp, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BlendAlpha;                                               // 0x0940(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_Interp, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanLockRotation;                                         // 0x0944(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_Interp, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0945(0x0003) MISSED OFFSET
	struct FRotator                                    CameraRotationOffset;                                     // 0x0948(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_Interp, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bAlwaysUsePawnPitch;                                      // 0x0954(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_Interp, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAlwaysUsePawnYaw;                                        // 0x0955(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_Interp, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bToldPCToIgnoreLook;                                      // 0x0956(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnableThirdPersonMesh;                                   // 0x0957(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     CameraLocationOffset;                                     // 0x0958(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_Interp, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     InterpCameraRotationOffset;                               // 0x0964(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_Interp, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ECinematicCameraTargetLockMode                     CameraLockMode;                                           // 0x0970(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_Interp, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHorizontalLock;                                          // 0x0971(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0972(0x0002) MISSED OFFSET
	float                                              HorizontalLockYaw;                                        // 0x0974(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0978(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.FirstPersonCineCameraComponent"));
		return ptr;
	}

};


// Class TBL.TBLStaticMeshComponent
// 0x0000 (0x0500 - 0x0500)
class UTBLStaticMeshComponent : public UStaticMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLStaticMeshComponent"));
		return ptr;
	}

};


// Class TBL.FlammableStaticMeshComponent
// 0x0000 (0x0500 - 0x0500)
class UFlammableStaticMeshComponent : public UTBLStaticMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.FlammableStaticMeshComponent"));
		return ptr;
	}


	void BurningApplied(const struct FVector& HitRelativeLocation);
};


// Class TBL.FollowMasterSkeletalMeshComponent
// 0x0050 (0x0870 - 0x0820)
class UFollowMasterSkeletalMeshComponent : public UPoseableMeshComponent
{
public:
	int                                                NumFrames;                                                // 0x0820(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFollowServerAnimation;                                   // 0x0824(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0825(0x0003) MISSED OFFSET
	TWeakObjectPtr<class USkeletalMeshComponent>       FollowPoseComponent;                                      // 0x0828(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int16_t                                            PoseOffset;                                               // 0x0830(0x0002) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0832(0x0006) MISSED OFFSET
	class ATBLCharacter*                               FollowCharacter;                                          // 0x0838(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FTransform>                          PoseBuffer;                                               // 0x0840(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FVector>                             LocationBuffer;                                           // 0x0850(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0860(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.FollowMasterSkeletalMeshComponent"));
		return ptr;
	}


	void SetPoseOffset(int Offset);
};


// Class TBL.SpawnWave
// 0x0240 (0x0550 - 0x0310)
class ASpawnWave : public ATBLActor
{
public:
	class ASpawner*                                    Spawner;                                                  // 0x0310(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           Faction;                                                  // 0x0318(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0319(0x0007) MISSED OFFSET
	TSet<class AController*>                           JoinedPlayers;                                            // 0x0320(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	TArray<class ATBLPlayerState*>                     ReplJoinedPlayers;                                        // 0x0370(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSet<class AController*>                           RejectedPlayers;                                          // 0x0380(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03D0(0x0004) MISSED OFFSET
	int                                                PendingDeferredSpawnCount;                                // 0x03D4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LastPendingDeferredSpawnRequest;                          // 0x03D8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03DC(0x0004) MISSED OFFSET
	TArray<class AController*>                         PlayersToSpawn;                                           // 0x03E0(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              StartTime;                                                // 0x03F0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SecondsBeforeSpawningStarts;                              // 0x03F4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ExtraSecondsBeforeSpawningToSpawnBots;                    // 0x03F8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SecondsJoinableAfterSpawningStarts;                       // 0x03FC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0xC];                                       // 0x0400(0x000C) MISSED OFFSET
	int                                                MaxPlayerCount;                                           // 0x040C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bFireWhenFilled : 1;                                      // 0x0410(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bForcedSpawn;                                             // 0x0411(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0412(0x0002) MISSED OFFSET
	float                                              MinimumWaitTimeSeconds;                                   // 0x0414(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ESpawnWaveState                                    WaveState;                                                // 0x0418(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAllowBots;                                               // 0x0419(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPrivateWave;                                             // 0x041A(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsPlayFromHere;                                          // 0x041B(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPrespawn;                                                // 0x041C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x041D(0x0003) MISSED OFFSET
	float                                              PrespawnTime;                                             // 0x0420(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bForwardSpawn;                                            // 0x0424(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0425(0x0003) MISSED OFFSET
	class UClass* /*USpecialSpawnSpec*/                SpecialSpawnSpec;                                         // 0x0428(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSpawnWaveSounds                            SpawnWaveSounds;                                          // 0x0430(0x0040) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnWaveNoLongerJoinable;                                   // 0x0470(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnWaveFinished;                                           // 0x0480(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnWaveFilled;                                             // 0x0490(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnWaveSpawning;                                           // 0x04A0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSpawnedCharacter;                                       // 0x04B0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPossessedCharacter;                                     // 0x04C0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	bool                                               bControlRestricted;                                       // 0x04D0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWantsEndAfterControlReturned;                            // 0x04D1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x1E];                                      // 0x04D2(0x001E) MISSED OFFSET
	class USceneComponent*                             DummyRoot;                                                // 0x04F0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSet<class AController*>                           HistoryOfJoinedPlayers;                                   // 0x04F8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0548(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SpawnWave"));
		return ptr;
	}


	void StartPrespawning();
	void StartCleanupTimer(bool bRestart);
	void SpawnController(class AController* Controller);
	bool ShouldShowSpawnPrompt();
	void SetNoLongerJoinable();
	void SetClientJoinTime(float InClientJoinWorldTime);
	void ReportSpawnFailure(class AController* Controller, const struct FName& Reason);
	bool RejectSpawn(class AController* Controller);
	void Public_StartSpawning();
	void ProcessInitiallySpawnedCharacters(class ASpawner* InstigatorSpawner, TArray<class ATBLCharacter*> Characters);
	void OnRep_WaveState();
	void OnRep_ReplJoinedPlayers();
	void OnControllerPossessedPawn(class APawn* NewPawn);
	void NotifyPendingDeferredSpawnPerformed();
	void NotifyPendingDeferredSpawn();
	bool NeedsCleanup();
	bool LeaveSpawn(class AController* Controller);
	bool JoinSpawn(class AController* Controller);
	bool IsSpecialSpawn();
	bool IsPlayerInSpawnWave(class ATBLPlayerState* PS);
	bool IsJoinableBy(class AController* Controller);
	bool HasPendingDeferredSpawnsRemaining();
	void HandleNoLongerJoinable();
	float GetTimeLeft(class AController* Target);
	int GetNumberOfJoinedPlayers();
	void GetDisplayInfo(TMap<class UClass* /*ATBLCharacter*/, class UClass* /*ULoadoutSelection*/>* AllowedClasses, class UTexture2D** SpawnWaveIcon, struct FText* SpawnWaveName, bool* SpawnWithHorse);
	class UClass* /*ULoadoutSelection*/ GetAllowedLoadoutSelection(class UClass* /*ATBLCharacter*/ RequestedClass);
	TArray<class UClass* /*ATBLCharacter*/> GetAllowedCharacterClasses(class ATBLPlayerController* TargetController);
	void FireEarly();
	void End();
	void AttemptCleanup();
	void AllowFullPlayerControl();
};


// Class TBL.ForcedRespawnSpawnWave
// 0x0008 (0x0558 - 0x0550)
class AForcedRespawnSpawnWave : public ASpawnWave
{
public:
	class AController*                                 RespawningController;                                     // 0x0550(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ForcedRespawnSpawnWave"));
		return ptr;
	}


	void ForceSpawnController(class AController* Controller);
};


// Class TBL.ForwardSpawnWave
// 0x01A8 (0x06F8 - 0x0550)
class AForwardSpawnWave : public ASpawnWave
{
public:
	TMap<TWeakObjectPtr<class AController>, struct FTimerHandle> ControllerTimerMap;                                       // 0x0550(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<TWeakObjectPtr<class AController>, struct FTimerHandle> ControllerCombatTimerMap;                                 // 0x05A0(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TSet<TWeakObjectPtr<class AController>>            ControllerAwaitingCombatTimer;                            // 0x05F0(0x0050) (CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	TArray<class APawn*>                               PawnsAllowedToForwardSpawn;                               // 0x0640(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSet<class APawn*>                                 AllowedPawns;                                             // 0x0650(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TSet<class APawn*>                                 RejectedPawns;                                            // 0x06A0(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              CombatTimerDuration;                                      // 0x06F0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x06F4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ForwardSpawnWave"));
		return ptr;
	}


	void SpawnOutOfCombatCharacters();
	bool ShouldResetCombatTimerFor(class AController* Controller);
	void SetPawnsAllowedToForwardSpawn(TArray<class APawn*> InPawnsAllowedToForwardSpawn);
	void SetAwaitingCombatTimer(class AController* Controller);
	void ResetCombatTimerFor(class AController* Controller);
	void OnRep_PawnsAllowedToForwardSpawn();
	void OnQueuedPlayerTakeDamage(const struct FDamageTakenEvent& DamageEvent);
	void OnQueuedPlayerParryEvent(class ATBLCharacter* A, class ATBLCharacter* B, const struct FParryEventState& ParryEventState);
	void OnQueuedPlayerCauseDamage(const struct FDamageTakenEvent& DamageEvent);
	bool IsControllerRecentlyInCombat(class AController* Controller);
	void ForwardSpawnController(class AController* Controller);
};


// Class TBL.FrameThrottledCinematicActor
// 0x0000 (0x0258 - 0x0258)
class AFrameThrottledCinematicActor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.FrameThrottledCinematicActor"));
		return ptr;
	}


	static void AttemptThrottledCall(EFrameThrottleBranch* Branches);
};


// Class TBL.FriendsAndPartyList
// 0x01F0 (0x0408 - 0x0218)
class UFriendsAndPartyList : public UListViewBase
{
public:
	unsigned char                                      UnknownData00[0xC1];                                      // 0x0218(0x00C1) MISSED OFFSET
	EFriendsListType                                   ListType;                                                 // 0x02D9(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x6];                                       // 0x02DA(0x0006) MISSED OFFSET
	class UTBLScrollBarStyleDataAsset*                 ScrollBarStyle;                                           // 0x02E0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnGetEntryWidgetClassForItemEvent;                        // 0x02E8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    BP_OnEntryGeneratedWithSelf;                              // 0x02F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    BP_OnListEntryRefreshed;                                  // 0x0308(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TMap<EFriendsListType, int>                        SortingWeights;                                           // 0x0318(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EOrientation>                          Orientation;                                              // 0x0368(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<ESelectionMode>                        SelectionMode;                                            // 0x0369(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EConsumeMouseWheel                                 ConsumeMouseWheel;                                        // 0x036A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bClearSelectionOnClick;                                   // 0x036B(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsFocusable;                                             // 0x036C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x036D(0x0003) MISSED OFFSET
	float                                              EntrySpacing;                                             // 0x0370(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bReturnFocusToSelection;                                  // 0x0374(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x73];                                      // 0x0375(0x0073) MISSED OFFSET
	unsigned char                                      NumberOfDummyItems;                                       // 0x03E8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      NumberOfDummyGroups;                                      // 0x03E9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      NumberOfMaxItemsDisplayed;                                // 0x03EA(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x15];                                      // 0x03EB(0x0015) MISSED OFFSET
	class UClass* /*UUserWidget*/                      SeparatorEntryWidgetClass;                                // 0x0400(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.FriendsAndPartyList"));
		return ptr;
	}


	void SetPartyInviteSettings(bool bAllowInvites, bool bJoinViaPresence, bool bJoinViaPresenceFriendsOnly);
	void RefreshItemsList();
	void RefreshFriendsList(bool ShouldRead);
	void OnUsersChanged(TSet<struct FString> ChangedUsers);
	void BP_NavigateToItem(const struct FBlueprintOnlineUser& Item);
};


// Class TBL.BlueprintOnlineUserListEntry
// 0x0000 (0x0028 - 0x0028)
class UBlueprintOnlineUserListEntry : public UUserListEntry
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.BlueprintOnlineUserListEntry"));
		return ptr;
	}


	void OnListItemSet(const struct FBlueprintOnlineUser& ListItemObject);
};


// Class TBL.FxActor
// 0x0008 (0x0260 - 0x0258)
class AFxActor : public AActor
{
public:
	unsigned char                                      bEnableCollisionOnTearOff : 1;                            // 0x0258(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0259(0x0003) MISSED OFFSET
	float                                              TornOffLifeSpan;                                          // 0x025C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.FxActor"));
		return ptr;
	}


	void OnTornOff();
	void OnKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void DisableAndDestroy(float LifeSpan);
	void CleanupAbilityActorsInternal(class AController* Controller);
	void CleanupAbilityActors();
};


// Class TBL.FxComponent
// 0x0068 (0x0170 - 0x0108)
class UFxComponent : public UActorComponent
{
public:
	TArray<class UBlueprint*>                          PersistentFXs;                                            // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UBlueprint*>                          PersistentFXsForOwner;                                    // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*UFxInstance*/>              PersistentFXComponents;                                   // 0x0128(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*UFxInstance*/>              PersistentFXComponentsForOwner;                           // 0x0138(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UFxInstance*>                         PersistentFXInstances;                                    // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMaterialOverrideState                      MaterialOverrideState;                                    // 0x0158(0x0018) (CPF_Transient, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.FxComponent"));
		return ptr;
	}


	void PushMaterialOverride(class UMaterialInterface* Material);
	void PopMaterialOverride();
	static class UFxInstance* GetFXInstanceFromActor(class AActor* Actor, class UClass* /*UObject*/ Blueprint, bool bCreateIfNeeded);
	static class UFxComponent* GetFXComponent(class AActor* Actor);
};


// Class TBL.FxEventListener
// 0x0010 (0x0050 - 0x0040)
class UFxEventListener : public UTBLObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.FxEventListener"));
		return ptr;
	}


	void ProjectileStopped(class AInventoryItem* Item);
	void ProjectileStarted(class AInventoryItem* Item);
	void OnWorldHit(class AActor* Actor, const struct FVector& Location, class UPhysicalMaterial* PhysMaterial);
	void OnWasParried(class ATBLCharacter* ThisCharacter, class ATBLCharacter* OtherCharacter, const struct FParryEventState& ParryEventState);
	void OnTargetMethodEvent(class AActor* Initiator, const struct FName& TargetMethodName, TEnumAsByte<ETargetMethodEvent> Event, class AAbilityInvocation* Invocation, const struct FVector& Location, TArray<class AActor*> HitTargets);
	void OnSuicide(class AActor* Suicider, const struct FDamageTakenEvent& DamageTakenEvent);
	void OnStatChanged(class AActor* Actor, EStat Type, const struct FStatEntry& Stat, float DeltaValue);
	void OnStartedFalling();
	void OnStaminaCostFailed(const struct FName& Event);
	void OnSetThirdPersonDeathCamera();
	void OnSetRagdollPhysics();
	void OnSetOnFire();
	void OnSetOffFire();
	void OnSetFirstPersonDeathCamera();
	void OnRemoveCondition(class AActor* Actor, EConditionType Condition, class AActor* ConditionRemover);
	void OnRagdollHit(class AActor* HitTaker, class AActor* HitCauser, class AInventoryItem* Weapon, const struct FHitResult& HitResult, const struct FVector& HitDirection, float Damage, class UDamageSource* DamageSource, class AActor* Projectile, const struct FName& AttackName);
	void OnPossessed(class AController* Controller);
	void OnPlayerMeshChanged(class USkeletalMeshComponent* OldMesh, class USkeletalMeshComponent* NewMesh);
	void OnPlayerKilled(const struct FDeathEvent& DeathEvent);
	void OnParrySuccess(class ATBLCharacter* ThisCharacter, class ATBLCharacter* OtherCharacter, const struct FParryEventState& ParryEventState);
	void OnMountSiegeEngine(class ASiegeEngine* SiegeEngine);
	void OnKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnInvocationActorCreated(class AActor* Actor);
	void OnInventoryProjectileHitPassiveShield(class AInventoryItem* Shield, class AInventoryItem* Projectile);
	void OnInventoryItemDamageStateChanged(class AInventoryItem* Item, EInventoryItemDamagedState DamagedState);
	void OnInventoryItemDamaged(class AInventoryItem* Item, const struct FInventoryItemDamagedParams& Params);
	void OnInventoryActionFailed(EFailedInventoryAction Action);
	void OnHorseToWorldImpact(const struct FHitResult& Hit, EHorseImpactLocation ImpactLocation, EHorseToWorldImpactType ImpactType, const struct FName& ImpactCombatState, float ImpactSpeed);
	void OnHorseToHorseImpact(class AHorse* TargetHorse, EHorseImpactLocation ImpactLocation, EHorseToHorseImpactType ImpactType, const struct FName& ImpactCombatState, float ImpactSpeed);
	void OnHorseToCharacterImpact(class ATBLCharacter* TargetCharacter, EHorseImpactLocation ImpactLocation, EHorseToCharacterImpactType ImpactType, const struct FName& ImpactCombatState, float ImpactSpeed);
	void OnHorseFxEvent(const struct FName& EventName, float EventScale, TArray<struct FName> EventTags);
	void OnHorseBreakingEvent(bool bIsBreaking, bool bIsEmergencyBreaking, float CurrentSpeed, const struct FName& PreviousState);
	void OnHealOverTimeStart(EHealingSource HealingSource, class ATBLPlayerState* InstigatingPlayerState);
	void OnHealOverTimeEnd();
	void OnHealOverTimeAdded(EHealingSource HealingSource, class ATBLPlayerState* InstigatingPlayerState);
	void OnExperienceLevelChanged(class AActor* Actor, int NewLevel);
	void OnEpicEndGame(const struct FEpicEndGameState& EpicEndGameState);
	void OnDismountSiegeEngine(class ASiegeEngine* SiegeEngine, bool Forced);
	void OnDamageTaken(const struct FDamageTakenEvent& DamageEvent);
	void OnDamageCaused(const struct FDamageTakenEvent& DamageEvent);
	void OnCrowdControlNoDamage(class AActor* OwningActor, const struct FName& CombatState, const struct FCrowdControlParams& CrowdControlParams);
	void OnConstruct(class AActor* Actor);
	void OnCombatStateEvent(class AActor* Actor, const struct FName& EventName, const struct FAttackInfo& EventAttackInfo);
	void OnCombatStateEnd(class AActor* Actor, const struct FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void OnCombatStateBegin(class AActor* Actor, const struct FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void OnClientPreTravel(const struct FString& PendingURL, TEnumAsByte<ETravelType> TravelType, bool bIsSeamlessTravel);
	void OnClash(class ATBLCharacter* InitiatorCharacter, class ATBLCharacter* TargetCharacter, const struct FClashEventState& ClashEventState);
	void OnCharacterLanded(const struct FLandedResult& LandedResult);
	void OnApplyCondition(class AActor* Actor, EConditionType Condition);
	void OnAnimNotifyStepEvent();
	void OnAmmoInitialize();
	void OnAbilityOnCooldown(const struct FAbility& Ability, float RemainingTime, class AInventoryItem* InventoryItem);
	void OnAbilityError(class AActor* Initiator, TEnumAsByte<EResultCode> Code, class AAbilityInvocation* Invocation, const struct FName& AttackName, class UClass* /*AInventoryItem*/ ItemClass);
};


// Class TBL.FxInstance
// 0x0068 (0x00B8 - 0x0050)
class UFxInstance : public UFxEventListener
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0050(0x0018) MISSED OFFSET
	EStopTimerPolicy                                   StopTimerPolicy;                                          // 0x0068(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EDelegateRemovalPolicy                             DelegateRemovalPolicy;                                    // 0x0069(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUnbindOnAttackEnd;                                       // 0x006A(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x5];                                       // 0x006B(0x0005) MISSED OFFSET
	class AActor*                                      Actor;                                                    // 0x0070(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UFxEventListener*>                    EventListeners;                                           // 0x0078(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                Flags;                                                    // 0x0088(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PlaySuicideDelay;                                         // 0x008C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PlayBandageDelay;                                         // 0x0090(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               BandageAppliedSound;                                      // 0x0098(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x18];                                      // 0x00A0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.FxInstance"));
		return ptr;
	}


	void SetCharacterPostProcessMID(class UMaterialInstanceDynamic* InCharacterPostProcessMID);
	void ResetCharacterPostProcessMID();
	void PlayWeaponCombatStateSound(class AActor* SoundActor, const struct FName& PreviousCombatState, const struct FName& NewCombatState, const struct FAttackInfo& AttackInfo, class UCombatState* CombatState);
	void PlayCharacterCombatStateSound(class AActor* SoundActor, const struct FName& PreviousCombatState, const struct FName& NewCombatState, const struct FAttackInfo& AttackInfo, class UCombatState* CombatState);
	void OnKilledInternal(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnCombatStateChangedInternal(class AActor* InActor, const struct FName& EventName, const struct FAttackInfo& EventAttackInfo);
	void OnActorPreAbilityInitiate();
	class UMaterialInstanceDynamic* GetCharacterPostProcessMID();
	void Cleanup();
	void BP_ResetPostProcess();
	bool AreBloodDecalsRestricted();
};


// Class TBL.GameModeConfig
// 0x0018 (0x00C0 - 0x00A8)
class UGameModeConfig : public UAssemblyBlueprint
{
public:
	float                                              PostGameUIDelay;                                          // 0x00A8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 PostGameSlomoCurve;                                       // 0x00B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AnalyticsSampleEventInterval;                             // 0x00B8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.GameModeConfig"));
		return ptr;
	}

};


// Class TBL.GameModeModifier
// 0x0050 (0x02A8 - 0x0258)
class AGameModeModifier : public AInfo
{
public:
	TMap<class UClass* /*ATBLCharacter*/, class UClass* /*ATBLCharacter*/> OverridePawnClasses;                                      // 0x0258(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.GameModeModifier"));
		return ptr;
	}

};


// Class TBL.GameplayRules
// 0x0008 (0x0110 - 0x0108)
class UGameplayRules : public UActorComponent
{
public:
	float                                              AimPenalty;                                               // 0x0108(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.GameplayRules"));
		return ptr;
	}


	float UpdateAimPenalty(float DeltaSeconds, TArray<struct FAimPenalty> AimPenalties);
	bool TutorialCanDamage(class ATBLCharacter* InitiatorCharacter, class AActor* TargetActor);
	bool ShouldStartProjectileCounterWindow(class ATBLCharacter* Character);
	bool ShouldStartCounterWindow(class ATBLCharacter* Character);
	bool ShouldStartActiveRiposteWindow(class ATBLCharacter* Character);
	bool ShouldScoreKill(class AController* Killer, class AController* Killed, const struct FDeathDamageTakenEvent& DamageEvent);
	bool ShouldPlayDamageTaken(const struct FDamageTakenEvent& DamageTakenEvent);
	bool ShouldGotoDowned(class AActor* Target, class AActor* Initiator, const struct FName& AbilityName, class AInventoryItem* InventoryItem, class UDamageSource* DamageType, const struct FDamageTakenEvent& DamageTakenEvent);
	bool ShouldComboCancelQueue(const struct FName& CombatState, const struct FAttackInfo& Attack);
	bool ShouldBlockSameAttack(class ATBLCharacter* AttackingCharacter, class ATBLCharacter* DefendingCharacter);
	bool ShouldAttackBeCountered(class ATBLCharacter* HitCharacter, class ATBLCharacter* AttackingCharacter, class AInventoryItem* AttackingItem, class AInventoryItem* DefenderItem);
	void OnProjectileHit(class AInventoryItem* Projectile, EOnProjectileHitEffect InHitEffect, const struct FHitResult& InHitResult, float InBounceVelocityModifier, EOnProjectileHitEffect* OutHitEffect, float* OutBounceVelocityModifier);
	bool OnParryBreak(class ATBLCharacter* AttackingCharacter, class ATBLCharacter* DefendingCharacter, class AInventoryItem* AttackingItem, class AInventoryItem* DefendingItem);
	void OnDamageTaken(EOnHitEffect InHitEffect, ECrowdControlVariant InCrowdControlVariant, class AActor* HitActor, const struct FDamageTakenEvent& DamageEvent, const struct FName& AttackName, class AInventoryItem* AttackingItem, class UAttackType* AttackType, EOnHitEffect* OutHitEffect, ECrowdControlVariant* OutCrowdControlVariant);
	bool IsValidSelfInflictedDamageSource(class UDamageSource* DamageSource);
	bool IsBlocking(class ATBLCharacter* Character, const struct FName& AttackName, const struct FName& CombatState, class ATBLCharacter* AttackingCharacter);
	float GetRangedInaccuracy(class AInventoryItem* Projectile);
	struct FTBL_FGoreEvent GetGoreEventOnDamage(const struct FDamageTakenEvent& DamageTakenEvent, bool bIsRagdollHit, bool bShouldApplyConditions);
	struct FVector GetDisarmImpulse(class AInventoryItem* AttackerItem, const struct FVector& HitDirection);
	EDefenderBlockedPolicy GetDefenderBlockedPolicy(EDefenderBlockedPolicy InDefenderBlockedPolicy, class ATBLCharacter* AttackingCharacter, class ATBLCharacter* DefendingCharacter, class AInventoryItem* AttackingItem, class AInventoryItem* DefendingItem, bool bProjectileAttack, bool bSameAttackClash, bool bWasBlockedWithParryForgivenessWindow, bool* bShouldDisarm);
	ECrowdControlVariant GetCrowdControlVariant(ECrowdControlVariant InCrowdControlVariant, class AActor* HitActor, const struct FName& CombatState, class UClass* /*AInventoryItem*/ InventoryItemClass, const struct FName& AbilityName, class UAttackType* AttackType, bool IsOnHorse);
	EComboTimingPolicy GetComboTimingPolicy(EComboTimingPolicy InComboTimingPolicy, class ATBLCharacter* Character, const struct FName& CombatState, const struct FAttackInfo& PrevAttack, const struct FAttackInfo& NextAttack);
	EAttackerBlockedPolicy GetAttackerBlockedPolicy(EAttackerBlockedPolicy InAttackerBlockedPolicy, class ATBLCharacter* AttackingCharacter, class ATBLCharacter* DefendingCharacter, class AInventoryItem* AttackingItem, class AInventoryItem* DefendingItem, bool bSameAttackClash);
	bool ApplyDamageConditions(class AActor* HitActor, const struct FDamageTakenEvent& DamageEvent);
};


// Class TBL.GameProgressInterface
// 0x0000 (0x0028 - 0x0028)
class UGameProgressInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.GameProgressInterface"));
		return ptr;
	}


	void BroadcastTeamUpdated(class ATBLTeam* Team);
	void BroadcastSetActive(bool Active);
	void BroadcastProgressUpdated(float Progress, class ATBLTeam* Team);
};


// Class TBL.GameSparksLibrary
// 0x0000 (0x0028 - 0x0028)
class UGameSparksLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.GameSparksLibrary"));
		return ptr;
	}


	static int GetXp(class ATBLPlayerState* InPlayerState);
	static class UOnlineConfig* GetOnlineConfig();
	static struct FLevelStats GetLevelStats(class ATBLPlayerState* InPlayerState, int Level);
	static float GetDaysSinceLive(class ATBLPlayerState* InPlayerState, class UVirtualGoodAnnouncement* InAnnouncement);
	static struct FText ConvertIntToRomanNumeral(int InNumber);
};


// Class TBL.GateComponent
// 0x0048 (0x0150 - 0x0108)
class UGateComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnGateOpened;                                             // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnGateClosed;                                             // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Bool                            IsGateOpened;                                             // 0x0138(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.GateComponent"));
		return ptr;
	}


	void SetIsGateOpened(bool InGateOpened);
	void OnRep_IsGateOpened();
	bool GetIsGatedOpened();
};


// Class TBL.GoreFXLibrary
// 0x0000 (0x0028 - 0x0028)
class UGoreFXLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.GoreFXLibrary"));
		return ptr;
	}


	static class USkeletalMeshComponent* KnockoffHelmet(class ATBLCharacter* Char);
	static bool GetGoreActionFromAttack(class AInventoryItem* InIventoryItem, const struct FName& InAttackName, struct FWeaponGoreSlot* GoreAction);
	static struct FName FindClosestBoneFromGiven(class USkinnedMeshComponent* InSkinnedMesh, class UBoneList* InBreakableBones, const struct FVector& InTestLocation, struct FVector* OutBoneLocation, float* OutClosestDistance);
	static void FillUpComponentSpaceTransformsRefPose(class USkeletalMeshComponent* SKM, TArray<struct FTransform>* ComponentSpaceTransforms);
	static bool BreakAtBone(class ACharacter* Char, const struct FName& BoneName, const struct FVector& Impulse, const struct FVector& HitLocation, bool bSpawnedItem);
};


// Class TBL.Spawner
// 0x0398 (0x05F0 - 0x0258)
class ASpawner : public AActor
{
public:
	struct FSpawnWaveParamOverrides                    SpawnWaveParams;                                          // 0x0258(0x00A0) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSpawningStarted;                                        // 0x02F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSpawningEnded;                                          // 0x0308(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSpawnerSpawnedCharacter;                                // 0x0318(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSpawnerPossessedCharacter;                              // 0x0328(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	float                                              DelayBeforeSpawningStops;                                 // 0x0338(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     StartCameraOffset;                                        // 0x033C(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    StartCameraRotation;                                      // 0x0348(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              CameraInterpTime;                                         // 0x0354(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0358(0x0004) MISSED OFFSET
	float                                              TimeBeforeVulnerable;                                     // 0x035C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSkipLocationValidation;                                  // 0x0360(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0361(0x0007) MISSED OFFSET
	TArray<struct FSpawnerSpawnReservation>            SpawnReservations;                                        // 0x0368(0x0010) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                NextReservationToSpawn;                                   // 0x0378(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                SpawnLocationIndex;                                       // 0x037C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class ATBLCharacter*>                       SpawnedCharacters;                                        // 0x0380(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class ATBLCharacter*>                       PendingPossessCharacters;                                 // 0x0390(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                Rows;                                                     // 0x03A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                Columns;                                                  // 0x03A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RowSpacing;                                               // 0x03A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ColumnSpacing;                                            // 0x03AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSpawnScoringConfig                         SpawningConfig;                                           // 0x03B0(0x0018) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bPrioritizeFrontmost;                                     // 0x03C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x03C9(0x0003) MISSED OFFSET
	float                                              SnapToGroundDistance;                                     // 0x03CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RowOffsetPercent;                                         // 0x03D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinimumPlayerDistance;                                    // 0x03D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SpawnerScoreMultiplier;                                   // 0x03D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LastSpawnTime;                                            // 0x03DC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PostSpawnPossesionTime;                                   // 0x03E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0xC];                                       // 0x03E4(0x000C) MISSED OFFSET
	struct FTransform                                  StartingSpawnerTransform;                                 // 0x03F0(0x0030) (CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bSkipPawnOverlapTest;                                     // 0x0420(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowInvalidSpawnLocation;                               // 0x0421(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0xE];                                       // 0x0422(0x000E) MISSED OFFSET
	class ASpawnWave*                                  SpawnWave;                                                // 0x0430(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bSpawning;                                                // 0x0438(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bPossessing;                                              // 0x0439(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bWaveLocked;                                              // 0x043A(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bChildSpawner;                                            // 0x043B(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ASpawner>                     LastKnownParentSpawner;                                   // 0x043C(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bPreviousWaveControlRestricted;                           // 0x0444(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bPendingLock;                                             // 0x0445(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0446(0x0002) MISSED OFFSET
	class ASpawnWave*                                  PendingSpawnWave;                                         // 0x0448(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector                                     SpawnCenter;                                              // 0x0450(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData06[0x4];                                       // 0x045C(0x0004) MISSED OFFSET
	TArray<class USpawnLocationComponent*>             SpawnComponents;                                          // 0x0460(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FSpawnComponentData>                 SpawnComponentData;                                       // 0x0470(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData07[0x58];                                      // 0x0480(0x0058) MISSED OFFSET
	TMap<EFaction, struct FSpawnScoreData>             SpawnerScore;                                             // 0x04D8(0x0050) (CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData08[0x10];                                      // 0x0528(0x0010) MISSED OFFSET
	class UClass* /*USpawnerScoreMethod*/              SpawnerScoreMethodClass;                                  // 0x0538(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<class UClass* /*UCarryableSpawnSpec*/, int>   SpawnedSpecialCarryableSpawnSpecs;                        // 0x0540(0x0050) (CPF_NativeAccessSpecifierPrivate)
	class URandomCarryableSpawnLoadout*                RandomCarryableLoadout;                                   // 0x0590(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class AController>, class UClass* /*AInventoryItem*/> EquippedCarryablesByController;                           // 0x0598(0x0050) (CPF_UObjectWrapper, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData09[0x8];                                       // 0x05E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.Spawner"));
		return ptr;
	}


	class ASpawnWave* StartSpawning(EFaction Faction, const struct FSpawnWaveParamOverrides& InSpawnWaveParams);
	class AForwardSpawnWave* StartForwardSpawning(TArray<class APawn*> PawnsAllowedToSpawn, const struct FSpawnWaveParamOverrides& InSpawnWaveParams);
	class AForcedRespawnSpawnWave* StartForcedSpawning(class AController* SpawnController, const struct FSpawnWaveParamOverrides& InSpawnWaveParams);
	class ATBLCharacter* SpawnCharacter(const struct FTransform& SpawnTransform, class UClass* /*ATBLCharacter*/ Class, class AController* Controller);
	void SetupComponentsArray();
	void RequestSpawnQueueSlot();
	void RequestSpawnerScoreUpdate();
	void OnSpawnedCharacter(class ATBLCharacter* NewCharacter, class USceneComponent* SpawnComp);
	void OnPossessedCharacter(class ATBLCharacter* Character, class AController* Controller);
	void LockingWaveDestroyed(class AActor* DestroyedSpawnWave);
	bool IsWaveLocked();
	bool IsValidSpawnLocation(const struct FTransform& OutTransform, class UClass* /*APawn*/ PawnClass);
	int IsThereAPlayerTooClose(EFaction Faction, int LocationIndex, bool bIsSpawningIn);
	bool IsPendingLock();
	bool IsChildSpawner();
	void HandleOnCustomizationJobsEmptied();
	void HandleAddedReservation(const struct FSpawnerSpawnReservation& Reservation);
	int GetTotalReservations();
	class ASpawnWave* GetSpawnWave();
	class USceneComponent* GetSpawnLocationAndComponent(int Index, struct FTransform* OutTransform, float* SpawnRadius, float* SpawnHalfHeight);
	float GetSpawnerScoreForFaction(EFaction Faction);
	float GetSpawnerScoreForAllPlayers();
	TArray<class ATBLCharacter*> GetSpawnedCharacters();
	int GetRemainingReservations();
	int GetMinPlayerCount();
	int GetMaxPlayerCount();
	class UClass* /*AInventoryItem*/ GetEquippedCarryableForController(class AController* Controller);
	void GenerateSpawnComponents();
	void ConditionalStopSpawning();
	void Cinematics_StartAllowingControl(class ATBLCharacter* Character);
	void Cinematics_ControllerPossessedPawn(class ATBLPlayerController* Controller, class ATBLCharacter* Pawn);
	void Cinematics_BecameNextSpawner(class ATBLPlayerController* Controller);
	void ActualStopSpawning();
};


// Class TBL.GroupSpawner
// 0x0040 (0x0630 - 0x05F0)
class AGroupSpawner : public ASpawner
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x05F0(0x0028) MISSED OFFSET
	ESpawnerSelectionMode                              SpawnerSelectionMode;                                     // 0x0618(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0619(0x0003) MISSED OFFSET
	int                                                SpawnerSelectionIndex;                                    // 0x061C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHasPerformedRefill;                                      // 0x0620(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0xF];                                       // 0x0621(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.GroupSpawner"));
		return ptr;
	}

};


// Class TBL.GroupSpawnQueuer
// 0x0058 (0x00D8 - 0x0080)
class UGroupSpawnQueuer : public USpawnQueuer
{
public:
	int                                                GroupWaveDurationSeconds;                                 // 0x0080(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinimumRespawnTime;                                       // 0x0084(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                GroupWaveTimeExtension;                                   // 0x0088(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MaximumGroupWaveTime;                                     // 0x008C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ExtensionInterval;                                        // 0x0090(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x14];                                      // 0x0094(0x0014) MISSED OFFSET
	TArray<class AController*>                         SoloPlayerQueue;                                          // 0x00A8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AController*>                         PlayerControllers;                                        // 0x00B8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00C8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.GroupSpawnQueuer"));
		return ptr;
	}

};


// Class TBL.HeadlookComponent
// 0x0028 (0x0130 - 0x0108)
class UHeadlookComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	class AActor*                                      TargetActor;                                              // 0x0118(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AActor*                                      LocalNearestActor;                                        // 0x0120(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DistanceSquaredToLocalNearestActor;                       // 0x0128(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x012C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HeadlookComponent"));
		return ptr;
	}


	void SetTargetActor(class AActor* Target);
	void GetHeadlookLocation(struct FVector* OutHeadlookLocation, bool* OutIsHeadlook);
};


// Class TBL.HeraldryAssetUserData
// 0x0168 (0x0190 - 0x0028)
class UHeraldryAssetUserData : public UAssetUserData
{
public:
	TArray<struct FCanvasUVTri>                        Triangles;                                                // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHasMeshBuffers;                                          // 0x0038(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x157];                                     // 0x0039(0x0157) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HeraldryAssetUserData"));
		return ptr;
	}

};


// Class TBL.Horse
// 0x0360 (0x0CA0 - 0x0940)
class AHorse : public ASiegeEngine
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0940(0x0008) MISSED OFFSET
	struct FMulticastScriptDelegate                    PlayMountAnimation;                                       // 0x0948(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    PlayDismountAnimation;                                    // 0x0958(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnLandedAnimation;                                        // 0x0968(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnHorseFxEvent;                                           // 0x0978(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnLanceChargeEnabled;                                     // 0x0988(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnLanceChargeFailed;                                      // 0x0998(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnStartAttack;                                            // 0x09A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnKickNoDriver;                                           // 0x09B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSpeedRequirementFailed;                                 // 0x09C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnRootMotionChanged;                                      // 0x09D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnHorseToCharacterImpact;                                 // 0x09E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x10];                                      // 0x09F8(0x0010) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnHorseToHorseImpact;                                     // 0x0A08(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0A18(0x0010) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnHorseToWorldImpact;                                     // 0x0A28(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0A38(0x0010) MISSED OFFSET
	float                                              FXImpactSpeedThreshold;                                   // 0x0A48(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0A4C(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnHorseBump;                                              // 0x0A50(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class USceneComponent*                             CollisionRoot;                                            // 0x0A60(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UInteractableComponent*                      Interactable;                                             // 0x0A68(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UConditionsComponent*                        ConditionsComponent;                                      // 0x0A70(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementModifierComponent*                  MovementModifiers;                                        // 0x0A78(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTeamOwnershipComponent*                     TeamOwnershipComponent;                                   // 0x0A80(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRiderUseControllerRotationYaw;                           // 0x0A88(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0A89(0x0003) MISSED OFFSET
	struct FThirdPersonCameraParams                    ThirdPersonCameraParams;                                  // 0x0A8C(0x0060) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              ThirdPersonCameraOffsetZ;                                 // 0x0AEC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                PushingPriority;                                          // 0x0AF0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PushSpeed;                                                // 0x0AF4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FTimerHandle                                ExpireTimerHandle;                                        // 0x0AF8(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ExpireTime;                                               // 0x0B00(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              KnockdownBlendOutTime;                                    // 0x0B04(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x10];                                      // 0x0B08(0x0010) MISSED OFFSET
	class UCombatStateComponent*                       CombatStateComponent;                                     // 0x0B18(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCombatStateSynchronization*                 CombatStateSynchronization;                               // 0x0B20(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCombatStateQueue*                           CombatStateQueue;                                         // 0x0B28(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UCombatStateSet*/                  CombatStateSet;                                           // 0x0B30(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPushingComponent*                           PushingComponent;                                         // 0x0B38(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RotationLimit;                                            // 0x0B40(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0B44(0x0004) MISSED OFFSET
	class UHorseMovement*                              HorseMovement;                                            // 0x0B48(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UPrimitiveComponent*>                 WorldCollision_Front;                                     // 0x0B50(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UPrimitiveComponent*>                 WorldCollision_Back;                                      // 0x0B60(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UPrimitiveComponent*>                 WorldCollision_Both;                                      // 0x0B70(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCapsuleComponent*                           WorldCollision_FrontLegs;                                 // 0x0B80(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCapsuleComponent*                           WorldCollision_BackLegs;                                  // 0x0B88(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCapsuleComponent*                           WorldCollision_Rider;                                     // 0x0B90(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UPrimitiveComponent*>                 PushingCollision;                                         // 0x0B98(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     RelativeLocation_FrontLegs;                               // 0x0BA8(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     RelativeLocation_BackLegs;                                // 0x0BB4(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     FrontLegsTargetLocation;                                  // 0x0BC0(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     BackLegsTargetLocation;                                   // 0x0BCC(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LastClientRotationYaw;                                    // 0x0BD8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LastClientForwardSpeed;                                   // 0x0BDC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       LastClientMovementState;                                  // 0x0BE0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSpawnOnHorse;                                            // 0x0BE8(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bGallopExhausted;                                         // 0x0BE9(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEmergencyBrakeExhausted;                                 // 0x0BEA(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedServerFrame;                                    // 0x0BEB(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0BEC(0x0004) MISSED OFFSET
	class UDataTable*                                  AbilitiesDataTable;                                       // 0x0BF0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FDataTableRowSelection                      LanceCharge;                                              // 0x0BF8(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UAbilitySpec*                                LanceChargeSpec;                                          // 0x0C10(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x8];                                       // 0x0C18(0x0008) MISSED OFFSET
	struct FName                                       MountDirection;                                           // 0x0C20(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                HorizLockId;                                              // 0x0C28(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       HorseCollisionPreset;                                     // 0x0C2C(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLanceChargeEnabled;                                      // 0x0C34(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsDead;                                                  // 0x0C35(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               PreviousIsPlayingRootMotion;                              // 0x0C36(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x1];                                       // 0x0C37(0x0001) MISSED OFFSET
	struct FHorseAiming                                HorseAiming;                                              // 0x0C38(0x0044) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x4];                                       // 0x0C7C(0x0004) MISSED OFFSET
	struct FTimerHandle                                QueuedAccelerateVoTimerHandle;                            // 0x0C80(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTimerHandle                                QueuedDeccelerateVoTimerHandle;                           // 0x0C88(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               IsGalloping;                                              // 0x0C90(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               HasAccelerateVoBeenPlayed;                                // 0x0C91(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EFaction                                           LastMountedFaction;                                       // 0x0C92(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHorseGallopVoIgnoredOnce;                                // 0x0C93(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0xC];                                       // 0x0C94(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.Horse"));
		return ptr;
	}


	void WantsToGallop(bool bWantsToGallop);
	bool TrySlowdownForKick(const struct FName& AttackName);
	void StartInterpToMountLocation();
	bool ShouldPushBackOnTurnAgainstWall();
	void ServerHorseMoveDualHybridRootMotion(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, uint32_t View0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector& ClientLoc, unsigned char NewFlags, uint32_t View, class UPrimitiveComponent* ClientMovementBase, unsigned char ClientMovementMode, float InRotationYaw, int16_t ForwardSpeed);
	void ServerHorseMoveDual(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, uint32_t View0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector& ClientLoc, unsigned char NewFlags, uint32_t View, class UPrimitiveComponent* ClientMovementBase, unsigned char ClientMovementMode, float InRotationYaw, int16_t ForwardSpeed);
	void ServerHorseMove(float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector& ClientLoc, unsigned char CompressedMoveFlags, uint32_t View, class UPrimitiveComponent* ClientMovementBase, unsigned char ClientMovementMode, float InRotationYaw, int16_t ForwardSpeed);
	void RiderToWorldImpact(const struct FHitResult& Hit);
	void PostHorseFxEvent(const struct FName& EventName, float EventScale, TArray<struct FName> EventTags);
	void OnRiderStartAttack();
	void OnProcessPlayerInput();
	void OnPlayerMeshChanged(class USkeletalMeshComponent* OldMesh, class USkeletalMeshComponent* NewMesh);
	void OnKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState);
	void OnCinematicControlRestricted(class ATBLCharacter* Character);
	void OnCinematicControlAllowed(class ATBLCharacter* Character);
	void NetMulticastFastSharedReplication(const struct FFastSharedProperties_Horse& Properties);
	void MaintainSpeedOnImpact();
	void KnockRiderOffHorse();
	void Kill();
	void KickNoDriver();
	bool IsExhausted();
	void InitiateKick(const struct FName& AttackName);
	void HorseToWorldImpact(const struct FHitResult& Hit, EHorseImpactLocation ImpactLocation, EHorseToWorldImpactType ImpactType, const struct FName& ImpactCombatState, float ImpactSpeed);
	void HorseToHorseImpact(class AHorse* TargetHorse, EHorseImpactLocation ImpactLocation, EHorseToHorseImpactType ImpactType, const struct FName& ImpactCombatState, float ImpactSpeed);
	void HorseToCharacterImpact(class ATBLCharacter* TargetCharacter, EHorseImpactLocation ImpactLocation, EHorseToCharacterImpactType ImpactType, const struct FName& ImpactCombatState, float ImpactSpeed);
	void Horse_ClientAdjustPosition(float Timestamp, const struct FVector& NewLoc, const struct FVector& NewVel, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode, const struct FHorseMovementCorrection& HorseCorrection);
	bool HasSpeedForAttack(const struct FName& AttackName);
	class UCapsuleComponent* GetWorldCollisionRider();
	void GetWorldCollisionLegs(class UCapsuleComponent** FrontLegs, class UCapsuleComponent** BackLegs);
	TArray<class UPrimitiveComponent*> GetWorldCollisionFront();
	TArray<class UPrimitiveComponent*> GetWorldCollisionBack();
	struct FVector GetThirdPersonCameraAttachPoint();
	TEnumAsByte<ECollisionResponse> GetRiderToWorldCollision();
	float GetRelativeSpeed(class AActor* OtherActor);
	TArray<class UPrimitiveComponent*> GetPushingCollision();
	struct FName GetHorseCollisionProfile();
	struct FVector GetCurveValueBySpeed(class UCurveVector* Curve, float RelativeSpeed);
	void ForceRun(float Time);
	void EventUsePressed(class APawn* InPawn, class UInteractableComponent* InInteractable);
	void BroadcastSetFaction(EFaction Faction);
	void BroadcastRandomSeed(int Seed);
	void BroadcastPostHorseFxEvent(const struct FName& EventName, float EventScale, TArray<struct FName> EventTags);
	void BroadcastPlayDismountAnimation(const struct FName& AnimationName);
};


// Class TBL.TBLCharacterMovementBaseComponent
// 0x09C0 (0x1120 - 0x0760)
class UTBLCharacterMovementBaseComponent : public UCharacterMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0760(0x0008) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnMovementActionStarted;                                  // 0x0768(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMovementActionFinished;                                 // 0x0778(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInitialAutorunExpired;                                  // 0x0788(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              BottomOfCapsuleHeight;                                    // 0x0798(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MovementSequenceStepUpX;                                  // 0x079C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MovementSequenceStepUpZ;                                  // 0x07A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x07A4(0x0004) MISSED OFFSET
	class USceneComponent*                             MasterTransformComponent;                                 // 0x07A8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMovementMetrics                            MovementMetrics;                                          // 0x07B0(0x00C8) (CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsPreMovement : 1;                                       // 0x0878(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0879(0x0003) MISSED OFFSET
	struct FVector                                     PreCorrectionLocation;                                    // 0x087C(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementInstance*                           ActiveMovementAction;                                     // 0x0888(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FDebugMovementAction>                LogPreviousMovements;                                     // 0x0890(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EStartMovementResult>                  LastStartMovementResult;                                  // 0x08A0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x7];                                       // 0x08A1(0x0007) MISSED OFFSET
	class UMovementSequence*                           LastMovementSequence;                                     // 0x08A8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastMoveTime;                                             // 0x08B0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x4];                                       // 0x08B4(0x0004) MISSED OFFSET
	TMap<unsigned char, struct FSyncStartMovementParams> SyncStartMovementParams;                                  // 0x08B8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FAutorunParams>         SyncForcedAutorunParams;                                  // 0x0908(0x0050) (CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, EAutorunMovementMode>          SyncAutorunMovementMode;                                  // 0x0958(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FSyncSpawnAnimationParams> SyncSpawnAnimation;                                       // 0x09A8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FServerInitiateAbilityParams> SyncInitiateAbility;                                      // 0x09F8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FServerHitWorldParams>  SyncHitWorld;                                             // 0x0A48(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FServerTrapEventParams> SyncTrapEvent;                                            // 0x0A98(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FCombatStateStartAttack> SyncStartAttack;                                          // 0x0AE8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FCombatStateHeavyAttack> SyncStartHeavyAttack;                                     // 0x0B38(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FCombatStateFire>       SyncStartFire;                                            // 0x0B88(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FCombatStateCancelAttack> SyncCancelAttack;                                         // 0x0BD8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FCombatStateChargeStab> SyncChargeStab;                                           // 0x0C28(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FCombatStateReleaseStab> SyncReleaseStab;                                          // 0x0C78(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FCombatStateGetUp>      SyncGetUp;                                                // 0x0CC8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FTBL_FManualReload>     SyncManualReload;                                         // 0x0D18(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FTBL_FDisableAttackRootMotion> SyncDisableAttackRootMotion;                              // 0x0D68(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FTBL_FPlayLadderAnimation> SyncPlayLadderAnimation;                                  // 0x0DB8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FTBL_FMountLadder>      SyncMountLadder;                                          // 0x0E08(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FHorseToHorseBump>      SyncHorseToHorseBump;                                     // 0x0E58(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, struct FHorseToWorldBump>      SyncHorseToWorldBump;                                     // 0x0EA8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FSyncMovementAction>                 SyncMovementActions;                                      // 0x0EF8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FSyncMovementAction>                 SyncPreMovementActions;                                   // 0x0F08(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      NextSyncMovementId;                                       // 0x0F18(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0F19(0x0003) MISSED OFFSET
	float                                              LastSyncMovementTime;                                     // 0x0F1C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FCharacterControlInstance>           CharacterControlInstances;                                // 0x0F20(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FCharacterControlInstance                   CurrentCharacterControl;                                  // 0x0F30(0x0018) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FCharacterControlOverTime>           CharacterControlOverTime;                                 // 0x0F48(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CharacterControlInstanceId;                               // 0x0F58(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastTimeDiscrepancyDetectedTime;                          // 0x0F5C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeBetweenDiscrepancyDetected;                           // 0x0F60(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0F64(0x0004) MISSED OFFSET
	struct FReplicated_Bool                            bAllowPositionError;                                      // 0x0F68(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bResetSmoothing;                                          // 0x0F80(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0F81(0x0003) MISSED OFFSET
	struct FVector                                     LastVelocity;                                             // 0x0F84(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector                                     LastUpdatedLocation;                                      // 0x0F90(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0F9C(0x0004) MISSED OFFSET
	struct FQuat                                       LastUpdatedRotation;                                      // 0x0FA0(0x0010) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FServerCorrection>                   LastServerCorrections;                                    // 0x0FB0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector                                     LastCorrectionLocation;                                   // 0x0FC0(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0FCC(0x0004) MISSED OFFSET
	struct FQuat                                       LastCorrectionRotation;                                   // 0x0FD0(0x0010) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	struct FRotator                                    LastControlRotation;                                      // 0x0FE0(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0xC];                                       // 0x0FEC(0x000C) MISSED OFFSET
	struct FReplicated_FMovementAnimationEvent         MovementAnimationEvent;                                   // 0x0FF8(0x0028) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FReplicated_FAutorunParams                  AutorunParams;                                            // 0x1020(0x0038) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FAutorunParams                              LastAutorunParams;                                        // 0x1058(0x0028) (CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x1];                                       // 0x1080(0x0001) MISSED OFFSET
	bool                                               bLockIntoForcedAutorun;                                   // 0x1081(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPendingEndForcedAutorun;                                 // 0x1082(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x1];                                       // 0x1083(0x0001) MISSED OFFSET
	float                                              AutorunStartTime;                                         // 0x1084(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                InitialAutorunHorizontalLock;                             // 0x1088(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bInitialAutorunExpired;                                   // 0x108C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x3];                                       // 0x108D(0x0003) MISSED OFFSET
	struct FTimerHandle                                InitialAutorunTimerHandle;                                // 0x1090(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAutorunInitialized;                                      // 0x1098(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x3];                                       // 0x1099(0x0003) MISSED OFFSET
	int                                                NoStopAutorunHorizontalLock;                              // 0x109C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTimerHandle                                NoStopAutorunTimerHandle;                                 // 0x10A0(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsInNoStopAutorun;                                       // 0x10A8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x7];                                       // 0x10A9(0x0007) MISSED OFFSET
	TArray<struct FDebugVelocityGraphEntry>            DebugVelocityGraph;                                       // 0x10B0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FServerMoveParams                           ServerMoveParams;                                         // 0x10C0(0x0038) (CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UClass* /*UObject*/                          OccupiedNavAreaClass;                                     // 0x10F8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FTimerHandle                                NavAreaUpdateTimer;                                       // 0x1100(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FTimerHandle                                ForcedMoveTimerHandle;                                    // 0x1108(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector                                     ForcedMoveDirection;                                      // 0x1110(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData16[0x4];                                       // 0x111C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLCharacterMovementBaseComponent"));
		return ptr;
	}


	void SetAllowPositionError(bool InAllowPositionError);
	void ServerAckMovement(unsigned char SyncMovementId, float ClientTimeStamp);
	void OnRep_MovementAnimationEvent();
	void OnRep_AutorunParams();
	void OnAutorunParamsChanged();
	void NoStopAutorunExpired();
	void LockForcedAutorun(bool bLock);
	bool IsInitialAutorun();
	void InitialAutorunExpired();
	bool HasMovementAction(class UMovementSequence* Sequence);
	TEnumAsByte<EMovementMode> GetMovementMode();
	float GetAutorunStartTime();
	bool DidHitBottomOfCapsule(const struct FHitResult& Hit);
	void ClientStopForcedAutorun(unsigned char SyncMovementId);
	void ClientStartMovement(const struct FMovementActionInitiationParams& InitParams, unsigned char SyncMovementId);
	void ClientStartForcedAutorun(const struct FAutorunParams& Params, unsigned char SyncMovementId);
	void ClientSetAutorunMovementMode(EAutorunMovementMode InMovementMode, unsigned char SyncMovementId);
	void ClientCinematicRestrictControl(unsigned char SyncMovementId);
	void ClientCinematicAllowControl(unsigned char SyncMovementId);
	void BroadcastStopMovement(class UMovementSequence* Sequence, bool bExecuteClientFirst);
	void BroadcastStartMovement(const struct FMovementActionInitiationParams& InitParams);
	void BroadcastSetDowned(bool bDowned);
	void BroadcastPlaySpawnAnimation(const struct FName& Animation);
	void AuthorityStopForcedAutorun();
	void AuthoritySetAutorunMovementMode(EAutorunMovementMode InMovementMode);
	void AuthorityForceAutorun(const struct FAutorunParams& Params, class ATBLCharacterBase* Leader);
};


// Class TBL.SiegeEngineMovement
// 0x0000 (0x1120 - 0x1120)
class USiegeEngineMovement : public UTBLCharacterMovementBaseComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SiegeEngineMovement"));
		return ptr;
	}


	void OnDriverMount(class ATBLCharacter* Driver);
	void OnDriverDismount(class ATBLCharacter* Driver, EDismountType DismountType);
};


// Class TBL.HorseMovement
// 0x05D0 (0x16F0 - 0x1120)
class UHorseMovement : public USiegeEngineMovement
{
public:
	struct FMulticastScriptDelegate                    OnLanded;                                                 // 0x1120(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnWantsToGallop;                                          // 0x1130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBreaking;                                               // 0x1140(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FHorseMovementData                          CurrentMovementState;                                     // 0x1150(0x0038) (CPF_NativeAccessSpecifierPublic)
	float                                              CurrentForwardSpeed;                                      // 0x1188(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x118C(0x0004) MISSED OFFSET
	struct FReplicated_Float                           ReplicatedCurrentForwardSpeed;                            // 0x1190(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ModifiedForwardSpeed;                                     // 0x11A8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentStrafeSpeed;                                       // 0x11AC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentMovementModifier;                                  // 0x11B0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentTurnRate;                                          // 0x11B4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Float                           ReplicatedCurrentTurnRate;                                // 0x11B8(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentForwardAccel;                                      // 0x11D0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentStrafeAccel;                                       // 0x11D4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentTurnRateAccel;                                     // 0x11D8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x11DC(0x0004) MISSED OFFSET
	struct FReplicated_Float                           ReplicatedCurrentTurnRateAccel;                           // 0x11E0(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentStrafeDistance;                                    // 0x11F8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PendingTargetSpeed;                                       // 0x11FC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TargetSpeed;                                              // 0x1200(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x1204(0x0004) MISSED OFFSET
	struct FReplicated_Float                           ReplicatedTargetSpeed;                                    // 0x1208(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal                   ReplicatedFloorNormal;                                    // 0x1220(0x000C) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x122C(0x0004) MISSED OFFSET
	struct FReplicated_Bool                            ReplicatedIsAccelerating;                                 // 0x1230(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Bool                            ReplicatedIsDecelerating;                                 // 0x1248(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Float                           ReplicatedForwardInput;                                   // 0x1260(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Float                           ReplicatedRightInput;                                     // 0x1278(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWantsToGallop;                                           // 0x1290(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bForceRun;                                                // 0x1291(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x2];                                       // 0x1292(0x0002) MISSED OFFSET
	float                                              ForceRunTime;                                             // 0x1294(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDebugAutoRun;                                            // 0x1298(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x1299(0x0003) MISSED OFFSET
	float                                              HorseMovementDirectionTimeMs;                             // 0x129C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              HorseMovementInfoTimeMs;                                  // 0x12A0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FHorseMovementScale                         AccelerationScale;                                        // 0x12A4(0x000C) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FHorseMovementScale                         TurnRateScale;                                            // 0x12B0(0x000C) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FTurnTowardsCameraParams                    TurnTowardsCameraParams;                                  // 0x12BC(0x000C) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              CruisingSpeed;                                            // 0x12C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseCruisingSpeed;                                        // 0x12CC(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsAccelerating;                                          // 0x12CD(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsDecelerating;                                          // 0x12CE(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x1];                                       // 0x12CF(0x0001) MISSED OFFSET
	float                                              PreviousSpeed;                                            // 0x12D0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x4];                                       // 0x12D4(0x0004) MISSED OFFSET
	class UMovementModifierComponent*                  MovementModifiers;                                        // 0x12D8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BaseTurnRate;                                             // 0x12E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x4];                                       // 0x12E4(0x0004) MISSED OFFSET
	class UCurveFloat*                                 SpeedToTurnRateCurve;                                     // 0x12E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 ForwardSpeedToStrafeSpeedCurve;                           // 0x12F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 ForwardAngleToTurnMultiplierCurve;                        // 0x12F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 StrafeAngleToTurnMultiplierCurve;                         // 0x1300(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 IdleAngleToTurnMultiplierCurve;                           // 0x1308(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 StrafeToTurnRateCurve;                                    // 0x1310(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 InertiaTurnDecelCurve;                                    // 0x1318(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 InertiaStrafeTurnDecelCurve;                              // 0x1320(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 SpeedToForwardDecelCurve;                                 // 0x1328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 SpeedToForwardDecelWhileStrafingCurve;                    // 0x1330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 SpeedToForwardDecelEmergency;                             // 0x1338(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 InputTimeToMultiplierCurve;                               // 0x1340(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GamepadInputToAxisMagnitudeCurve;                         // 0x1348(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InertiaStrafeTime;                                        // 0x1350(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InertiaTurnTime;                                          // 0x1354(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MovementTransitionTime;                                   // 0x1358(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InputTapThreshold;                                        // 0x135C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InputDoubleTapThreshold;                                  // 0x1360(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bNeedToRepressKeyForReverse;                              // 0x1364(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x3];                                       // 0x1365(0x0003) MISSED OFFSET
	class UDataTable*                                  MovementDataTable;                                        // 0x1368(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       MaxMovementState;                                         // 0x1370(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ImpactCooldown;                                           // 0x1378(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CanInstantKickSpeed;                                      // 0x137C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CanSlowDownToKickSpeed;                                   // 0x1380(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TurnAgainstWallResistance;                                // 0x1384(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseBreakingState;                                        // 0x1388(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x3];                                       // 0x1389(0x0003) MISSED OFFSET
	float                                              BreakingToReverseDelay;                                   // 0x138C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              EmergencyBrakeSpeed;                                      // 0x1390(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BreakingOrientationSpeed;                                 // 0x1394(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDoStrafeOrbiting;                                        // 0x1398(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x3];                                       // 0x1399(0x0003) MISSED OFFSET
	float                                              PercentMaintainVelocityOnLanded;                          // 0x139C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsDashDisabled : 1;                                      // 0x13A0(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bInvertBackwardsStrafe : 1;                               // 0x13A0(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bBackwardStrafeAngleRelativeToCamera : 1;                 // 0x13A0(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x3];                                       // 0x13A1(0x0003) MISSED OFFSET
	float                                              DashCooldown;                                             // 0x13A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              StrafeTurnMultiplier;                                     // 0x13A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BackwardsStrafeAngle;                                     // 0x13AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FHorseBumpSettings                          HorseBumpSettings;                                        // 0x13B0(0x0038) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FHorseToCharacterImpactSettings             HorseToCharacterImpactSettings;                           // 0x13E8(0x0008) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FHorseToHorseImpactSettings                 HorseToHorseImpactSettings;                               // 0x13F0(0x0008) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FHorseToWorldImpactSettings                 HorseToWorldImpactSettings;                               // 0x13F8(0x0008) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FHorseImpactSpeedSettings                   HorseImpactSpeedSettings;                                 // 0x1400(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FHorseImpactRules                           HorseImpactRules;                                         // 0x140C(0x002D) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x3];                                       // 0x1439(0x0003) MISSED OFFSET
	struct FName                                       PreviousMovementState;                                    // 0x143C(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              GamepadExclusiveSagitalInputAngle;                        // 0x1444(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              GamepadExclusiveHorizontalInputAngle;                     // 0x1448(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              GamepadInputOuterThreshold;                               // 0x144C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FHorseMovementBlend                         BlendMovementState;                                       // 0x1450(0x0078) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FHorseMovementInput                         MovementInput;                                            // 0x14C8(0x0020) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FHorseMovementInput                         PreviousMovementInput;                                    // 0x14E8(0x0020) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FName                                       LastHorizontalInput;                                      // 0x1508(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               BoostMode;                                                // 0x1510(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ControlMode;                                              // 0x1511(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsStrafing;                                              // 0x1512(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x1];                                       // 0x1513(0x0001) MISSED OFFSET
	float                                              MovementStateDeltaTime;                                   // 0x1514(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDidImpact;                                               // 0x1518(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bStuckPenetrating;                                        // 0x1519(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x2];                                       // 0x151A(0x0002) MISSED OFFSET
	int                                                StuckPenetratingDirection;                                // 0x151C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       SlowDownToKickAttackName;                                 // 0x1520(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxSlowdownToKickTime;                                    // 0x1528(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FHitResult                                  ImpactHitResult;                                          // 0x152C(0x0088) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              ImpactHitTime;                                            // 0x15B4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ImpactHitStrafe;                                          // 0x15B8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0x4];                                       // 0x15BC(0x0004) MISSED OFFSET
	TMap<struct FName, struct FHorseInputState>        InputState;                                               // 0x15C0(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               StandardMovementStates;                                   // 0x1610(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       PreMovementState;                                         // 0x1620(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsAdjustingFloorHeight;                                  // 0x1628(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsStepUp;                                                // 0x1629(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRevertStepUpMovement;                                    // 0x162A(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x5];                                       // 0x162B(0x0005) MISSED OFFSET
	TArray<float>                                      CurveSections;                                            // 0x1630(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TargetOrientationMin;                                     // 0x1640(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TargetOrientationMax;                                     // 0x1644(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LookTurnPercentage;                                       // 0x1648(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsEmergencyBrake;                                        // 0x164C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData18[0x3];                                       // 0x164D(0x0003) MISSED OFFSET
	float                                              LastLandedTime;                                           // 0x1650(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData19[0x4];                                       // 0x1654(0x0004) MISSED OFFSET
	class AActor*                                      MaintainHorseSpeedOnImpact;                               // 0x1658(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSyncMaintainImpactSpeed;                                 // 0x1660(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EHorseToHorseImpactType                            HorseToHorseImpactType;                                   // 0x1661(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EHorseImpactLocation                               ImpactLocation;                                           // 0x1662(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData20[0x1];                                       // 0x1663(0x0001) MISSED OFFSET
	struct FOverrideTurnRate                           OverrideTurnRate;                                         // 0x1664(0x002C) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FOverrideForwardSpeed                       OverrideForwardSpeed;                                     // 0x1690(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FOverrideMaxSpeed                           OverrideMaxSpeed;                                         // 0x1698(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<TWeakObjectPtr<class AActor>, float>          HitActors;                                                // 0x16A0(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HorseMovement"));
		return ptr;
	}


	void TurnTowardsCamera(float TurnRate, float TurnRateWithInput);
	void StartDash();
	void ServerSetLeanDirection(const struct FName& Direction);
	void ServerHorseToWorldBump(const struct FHorseToWorldBump& Params);
	void ServerHorseToHorseBump(const struct FHorseToHorseBump& Params);
	void OnRep_TargetSpeed();
	void OnRep_IsDecelerating();
	void OnRep_IsAccelerating();
	void OnRep_CurrentTurnRateAccel();
	void OnRep_CurrentTurnRate();
	void OnRep_CurrentForwardSpeed();
	void OnPushingOverlap(TArray<class ATBLCharacterBase*> Overlaps);
	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState);
	void ModifyTurnRateScale(float Target, float InterpSpeed);
	void ModifyTargetSpeed(float Target);
	void ModifyAccelerationScale(float Target, float InterpSpeed);
	bool IsValidMovementState(const struct FName& State);
	bool IsStrafing();
	bool IsMovementStateLessThanEqual(const struct FName& State);
	bool IsMovementStateGreaterThan(const struct FName& State);
	bool IsMovementStateEqual(const struct FName& State);
	void ImpactTurn(float Delta, float Time);
	void ImpactSlowdown(float Delta, float Time);
	void ImpactMaxSpeed(float MaxSpeed, float Time);
	void ImpactBumpOff();
	float GetSpeedInState(const struct FName& State, float Percent);
	float GetSettleSpeedInState(const struct FName& State);
	struct FName GetMovementStateFromSpeed(float Speed);
	float GetMinSpeedInState(const struct FName& State);
	float GetMaxSpeedInState(const struct FName& State);
	float GetMaxKickSpeed();
	bool GetInvertedBackwardsStrafe();
	float GetInstantKickSpeed();
	void GetInputTurn(float* InputTurn, float* HeldTime);
	void GetInputStrafe(float* InputStrafe, float* HeldTime);
	void GetInputForward(float* InputForward, float* HeldTime);
	void GetInputDirection(EHorseMovementInput* Direction, float* HeldTime);
	float GetCurrentForwardSpeed();
	bool GetControlMode();
	bool GetBoostMode();
	void DrawDebugHorseMovePath(float DeltaTime);
	void ClientPerformBump(float Direction, float TurnAngle, float Scale, bool bRearImpact, bool bSideImpact, class AHorse* InitiatorHorse);
	void ClientImpactTurn(float Delta, float Time);
	void ClientImpactSlowdown(float Delta, float Time);
	void ClientImpactMaxSpeed(float MaxSpeed, float Time);
	struct FName ClampMovementState(const struct FName& State);
	bool CheckHorseCollisionFromIdle(float Direction);
	void BroadcastHorseToWorldImpact(const struct FHitResult& Hit, EHorseImpactLocation HorseImpactLocation, EHorseToWorldImpactType ImpactType, const struct FName& ImpactCombatState, float ImpactSpeed);
	void BroadcastHorseToHorseImpact(class AHorse* TargetHorse, EHorseImpactLocation HorseImpactLocation, EHorseToHorseImpactType ImpactType, const struct FName& ImpactCombatState, float ImpactSpeed);
	void BroadcastHorseToCharacterImpact(class ATBLCharacter* TargetCharacter, EHorseImpactLocation HorseImpactLocation, EHorseToCharacterImpactType ImpactType, const struct FName& ImpactCombatState, float ImpactSpeed);
	void BroadcastBump(class AActor* Actor, float TurnAngle, float BumpVelocity, bool bDirection, bool bRearImpact);
};


// Class TBL.HorseMovementState
// 0x0008 (0x0178 - 0x0170)
class UHorseMovementState : public UCombatState
{
public:
	class UHorseMovement*                              movement;                                                 // 0x0170(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HorseMovementState"));
		return ptr;
	}


	void UpdateMovement();
	void TurnTowardsCamera(float TurnRate, float TurnRateWithInput);
	void StrafeGearUp();
	void StrafeGearDown();
	void ModifyTurnRateScale(float Target, float InterpSpeed);
	void ModifyTargetSpeed(float Target);
	void ModifyAccelerationScale(float Target, float InterpSpeed);
	float GetTurnInputScale(EHorseTurnInput TurnInput, float OrientationOffset);
	void GetTargetOrientationOffset(TEnumAsByte<EMovementDirection> Direction, float* Min, float* Max);
	float GetSpeed(const struct FName& State, float Percent);
	float GetSettleSpeed(const struct FName& State);
	float GetOrbitTurnScale(float LookAtDistance, float StrafeSpeed, float TurnRate);
	float GetMinSpeed(const struct FName& State);
	float GetMaxSpeed(const struct FName& State);
	bool GetInvertedBackwardStrafe();
	void GetInputTurn(float* InputTurn, float* HeldTime);
	void GetInputStrafe(float* InputStrafe, float* HeldTime);
	void GetInputForward(float* InputForwardOut, float* HeldTime);
	void GetInputDirection(EHorseMovementInput* Direction, float* HeldTime);
	class UHorseMovement* GetHorseMovement();
	float GetCurrentForwardSpeed();
	float GetCrusingSpeed();
	bool GetControlMode();
	bool GetBoostMode();
	void GearUp();
	void GearDown();
};


// Class TBL.TBLUserWidget
// 0x00D8 (0x0320 - 0x0248)
class UTBLUserWidget : public UUserWidget
{
public:
	TArray<class UTBLUMGSequencePlayer*>               ActiveTBLSequencePlayers;                                 // 0x0248(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, TWeakObjectPtr<class UUMGSequencePlayer>> InterruptableSequencePlayers;                             // 0x0258(0x0050) (CPF_Transient, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsInFocusPath;                                           // 0x02A8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02A9(0x0007) MISSED OFFSET
	struct FMulticastScriptDelegate                    EventAddedToFocusPath;                                    // 0x02B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    EventRemovedFromFocusPath;                                // 0x02C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsHighlighted;                                           // 0x02D0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x02D1(0x0007) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnHighlight;                                              // 0x02D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnUnhighlight;                                            // 0x02E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<struct FButtonCallout>                      ButtonCallouts;                                           // 0x02F8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsWidgetDisabledInDemoMode;                               // 0x0308(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsWidgetDisabledInShippingWIP;                            // 0x0309(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x16];                                      // 0x030A(0x0016) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLUserWidget"));
		return ptr;
	}


	void SetSelfAsRadioGroupSelection(const struct FName& Group);
	void PlayInterruptableAnimation(class UWidgetAnimation* InAnimation, float StartAtTime, int NumLoopsToPlay, const struct FName& InterruptGroup, bool bPlayInReverse, bool bReverseExisting);
	void PlayAdvancedAnimation(class UWidgetAnimation* InAnimation, class UCurveFloat* InterpolationCurve, float StartAtTime, float LoopBackToTime, float EndAtTime, bool bIsNormalizedCurve, float AnimationSpeed, int NumLoopsToPlay, bool bResumeFromLastTime, float Duration, float MaxDuration);
	void NativeUnhighlight();
	void NativeHighlight();
	void K2_Unhighlight();
	void K2_OnFocusChanging();
	void K2_Highlight();
	void IsWidgetEnabled(EWidgetDisableType* Result);
	bool IsWidgetDisabled();
	void HandleGamepadNavigationModeChanged(EGamepadNavigationMode Mode);
	class UTBLScreenManager* GetScreenManager();
	class UTBLUserWidget* GetRadioGroupSelection(const struct FName& Group);
};


// Class TBL.HUDContainerWidget
// 0x01B0 (0x04D0 - 0x0320)
class UHUDContainerWidget : public UTBLUserWidget
{
public:
	EWidgetContainer                                   WidgetContainerType;                                      // 0x0320(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0321(0x0007) MISSED OFFSET
	TArray<struct FHUDContainerPoolInfo>               PooledWidgets;                                            // 0x0328(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<class UActorComponent*, class UHUDContainerSubWidget*> Widgets;                                                  // 0x0338(0x0050) (CPF_ExportObject, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	TMap<class UActorComponent*, struct FWrappedStreamableHandle> PendingWidgets;                                           // 0x0388(0x0050) (CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	TSet<class UHUDContainerSubWidget*>                AllActiveWidgets;                                         // 0x03D8(0x0050) (CPF_ExportObject, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	TMap<class UClass* /*UObject*/, struct FHudContainerPoolEntry> Pool;                                                     // 0x0428(0x0050) (CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	TSet<class UClass* /*UObject*/>                    LoadedSubWidgetClasses;                                   // 0x0478(0x0050) (CPF_NativeAccessSpecifierPublic)
	bool                                               bRegisteredStaggeredUpdate;                               // 0x04C8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x04C9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HUDContainerWidget"));
		return ptr;
	}


	void Update();
	void SubwidgetReturnToPool(class UHUDContainerSubWidget* SubWidget);
	void SubwidgetInitFromPool(class UHUDContainerSubWidget* SubWidget);
	void RemoveSubwidget(class UHUDContainerSubWidget* SubWidget);
	void PopulateWidgetPool();
	void ManuallyUpdate();
	void AddSubwidget(class UHUDContainerSubWidget* SubWidget);
};


// Class TBL.HUDCrosshairContainerWidget
// 0x0000 (0x04D0 - 0x04D0)
class UHUDCrosshairContainerWidget : public UHUDContainerWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HUDCrosshairContainerWidget"));
		return ptr;
	}

};


// Class TBL.HUDContainerSubWidget
// 0x0020 (0x0268 - 0x0248)
class UHUDContainerSubWidget : public UUserWidget
{
public:
	class AActor*                                      AssignedActor;                                            // 0x0248(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UActorComponent*                             AssignedComponent;                                        // 0x0250(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsFocused;                                               // 0x0258(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0259(0x0003) MISSED OFFSET
	float                                              FocusAlpha;                                               // 0x025C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FocusScale;                                               // 0x0260(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0264(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HUDContainerSubWidget"));
		return ptr;
	}


	void K2_UpdateFocusParams(float InAlpha, float InScale);
	void K2_OnReturnedToPool();
	void K2_OnFocusedChanged(bool bInIsFocused);
	void K2_OnAssignedToActor(class AActor* Actor, class UActorComponent* Component);
	class AActor* GetAssignedActor();
};


// Class TBL.HUDMarkerActor
// 0x0018 (0x0328 - 0x0310)
class AHUDMarkerActor : public ATBLActor
{
public:
	class UHudMarkerDisplayComponent*                  HUDMarkerComponent;                                       // 0x0310(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UObjectiveStatusDisplayComponent*            ObjectiveStatusComponent;                                 // 0x0318(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UActorInfoDisplayComponent*                  ActorInfoComponent;                                       // 0x0320(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HUDMarkerActor"));
		return ptr;
	}


	class UObjectiveStatusDisplayComponent* GetObjectiveStatusComponent();
	class UHudMarkerDisplayComponent* GetHUDMarkerComponent();
	class UActorInfoDisplayComponent* GetActorInfoComponent();
};


// Class TBL.HUDMarkerContainerWidget
// 0x0110 (0x05E0 - 0x04D0)
class UHUDMarkerContainerWidget : public UHUDContainerWidget
{
public:
	TMap<class UWidget*, class UCanvasPanelSlot*>      OverridePanelSlots;                                       // 0x04D0(0x0050) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	bool                                               bClampMarkersToCircle;                                    // 0x0520(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0521(0x0003) MISSED OFFSET
	struct FVector2D                                   PinLocation;                                              // 0x0524(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PinInterpSpeed;                                           // 0x052C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              UnpinInterpSpeed;                                         // 0x0530(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LimitFadeSpeed;                                           // 0x0534(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<class UHUDContainerSubWidget*, float>         PinnedWidgets;                                            // 0x0538(0x0050) (CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	TMap<class UActorComponent*, class UHudMarkerDisplayComponent*> HudMarkerComponents;                                      // 0x0588(0x0050) (CPF_ExportObject, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	class UInteractableComponent*                      LastFocusedInteractable;                                  // 0x05D8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HUDMarkerContainerWidget"));
		return ptr;
	}

};


// Class TBL.HUDMarkerContainerSubWidget
// 0x0010 (0x0278 - 0x0268)
class UHUDMarkerContainerSubWidget : public UHUDContainerSubWidget
{
public:
	bool                                               bPinned;                                                  // 0x0268(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0269(0x0003) MISSED OFFSET
	float                                              HoverPercent;                                             // 0x026C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsHovered;                                               // 0x0270(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsClamped;                                               // 0x0271(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisablePinned;                                           // 0x0272(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0273(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HUDMarkerContainerSubWidget"));
		return ptr;
	}


	void K2_OnUnPinned();
	void K2_OnUnHovered();
	void K2_OnUnClamped();
	void K2_OnPinned();
	void K2_OnHovered();
	void K2_OnClamped();
};


// Class TBL.HUDMarkerContainerPlayerWidget
// 0x0018 (0x0290 - 0x0278)
class UHUDMarkerContainerPlayerWidget : public UHUDMarkerContainerSubWidget
{
public:
	class UWidget*                                     ContainerWidget;                                          // 0x0278(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               Pawn;                                                     // 0x0280(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsHovering;                                              // 0x0288(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0289(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HUDMarkerContainerPlayerWidget"));
		return ptr;
	}


	void AttemptThrottledCombatStateChangeCall(EFrameThrottleBranch* Branches);
};


// Class TBL.HUDMarkerInterface
// 0x0000 (0x0028 - 0x0028)
class UHUDMarkerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HUDMarkerInterface"));
		return ptr;
	}


	float GetHUDMarkerProgress(class APlayerController* PlayerController);
	struct FVector GetHUDMarkerLocation(class APlayerController* PlayerController);
};


// Class TBL.HudVisibilityVolume
// 0x0000 (0x0290 - 0x0290)
class AHudVisibilityVolume : public AVolume
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.HudVisibilityVolume"));
		return ptr;
	}

};


// Class TBL.UtilityAI_InputAxis
// 0x0008 (0x0030 - 0x0028)
class UUtilityAI_InputAxis : public UObject
{
public:
	float                                              RangeMin;                                                 // 0x0028(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RangeMax;                                                 // 0x002C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.UtilityAI_InputAxis"));
		return ptr;
	}


	float ScaleToRange(float X);
	float CalculateValue(const struct FUtilityAI_Context& C);
};


// Class TBL.I_AreMoreLoadingBotsNeeded
// 0x0018 (0x0048 - 0x0030)
class UI_AreMoreLoadingBotsNeeded : public UUtilityAI_InputAxis
{
public:
	struct FGameplayTag                                Tag;                                                      // 0x0030(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UClass* /*UUtilityAI_Behavior*/>      LoadingBehaviourClasses;                                  // 0x0038(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_AreMoreLoadingBotsNeeded"));
		return ptr;
	}

};


// Class TBL.I_Blackboard_IsSet
// 0x0008 (0x0038 - 0x0030)
class UI_Blackboard_IsSet : public UUtilityAI_InputAxis
{
public:
	struct FName                                       KeyName;                                                  // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_Blackboard_IsSet"));
		return ptr;
	}

};


// Class TBL.I_BlackboardValue
// 0x0008 (0x0038 - 0x0030)
class UI_BlackboardValue : public UUtilityAI_InputAxis
{
public:
	struct FName                                       KeyName;                                                  // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_BlackboardValue"));
		return ptr;
	}

};


// Class TBL.I_CanTargetPawn
// 0x0000 (0x0030 - 0x0030)
class UI_CanTargetPawn : public UUtilityAI_InputAxis
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_CanTargetPawn"));
		return ptr;
	}

};


// Class TBL.I_CanUseInteractable
// 0x0008 (0x0038 - 0x0030)
class UI_CanUseInteractable : public UUtilityAI_InputAxis
{
public:
	bool                                               bIgnoreIfNotAvailable;                                    // 0x0030(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_CanUseInteractable"));
		return ptr;
	}

};


// Class TBL.I_CompareForwardness
// 0x0000 (0x0030 - 0x0030)
class UI_CompareForwardness : public UUtilityAI_InputAxis
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_CompareForwardness"));
		return ptr;
	}

};


// Class TBL.I_Distance
// 0x0008 (0x0038 - 0x0030)
class UI_Distance : public UUtilityAI_InputAxis
{
public:
	bool                                               bUseDist2D;                                               // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_Distance"));
		return ptr;
	}

};


// Class TBL.I_DistanceRankAmongBotsTargettingActor
// 0x0008 (0x0038 - 0x0030)
class UI_DistanceRankAmongBotsTargettingActor : public UUtilityAI_InputAxis
{
public:
	EUtilityAI_EnemyOrFriendly                         EnemyOrFriendly;                                          // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSameBehaviorOnly;                                        // 0x0031(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_DistanceRankAmongBotsTargettingActor"));
		return ptr;
	}

};


// Class TBL.I_DistanceToCollision
// 0x0000 (0x0030 - 0x0030)
class UI_DistanceToCollision : public UUtilityAI_InputAxis
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_DistanceToCollision"));
		return ptr;
	}

};


// Class TBL.I_DotMyCharacterToTarget
// 0x0000 (0x0030 - 0x0030)
class UI_DotMyCharacterToTarget : public UUtilityAI_InputAxis
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_DotMyCharacterToTarget"));
		return ptr;
	}

};


// Class TBL.I_DotTargetToMyCharacter
// 0x0000 (0x0030 - 0x0030)
class UI_DotTargetToMyCharacter : public UUtilityAI_InputAxis
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_DotTargetToMyCharacter"));
		return ptr;
	}

};


// Class TBL.I_HasAITag
// 0x0008 (0x0038 - 0x0030)
class UI_HasAITag : public UUtilityAI_InputAxis
{
public:
	struct FGameplayTag                                Tag;                                                      // 0x0030(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_HasAITag"));
		return ptr;
	}

};


// Class TBL.I_HaveLOSTo
// 0x0000 (0x0030 - 0x0030)
class UI_HaveLOSTo : public UUtilityAI_InputAxis
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_HaveLOSTo"));
		return ptr;
	}

};


// Class TBL.I_HowLongHaveIBeenDoingBehavior
// 0x0058 (0x0088 - 0x0030)
class UI_HowLongHaveIBeenDoingBehavior : public UUtilityAI_InputAxis
{
public:
	float                                              DecayRate;                                                // 0x0030(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CompletedBoostSeconds;                                    // 0x0034(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSet<class UClass* /*UUtilityAI_Behavior*/>        Behaviors;                                                // 0x0038(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_HowLongHaveIBeenDoingBehavior"));
		return ptr;
	}

};


// Class TBL.I_IncomingAttackIs
// 0x0050 (0x0080 - 0x0030)
class UI_IncomingAttackIs : public UUtilityAI_InputAxis
{
public:
	TSet<struct FName>                                 AllowedAttackNames;                                       // 0x0030(0x0050) (CPF_Edit, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_IncomingAttackIs"));
		return ptr;
	}

};


// Class TBL.I_Influence
// 0x0030 (0x0060 - 0x0030)
class UI_Influence : public UUtilityAI_InputAxis
{
public:
	bool                                               bDrawDebugSparseGrid;                                     // 0x0030(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDrawDebugInfluenceQueries;                               // 0x0031(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIgnoreTargetActor;                                       // 0x0032(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EUtilityAI_EnemyOrFriendly                         FactionRestriction;                                       // 0x0033(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EUtilityAI_EnemyOrFriendly                         PositiveInfluenceFaction;                                 // 0x0034(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	TArray<struct FInfluenceMapType>                   InfluenceTypes;                                           // 0x0038(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EInfluenceMapFindMethod                            FindMethod;                                               // 0x0048(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	float                                              MaxInfluenceDistance;                                     // 0x004C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       SearchTag;                                                // 0x0050(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSearchAITargetLocations;                                 // 0x0058(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0059(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_Influence"));
		return ptr;
	}

};


// Class TBL.I_InfluenceCurrent
// 0x0008 (0x0038 - 0x0030)
class UI_InfluenceCurrent : public UUtilityAI_InputAxis
{
public:
	class UClass* /*UI_Influence*/                     InfluenceInput;                                           // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_InfluenceCurrent"));
		return ptr;
	}

};


// Class TBL.I_InfluenceVsCurrent
// 0x0010 (0x0040 - 0x0030)
class UI_InfluenceVsCurrent : public UUtilityAI_InputAxis
{
public:
	class UClass* /*UI_Influence*/                     InfluenceInput;                                           // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWantTargetInfluenceToBeHigherThanCurrent;                // 0x0038(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_InfluenceVsCurrent"));
		return ptr;
	}

};


// Class TBL.I_IsLoadableActorLoaded
// 0x0000 (0x0030 - 0x0030)
class UI_IsLoadableActorLoaded : public UUtilityAI_InputAxis
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_IsLoadableActorLoaded"));
		return ptr;
	}

};


// Class TBL.I_NumUnloadedLoadableActorsWithAITag
// 0x0008 (0x0038 - 0x0030)
class UI_NumUnloadedLoadableActorsWithAITag : public UUtilityAI_InputAxis
{
public:
	struct FGameplayTag                                Tag;                                                      // 0x0030(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_NumUnloadedLoadableActorsWithAITag"));
		return ptr;
	}

};


// Class TBL.I_MatchingBehaviour
// 0x0028 (0x0058 - 0x0030)
class UI_MatchingBehaviour : public UUtilityAI_InputAxis
{
public:
	EUtilityAI_EnemyOrFriendly                         EnemyOrFriendly;                                          // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UClass* /*UUtilityAI_Behavior*/              BehaviourClass;                                           // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*UUtilityAI_Behavior*/>      OtherBehaviourClasses;                                    // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRangeAsPercent;                                          // 0x0050(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIgnoreSelf;                                              // 0x0051(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0052(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_MatchingBehaviour"));
		return ptr;
	}

};


// Class TBL.I_MatchingLocation
// 0x0008 (0x0038 - 0x0030)
class UI_MatchingLocation : public UUtilityAI_InputAxis
{
public:
	EUtilityAI_EnemyOrFriendly                         EnemyOrFriendly;                                          // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRangeAsPercent;                                          // 0x0031(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_MatchingLocation"));
		return ptr;
	}

};


// Class TBL.I_MatchingWeapon
// 0x0018 (0x0048 - 0x0030)
class UI_MatchingWeapon : public UUtilityAI_InputAxis
{
public:
	EUtilityAI_EnemyOrFriendly                         EnemyOrFriendly;                                          // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UClass* /*AInventoryItem*/                   WeaponClass;                                              // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRangeAsPercent;                                          // 0x0040(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIgnoreSelf;                                              // 0x0041(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0042(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_MatchingWeapon"));
		return ptr;
	}

};


// Class TBL.I_NumActorsWithAITag
// 0x0008 (0x0038 - 0x0030)
class UI_NumActorsWithAITag : public UUtilityAI_InputAxis
{
public:
	struct FGameplayTag                                Tag;                                                      // 0x0030(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_NumActorsWithAITag"));
		return ptr;
	}

};


// Class TBL.I_NumBotsTargettingActor
// 0x0008 (0x0038 - 0x0030)
class UI_NumBotsTargettingActor : public UUtilityAI_InputAxis
{
public:
	EUtilityAI_EnemyOrFriendly                         EnemyOrFriendly;                                          // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bExcludeSelf;                                             // 0x0031(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_NumBotsTargettingActor"));
		return ptr;
	}

};


// Class TBL.I_ObjectiveTimeRemaining
// 0x0008 (0x0038 - 0x0030)
class UI_ObjectiveTimeRemaining : public UUtilityAI_InputAxis
{
public:
	bool                                               bValueAsPercentRemaining;                                 // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFactionOrAttackerDefender                         RelevantFaction;                                          // 0x0031(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	float                                              ValueIfNotRelevant;                                       // 0x0034(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_ObjectiveTimeRemaining"));
		return ptr;
	}

};


// Class TBL.I_PathExists
// 0x0008 (0x0038 - 0x0030)
class UI_PathExists : public UUtilityAI_InputAxis
{
public:
	bool                                               bUseHierarchicalPathFinding;                              // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              PointProjectionExtent;                                    // 0x0034(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_PathExists"));
		return ptr;
	}

};


// Class TBL.I_PathLength
// 0x0008 (0x0038 - 0x0030)
class UI_PathLength : public UUtilityAI_InputAxis
{
public:
	float                                              PullTowardsQuerierDistance;                               // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_PathLength"));
		return ptr;
	}

};


// Class TBL.I_Random
// 0x0008 (0x0038 - 0x0030)
class UI_Random : public UUtilityAI_InputAxis
{
public:
	float                                              PercentChance;                                            // 0x0030(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_Random"));
		return ptr;
	}

};


// Class TBL.I_RecentlyReceivedDamageFrom
// 0x0008 (0x0038 - 0x0030)
class UI_RecentlyReceivedDamageFrom : public UUtilityAI_InputAxis
{
public:
	float                                              TimeSecondsToConsiderRecent;                              // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOutputIsPercentOfRecentDamage;                           // 0x0034(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_RecentlyReceivedDamageFrom"));
		return ptr;
	}

};


// Class TBL.I_StatCurrent
// 0x0008 (0x0038 - 0x0030)
class UI_StatCurrent : public UUtilityAI_InputAxis
{
public:
	EStat                                              Stat;                                                     // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EStat                                              StatMax;                                                  // 0x0031(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_StatCurrent"));
		return ptr;
	}

};


// Class TBL.I_TargetIsAIAndTargettingMe
// 0x0000 (0x0030 - 0x0030)
class UI_TargetIsAIAndTargettingMe : public UUtilityAI_InputAxis
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_TargetIsAIAndTargettingMe"));
		return ptr;
	}

};


// Class TBL.I_TargetIsHuman
// 0x0000 (0x0030 - 0x0030)
class UI_TargetIsHuman : public UUtilityAI_InputAxis
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_TargetIsHuman"));
		return ptr;
	}

};


// Class TBL.I_TimeSinceLastDidBehavior
// 0x0058 (0x0088 - 0x0030)
class UI_TimeSinceLastDidBehavior : public UUtilityAI_InputAxis
{
public:
	bool                                               bUseMaxIfActionStillUnderway;                             // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseMaxOnlyIfSameTarget;                                  // 0x0031(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
	TSet<class UClass* /*UUtilityAI_Behavior*/>        Behaviors;                                                // 0x0038(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_TimeSinceLastDidBehavior"));
		return ptr;
	}

};


// Class TBL.I_TimeUntilIDieFromBeingOutOfCombat
// 0x0000 (0x0030 - 0x0030)
class UI_TimeUntilIDieFromBeingOutOfCombat : public UUtilityAI_InputAxis
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_TimeUntilIDieFromBeingOutOfCombat"));
		return ptr;
	}

};


// Class TBL.I_VerticalDistance
// 0x0000 (0x0030 - 0x0030)
class UI_VerticalDistance : public UUtilityAI_InputAxis
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.I_VerticalDistance"));
		return ptr;
	}

};


// Class TBL.Campaign
// 0x0000 (0x0028 - 0x0028)
class UCampaign : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.Campaign"));
		return ptr;
	}


	int GetXp();
	class UDataTable* GetQuestsTable();
	int GetMaxLevel();
	class UDataTable* GetLevelTable();
	int GetLevel();
	int GetGatedMaxLevel();
	TScriptInterface<class UQuest> GetActiveQuest();
};


// Class TBL.InputReplay
// 0x0070 (0x0098 - 0x0028)
class UInputReplay : public UObject
{
public:
	struct FString                                     DebugString;                                              // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FInputReplayValues>                  FrameData;                                                // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Version;                                                  // 0x0048(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FInputReplayValues                          NullFrame;                                                // 0x0050(0x0048) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.InputReplay"));
		return ptr;
	}

};


// Class TBL.InputReplayComponent
// 0x00A0 (0x01A8 - 0x0108)
class UInputReplayComponent : public UActorComponent
{
public:
	bool                                               bValidRotation;                                           // 0x0108(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0109(0x0003) MISSED OFFSET
	struct FRotator                                    TargetRotation;                                           // 0x010C(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EInputReplayState>                     ReplayState;                                              // 0x0118(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0119(0x0007) MISSED OFFSET
	struct FInputReplayValues                          InputFrame;                                               // 0x0120(0x0048) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UInputReplay*                                InputReplay;                                              // 0x0168(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CurrentFrame;                                             // 0x0170(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    LastControlRotation;                                      // 0x0174(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FString                                     ReplayName;                                               // 0x0180(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<unsigned char>                              PlaybackPressed;                                          // 0x0190(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PlaybackFrameTime;                                        // 0x01A0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bNewReplayFrame;                                          // 0x01A4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDoObjective;                                             // 0x01A5(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAutoInputRec;                                            // 0x01A6(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x1];                                       // 0x01A7(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.InputReplayComponent"));
		return ptr;
	}


	void UpdateReplay(float DeltaTime);
	void SetReplayState(TEnumAsByte<EInputReplayState> NewReplayState);
	void SaveAutoInputRecord();
	void InputStop();
	void InputRec(const struct FString& ReplayName);
	void InputPlay(const struct FString& ReplayName);
	void InputCopyToOtherChars(const struct FString& ReplayName);
	void InputAppend(const struct FString& ReplayName, const struct FString& ReplayName2);
	struct FVector GetRelativeLocation(class AActor* Actor);
	float GetRelativeFacingAngle(class AActor* Actor);
	int GetNumFrames();
	class UInputReplay* GetInputReplay();
	int GetCurrentFrame();
	struct FReplayCharacterState GetCharacterState(class ATBLCharacter* Character);
	void DoKeyEvent(unsigned char KeyBind, TEnumAsByte<EInputEvent> KeyEvent);
	void DoFrame(float DeltaTime);
	void ClearInput();
	void AutoInputRec();
	void AdvanceFrame();
};


// Class TBL.InstancedObjectContainer
// 0x0000 (0x0028 - 0x0028)
class UInstancedObjectContainer : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.InstancedObjectContainer"));
		return ptr;
	}

};


// Class TBL.InteractableInterface
// 0x0000 (0x0028 - 0x0028)
class UInteractableInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.InteractableInterface"));
		return ptr;
	}


	void OnUse(class APawn* Pawn);
	void OnInteractableUnreachable(class APawn* Pawn);
	void OnInteractableCaptured(class APawn* Pawn);
};


// Class TBL.Inventory
// 0x03E0 (0x04E8 - 0x0108)
class UInventory : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnEquippedItemsChanged;                                   // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AInventoryItem*/                   WeaponFists;                                              // 0x0128(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AInventoryItem*/                   WeaponKnife;                                              // 0x0130(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDataTable*                                  InventoryPenaltyTable;                                    // 0x0138(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDataTable*                                  EquippedPenaltyTable;                                     // 0x0140(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BattleCryHeldTime;                                        // 0x0148(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadBattleCryHeldTime;                                 // 0x014C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadJabHeldTime;                                       // 0x0150(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadInputDoubleTapWaitTime;                            // 0x0154(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadInputWaitTime;                                     // 0x0158(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x015C(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    ProjectileStarted;                                        // 0x0160(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    ProjectileStopped;                                        // 0x0170(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInventoryItemDamaged;                                   // 0x0180(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInventoryItemDamageStateChanged;                        // 0x0190(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnItemStackChanged;                                       // 0x01A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnAddedToInventoryChanged;                                // 0x01B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMountingHorse;                                          // 0x01C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInventorySlotsUpdated;                                  // 0x01D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBattleCryStarted;                                       // 0x01E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBattleCryFinished;                                      // 0x01F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInventoryActionFailed;                                  // 0x0200(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnProjectileHitPassiveShield;                             // 0x0210(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              ItemToUse;                                                // 0x0220(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bLoadoutSpawned;                                          // 0x0228(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0229(0x0007) MISSED OFFSET
	struct FLoadout                                    SpawnedLoadout;                                           // 0x0230(0x0038) (CPF_Net, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	class UObject*                                     ObjectForItemLoad;                                        // 0x0268(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bDisableAttackInputs : 1;                                 // 0x0270(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0271(0x0007) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnDisabledAttackInput;                                    // 0x0278(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              BattleCryHeldStartTime;                                   // 0x0288(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadBattleCryHeldStartTime;                            // 0x028C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EGamepadBattleCryState                             GamepadBattleCryState;                                    // 0x0290(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0291(0x0003) MISSED OFFSET
	int                                                GamepadBattleCryPressedCount;                             // 0x0294(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadHorseBattleCryHeldStartTime;                       // 0x0298(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EGamepadBattleCryState                             GamepadHorseBattleCryState;                               // 0x029C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x029D(0x0003) MISSED OFFSET
	int                                                GamepadHorseBattleCryPressedCount;                        // 0x02A0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadWaitStabStartTime;                                 // 0x02A4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadWaitOverheadStartTime;                             // 0x02A8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadJabHeldStartTime;                                  // 0x02AC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadWaitRightDPadStartTime;                            // 0x02B0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadRightDPadPressedCount;                             // 0x02B4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicatedArray_AInventoryItemPtr          InventorySlots;                                           // 0x02B8(0x0020) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FReplicatedArray_AInventoryItemPtr          DualWieldOffhandItems;                                    // 0x02D8(0x0020) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FReplicatedArray_AInventoryItemPtr          AmmoItems;                                                // 0x02F8(0x0020) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<class AInventoryItem*>                      EquippedItems;                                            // 0x0318(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AInventoryItem*>                      ItemsToEquip;                                             // 0x0328(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AInventoryItem*                              ItemToReload;                                             // 0x0338(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FWeaponAbilityGrant>                 AbilitySlots;                                             // 0x0340(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AInventoryItem*                              CustomizationItemToEquip;                                 // 0x0350(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWantsToEquipShield;                                      // 0x0358(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWantsToSuicide;                                          // 0x0359(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKillReason                                        SuicideReason;                                            // 0x035A(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x5];                                       // 0x035B(0x0005) MISSED OFFSET
	struct FReplicated_Bool                            bIsUnequippingOnMount;                                    // 0x0360(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsEquippingItem;                                         // 0x0378(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsAddingItem;                                            // 0x0379(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsPickingUpItem;                                         // 0x037A(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWasKilled;                                               // 0x037B(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsReloading;                                             // 0x037C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EWeaponAbilitySlotKey                              DashPressed_Ability;                                      // 0x037D(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EWeaponAbilitySlotKey                              HorseDashPressed_Ability;                                 // 0x037E(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EWeaponAbilitySlotKey                              ShovePressed_Ability;                                     // 0x037F(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass* /*AInventoryItem*/                   KnifeClass;                                               // 0x0380(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<EWeaponAbilitySlotKey, struct FName>          Keybinds;                                                 // 0x0388(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, EWeaponAbilitySlotKey>          KeybindToSlot;                                            // 0x03D8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, EInventoryItemSlot>             InventoryKeybindToSlot;                                   // 0x0428(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<EEquippedHand>                              HandPriority;                                             // 0x0478(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<EInventoryItemSlot>                         EquipPriority;                                            // 0x0488(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<EInventoryItemSlot>                         NextPrevEquipExclusions;                                  // 0x0498(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<EInventoryItemSlot>                         PreviousEquippedSlots;                                    // 0x04A8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKeyPressedParams>                   KeyPressedAbility;                                        // 0x04B8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass* /*AInventoryItem*/                   NoveltyItemClass;                                         // 0x04C8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EFaction                                           Faction;                                                  // 0x04D0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EInventoryItemSlot                                 OffHandEquippedOnDrop;                                    // 0x04D1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0xE];                                       // 0x04D2(0x000E) MISSED OFFSET
	float                                              LastTriedBandageWorldTimeSeconds;                         // 0x04E0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BandageRefillDisplayDuration;                             // 0x04E4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.Inventory"));
		return ptr;
	}


	void UnequipCustomizationItem();
	void UnequipAllItems(bool bImmediately, bool bPlayUnequip);
	void SwitchToBrokenItem(class AInventoryItem* Item);
	void SwitchInventoryItem();
	void StabPressed();
	void SlashPressed();
	bool ShowBandageRefillActors();
	void SetObjectForItemLoad(class UObject* Object);
	void ServerSetObjectForItemLoad(class UObject* Object);
	void ServerDebugSetAmmo(int Ammo);
	class AInventoryItem* RemoveItem(EInventoryItemSlot Slot, bool bEndAttack);
	void RefillItems(TArray<class UClass* /*AInventoryItem*/> ItemsToRefill, bool RefillAllAmmoItems, bool UseStackCountFromItem, int StacksToAdd, EPickupEquipOptions EquipOptions, TArray<class AInventoryItem*>* OutGrantedItems);
	void QueueWeaponFlourish();
	void PickupTornOffItem(class UClass* /*AInventoryItem*/ ItemClass);
	void PickupItem(class AInventoryItem* Item, int StackCountToAdd, EPickupEquipOptions EquipOptions, class AActor* Initiator, bool bIgnoreStateCheck, bool bGiveWeapon);
	void OverheadPressed();
	void OnRep_IsUnequippingOnMount();
	void OnRep_InventorySlots();
	void OnRep_DualWieldOffhands();
	void OnRep_AmmoItems();
	void OnRemoveCondition(class AActor* Actor, EConditionType Condition, class AActor* ConditionRemover);
	void OnKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnCombatStateEvent(class AActor* Actor, const struct FName& EventName, const struct FAttackInfo& EventAttackInfo);
	void OnCombatStateEnd(class AActor* Actor, const struct FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void OnCombatStateBegin(class AActor* Actor, const struct FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void OnApplyCondition(class AActor* Actor, EConditionType Condition);
	bool IsShieldEquipped();
	void InventoryPrimary();
	void InventoryPrevious();
	void InventoryNext();
	void InventoryKeyPressed(EInventoryItemSlot Slot);
	void HorseBattleCryPressed();
	bool HasMissingItemsToRefill(TArray<class UClass* /*AInventoryItem*/> ItemsToRefill);
	float GetTimeSinceLastTriedBandage();
	void GetRefillItemsToGrant(TArray<class UClass* /*AInventoryItem*/> ItemsToRefill, bool RefillAllAmmoItems, bool UseStackCountFromItem, int StacksToAdd, TMap<class UClass* /*AInventoryItem*/, int>* ItemsToGrant);
	class UClass* /*AInventoryItem*/ GetNoveltyItemClass();
	struct FName GetKeybindName(EInventoryItemSlot Slot);
	TArray<class AInventoryItem*> GetInventoryItemsBySlot(EInventoryItemSlot Slot);
	class AInventoryItem* GetInventoryItemBySlot(EInventoryItemSlot Slot);
	class AInventoryItem* GetEquippedWeapon();
	TArray<class AInventoryItem*> GetEquippedItems();
	class AInventoryItem* GetEquippedItemBySlot(EInventoryItemSlot Slot);
	class AInventoryItem* GetEquippedItemByHand(EEquippedHand Hand);
	class AInventoryItem* GetDualWieldOffhand(class AInventoryItem* Item);
	float GetBattleCryHeldProgress();
	class AInventoryItem* GetAmmoItem(class AInventoryItem* Item);
	TArray<class AInventoryItem*> GetAmmoInventoryItems();
	void EquipCustomizationItem(class AInventoryItem* Item);
	void DropItemOnKilled(class AInventoryItem* Item, const struct FDeathDamageTakenEvent& DamageEvent);
	void DropItem(EInventoryItemSlot Slot, const struct FDropItemParams& Params, bool bDuringParryEvent);
	void DropAllItems();
	void DoBattlecryAbility();
	void DoBattlecry();
	void ClientUsedItem(class AInventoryItem* Item);
	void ClientIsUnequippingOnMount(bool OnMount);
	bool CanSwitchInventoryItem(const struct FName& KeyBind);
	void BroadcastProjectileHitPassiveShield(class AInventoryItem* Shield, class AInventoryItem* Projectile);
	void BroadcastInventoryItemDamaged(class AInventoryItem* Item, const struct FInventoryItemDamagedParams& Params);
	void ApplyBlockedDamage(const struct FInventoryItemDamagedParams& Params, class AInventoryItem* BlockingItem);
};


// Class TBL.InventoryItem
// 0x0E50 (0x1160 - 0x0310)
class AInventoryItem : public ATBLActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0310(0x0008) MISSED OFFSET
	int                                                Version;                                                  // 0x0318(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x031C(0x0004) MISSED OFFSET
	class USceneComponent*                             ProjectileRoot;                                           // 0x0320(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USceneComponent*                             ProjectileSmoothing;                                      // 0x0328(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        StaticMesh;                                               // 0x0330(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        StaticMesh1PShadow;                                       // 0x0338(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBoxComponent*                               ProjectileCollision;                                      // 0x0340(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USceneComponent*                             StickPoint;                                               // 0x0348(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTBLProjectileMovementComponent*             ProjectileMovement;                                       // 0x0350(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UInteractableComponent*                      Interactable;                                             // 0x0358(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkComponent*                                AudioComponent;                                           // 0x0360(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTBLParticleSystemComponent*                 WeaponSwipeParticleComponent;                             // 0x0368(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTBLParticleSystemComponent*                 WeaponThrowParticleComponent;                             // 0x0370(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<EInventoryItemSlot>                         CompatibleSlots;                                          // 0x0378(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<EEquippedHand>                              CanBeEquipped;                                            // 0x0388(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FAimAssistAttackData>                AllowedAimAssistAttacks;                                  // 0x0398(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAlwaysEnableFriction;                                    // 0x03A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAlwaysPrioritizeCloserTargets;                           // 0x03A9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOnlyTargetAllies;                                        // 0x03AA(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAlwaysScalingDistanceFrictionEnabled;                    // 0x03AB(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAlwaysFrictionInnerOnly;                                 // 0x03AC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x03AD(0x0003) MISSED OFFSET
	struct FAimAssistFrictionData                      InnerBoxFrictionData;                                     // 0x03B0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FAimAssistFrictionData                      OuterBoxFrictionData;                                     // 0x03C0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              ActivationMinDistanceOverride;                            // 0x03D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ActivationMaxDistanceOverride;                            // 0x03D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAlwaysEnableInnerBoxForgiveness;                         // 0x03D8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x03D9(0x0003) MISSED OFFSET
	float                                              MagnetismMoveSpeedModifierSelf;                           // 0x03DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MagnetismMoveSpeedModifierTarget;                         // 0x03E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FAimAssistTargetBoxData                     AimAssistTargetBoxOverrides;                              // 0x03E4(0x0020) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCannotEquipOnHorse : 1;                                  // 0x0404(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCanUseOffhandCarryable : 1;                              // 0x0404(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsDualWield : 1;                                         // 0x0404(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsWIPItem : 1;                                           // 0x0404(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bPlayEquipAnimation : 1;                                  // 0x0404(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bDisableJump : 1;                                         // 0x0404(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsShield : 1;                                            // 0x0404(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bTrackKillAchievement : 1;                                // 0x0404(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bPlayPickupAnimation : 1;                                 // 0x0405(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bUseItemOnEquip : 1;                                      // 0x0405(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bUseRangedSignificance : 1;                               // 0x0405(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      hasHealth : 1;                                            // 0x0405(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsBreakable : 1;                                         // 0x0405(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      CanBeDisarmed : 1;                                        // 0x0405(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bPlaceOnGroundWhenSwapped : 1;                            // 0x0405(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bDoNotAutoEquip : 1;                                      // 0x0405(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bShouldScaleDrawStrength : 1;                             // 0x0406(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bClickToFire : 1;                                         // 0x0406(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bAutomaticReload : 1;                                     // 0x0406(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bLoaded : 1;                                              // 0x0406(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCanProjectileStick : 1;                                  // 0x0406(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCanProjectileStickToShield : 1;                          // 0x0406(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bAlignProjectilePitchToSurfaceOnStick : 1;                // 0x0406(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bGenerateOverlapEventsWhenMovementFinished : 1;           // 0x0406(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UseRangedCrossHair : 1;                                   // 0x0407(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bTearOffOnMovementFinished : 1;                           // 0x0407(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bUseOverrideLifespan : 1;                                 // 0x0407(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      DisabledInLoadout : 1;                                    // 0x0407(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      EquipOnPickup : 1;                                        // 0x0407(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bAlwaysAutoPickup : 1;                                    // 0x0407(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bAutoPickupOwned : 1;                                     // 0x0407(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bNeedsUpdateVisualization : 1;                            // 0x0407(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      ThwackOnHit : 1;                                          // 0x0408(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bQuickThrowSpecial : 1;                                   // 0x0408(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCanAttackWhileUnequipped : 1;                            // 0x0408(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UseFirstAndThirdPersonTransformSetup : 1;                 // 0x0408(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsFakeItem : 1;                                          // 0x0408(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bUseFireAmmo : 1;                                         // 0x0408(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_Transient, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsCarryableNPCItem : 1;                                  // 0x0408(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0409(0x0007) MISSED OFFSET
	TMap<EEquippedHand, struct FInventoryAttachPointInfo> AttachPoints;                                             // 0x0410(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TArray<struct FInventoryItemAnimation>             Animation;                                                // 0x0460(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FInventoryItemAnimation>             CustomizationAnimation;                                   // 0x0470(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EInventoryType                                     ItemType;                                                 // 0x0480(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0481(0x0003) MISSED OFFSET
	float                                              EquipTime;                                                // 0x0484(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              UnequipTime;                                              // 0x0488(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x4];                                       // 0x048C(0x0004) MISSED OFFSET
	struct FWeaponAbilitySlots                         Abilities;                                                // 0x0490(0x0290) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	class UWeaponTracersBlueprint*                     TracerType;                                               // 0x0720(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UWeaponTracersBlueprint*                     AltTracerType;                                            // 0x0728(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EWeaponType                                        WeaponType;                                               // 0x0730(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0731(0x0003) MISSED OFFSET
	float                                              DamageModifier;                                           // 0x0734(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              Damage;                                                   // 0x0738(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SiegeDamage;                                              // 0x073C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ShieldDamageModifier;                                     // 0x0740(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0744(0x0004) MISSED OFFSET
	class UAttackType*                                 ThrownAttackType;                                         // 0x0748(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDamageSource*                               DamageSource;                                             // 0x0750(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementSequence*                           Knockback;                                                // 0x0758(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TurnLimitCurve;                                           // 0x0760(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 VerticalTurnLimitCurve;                                   // 0x0768(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TurnLimitScaleByDegreesTurned;                            // 0x0770(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnLimitStrength;                                        // 0x0778(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              VerticalTurnLimitStrength;                                // 0x077C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ReverseTurnLimitCurve;                                    // 0x0780(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ReverseTurnLimitStrength;                                 // 0x0788(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ESpeedPenalty                                      SpeedPenalty;                                             // 0x078C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FShieldSettings                             ShieldSettings;                                           // 0x078D(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	EMeleeAttackCategory                               MeleeAttackCategory;                                      // 0x078E(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ERangedAttackCategory                              RangedAttackCategory;                                     // 0x078F(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EBlockingCategory                                  BlockingCategory;                                         // 0x0790(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0791(0x0007) MISSED OFFSET
	class UClass* /*AInventoryItem*/                   MountedItemClass;                                         // 0x0798(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              MountedItemParent;                                        // 0x07A0(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AInventoryItem*/                   BrokenItemClass;                                          // 0x07A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AInventoryItem*/                   InheritAnimTimings;                                       // 0x07B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AnimationSpeedModifier;                                   // 0x07B8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FPickupItemSettings                         PickupItemSettings;                                       // 0x07BC(0x000C) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FUseItemSettings                            UseItemSettings;                                          // 0x07C8(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      ConstructableLimit;                                       // 0x07E0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x7];                                       // 0x07E1(0x0007) MISSED OFFSET
	class UClass* /*USpecialItemAbility*/              SpecialItemAbility;                                       // 0x07E8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<EFaction, class UClass* /*AInventoryItem*/>   OverrideItemClassByTeam;                                  // 0x07F0(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)
	TArray<struct FHorseAttackType>                    HorseAttackTypes;                                         // 0x0840(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseHorseAiming;                                          // 0x0850(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x7];                                       // 0x0851(0x0007) MISSED OFFSET
	struct FHorseAimingParams                          HorseAimingParams;                                        // 0x0858(0x00D0) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	float                                              HealthValue;                                              // 0x0928(0x0004) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DamagedPercent;                                           // 0x092C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PercentChanceToBreak;                                     // 0x0930(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0934(0x0004) MISSED OFFSET
	class UStaticMesh*                                 DamagedMesh;                                              // 0x0938(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStaticMesh*                                 DestroyedMesh;                                            // 0x0940(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EInventoryItemDamagedState                         DamagedState;                                             // 0x0948(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0949(0x0003) MISSED OFFSET
	float                                              RiposteTime;                                              // 0x094C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementSequence*                           WindupLunge;                                              // 0x0950(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementSequence*                           Lunge;                                                    // 0x0958(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementSequence*                           LungeLeft;                                                // 0x0960(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementSequence*                           LungeRight;                                               // 0x0968(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementSequence*                           HorseLunge;                                               // 0x0970(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementSequence*                           ParrySuccess;                                             // 0x0978(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementSequence*                           Blocked;                                                  // 0x0980(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementSequence*                           WasHitEarly;                                              // 0x0988(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RagdollImpulse;                                           // 0x0990(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0994(0x0004) MISSED OFFSET
	TArray<struct FWeaponGoreSlot>                     GoreActions;                                              // 0x0998(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bProjectileAttachedViaReplication : 1;                    // 0x09A8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData15[0x7];                                       // 0x09A9(0x0007) MISSED OFFSET
	class UDamageSource*                               FireDamage;                                               // 0x09B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDamageSource*                               RangedDamageSource;                                       // 0x09B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DrawStrength;                                             // 0x09C0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinDrawStrength;                                          // 0x09C4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinDrawPowerTime;                                         // 0x09C8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxDrawPowerTime;                                         // 0x09CC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EAmmoStackType                                     AmmoStackType;                                            // 0x09D0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      MaxStackCount;                                            // 0x09D1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      StackCount;                                               // 0x09D2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData16[0x5];                                       // 0x09D3(0x0005) MISSED OFFSET
	TMap<TSoftClassPtr<class UClass>, unsigned char>   OverrideMaxStackCount;                                    // 0x09D8(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<TSoftClassPtr<class UClass>, unsigned char>   OverrideStackCount;                                       // 0x0A28(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	float                                              LowAmmoPercent;                                           // 0x0A78(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       ReloadCombatState;                                        // 0x0A7C(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ReloadTime;                                               // 0x0A84(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AInventoryItem*/                   AmmoItemClass;                                            // 0x0A88(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AInventoryItem*/                   FireAmmoItemClass;                                        // 0x0A90(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AInventoryItem*/                   QuiverItemClass;                                          // 0x0A98(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       AttachAmmoSocket;                                         // 0x0AA0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       ProjectileSpawnPoint;                                     // 0x0AA8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       ThirdPersonProjectileSpawnPointOverride;                  // 0x0AB0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseThirdPersonProjectileSpawnPointOverride;              // 0x0AB8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData17[0x3];                                       // 0x0AB9(0x0003) MISSED OFFSET
	struct FVector                                     ProjectileSpawnOffset;                                    // 0x0ABC(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               UseProjectileSpawnOffsetAsProjectileOrigin;               // 0x0AC8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData18[0x3];                                       // 0x0AC9(0x0003) MISSED OFFSET
	struct FName                                       FakeClientSpawnPoint;                                     // 0x0ACC(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ProjectileInitialRotation;                                // 0x0AD4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ProjectileRotationRate;                                   // 0x0AD8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRotateProjectileCollision;                               // 0x0ADC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData19[0x3];                                       // 0x0ADD(0x0003) MISSED OFFSET
	class UCurveFloat*                                 ProjectileRotationCurve;                                  // 0x0AE0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ProjectileDrag;                                           // 0x0AE8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData20[0x4];                                       // 0x0AEC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 ProjectileDrawDamageScale;                                // 0x0AF0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ProjectileDistanceDamageScale;                            // 0x0AF8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BounceVelocityModifier;                                   // 0x0B00(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BounceDamageWorld;                                        // 0x0B04(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BounceDamageParried;                                      // 0x0B08(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AimPenaltyModifier;                                       // 0x0B0C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCanStickPlayersToWall : 1;                               // 0x0B10(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData21[0x3];                                       // 0x0B11(0x0003) MISSED OFFSET
	float                                              StickPlayersToWallDistance;                               // 0x0B14(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FArrowCamSettings                           ArrowCamSettings;                                         // 0x0B18(0x0024) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FWorldHitAngleRange                         WorldHitAngleRange;                                       // 0x0B3C(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              WorldHitStartPercentage;                                  // 0x0B4C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              WorldHitStopPercentage;                                   // 0x0B50(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FAIRanges                                   AIRanges;                                                 // 0x0B54(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	ECharacterSignificanceLevel                        Significance;                                             // 0x0B60(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FInventoryItemState                         State;                                                    // 0x0B61(0x0003) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_Transient, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	EInventoryItemSlot                                 Slot;                                                     // 0x0B64(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData22[0x3];                                       // 0x0B65(0x0003) MISSED OFFSET
	struct FReplicated_FName                           TornOffName;                                              // 0x0B68(0x0018) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Int32                           InvocationId;                                             // 0x0B80(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USceneComponent*                             FirstPersonTransformRoot;                                 // 0x0B98(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USceneComponent*                             ThirdPersonTransformRoot;                                 // 0x0BA0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              bDropOffOnCharacterHitTime;                               // 0x0BA8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData23[0x4];                                       // 0x0BAC(0x0004) MISSED OFFSET
	struct FInventoryItemDisplayInfo                   DisplayInfo;                                              // 0x0BB0(0x0040) (CPF_Edit, CPF_BlueprintVisible, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               InventoryItemAKEvent_Action;                              // 0x0BF0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               InventoryItemAKEvent_Impact;                              // 0x0BF8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               InventoryItemAKEvent_ImpactThrown;                        // 0x0C00(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BattleCryOverrideAkEvent;                                 // 0x0C08(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PickupItemSound;                                          // 0x0C10(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PickupManyItemSound;                                      // 0x0C18(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FProjectileSounds                           ProjectileSounds;                                         // 0x0C20(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FWeaponMaterialSoundConfig                  WeaponActionMaterials;                                    // 0x0C48(0x0058) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnAnimationSetChanged;                                    // 0x0CA0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnAddedToInventoryChanged;                                // 0x0CB0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnOwnerChanged;                                           // 0x0CC0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDropped;                                                // 0x0CD0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnThrown;                                                 // 0x0CE0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPreThrown;                                              // 0x0CF0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSpawnFakeClient;                                        // 0x0D00(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSetAttached;                                            // 0x0D10(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBattleCryTriggered;                                     // 0x0D20(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnProjectileHitEvent;                                     // 0x0D30(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              GlobalLifespan;                                           // 0x0D40(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SwingWindDistance;                                        // 0x0D44(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              OverrideLifespan;                                         // 0x0D48(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EWeaponTag                                         CustomizationWeaponTag;                                   // 0x0D4C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EItemSoundPolicy                                   ItemSoundPolicy;                                          // 0x0D4D(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsCustomizationApplied : 1;                              // 0x0D4E(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData24[0x1];                                       // 0x0D4F(0x0001) MISSED OFFSET
	struct FParryHitLocation                           ParryHitLocation;                                         // 0x0D50(0x000C) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCanBeLitOnFire : 1;                                      // 0x0D5C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bShouldStartOnFire : 1;                                   // 0x0D5C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsOnFire : 1;                                            // 0x0D5C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_Transient, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsSlashCounteredByStab : 1;                              // 0x0D5C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsSpecialStabAnimation : 1;                              // 0x0D5C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsSpecialVerticalAnimation : 1;                          // 0x0D5C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bShouldSpecialIgnoreIsFacingTarget : 1;                   // 0x0D5C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCanFistsParry : 1;                                       // 0x0D5C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData25[0x3];                                       // 0x0D5D(0x0003) MISSED OFFSET
	struct FFakeClientBlendParams                      FakeClientBlendParams;                                    // 0x0D60(0x0070) (CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData26[0x10];                                      // 0x0DD0(0x0010) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       ProjectileMovementInitiator;                              // 0x0DE0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSoundSwitchEntry                           RecentAttackReleaseWeaponActionSwitch;                    // 0x0DE8(0x0020) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              AttachedAmmoItem;                                         // 0x0E08(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSetOnFire;                                              // 0x0E10(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSetOffFire;                                             // 0x0E20(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData27[0x8];                                       // 0x0E30(0x0008) MISSED OFFSET
	struct FDataTableRowSelection                      NoveltyScore;                                             // 0x0E38(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData28[0x8];                                       // 0x0E50(0x0008) MISSED OFFSET
	struct FReplicated_FResetToTransform               ResetToTransform;                                         // 0x0E58(0x0028) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FReplicated_FReplicateDrop                  ReplicateDrop;                                            // 0x0E80(0x0038) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FReplicated_FProjectileHitParams            ReplicatedProjectileHit;                                  // 0x0EB8(0x0040) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                LastStackCount;                                           // 0x0EF8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     DebugPreviousLocation;                                    // 0x0EFC(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UInventory*                                  Inventory;                                                // 0x0F08(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FInventoryAttachPointInfo                   NoAttachPoint;                                            // 0x0F10(0x0024) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FInventoryAttachPointInfo                   DefaultPrimaryAttachPoint;                                // 0x0F34(0x0024) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FInventoryAttachPointInfo                   DefaultOffHandAttachPoint;                                // 0x0F58(0x0024) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData29[0x4];                                       // 0x0F7C(0x0004) MISSED OFFSET
	class UWeaponTracers*                              CurrentWeaponTracers;                                     // 0x0F80(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bPendingHiddenInGame : 1;                                 // 0x0F88(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bMatchStateHidden : 1;                                    // 0x0F88(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsAnimating : 1;                                         // 0x0F88(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bAttachAmmo : 1;                                          // 0x0F88(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      AddedToInventory : 1;                                     // 0x0F88(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_Transient, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bWasThrown : 1;                                           // 0x0F88(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bPlacedInWorld : 1;                                       // 0x0F88(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bShouldAttachRagdoll : 1;                                 // 0x0F88(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bFakeClientStickPoint : 1;                                // 0x0F89(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData30[0x2];                                       // 0x0F8A(0x0002) MISSED OFFSET
	struct FVector                                     AttachRadollLocation;                                     // 0x0F8C(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData31[0x8];                                       // 0x0F98(0x0008) MISSED OFFSET
	struct FTransform                                  PreviousArmBase;                                          // 0x0FA0(0x0030) (CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FTransform                                  PreviousComponentTrs;                                     // 0x0FD0(0x0030) (CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              PreviousAimPitch;                                         // 0x1000(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PrevAnimPercent;                                          // 0x1004(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FMulticastScriptDelegate                    OnEquipped;                                               // 0x1008(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FMulticastScriptDelegate                    OnStartUseItem;                                           // 0x1018(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FMulticastScriptDelegate                    OnUseItem;                                                // 0x1028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TSet<class ATBLCharacter*>                         BlacklistedPlayers;                                       // 0x1038(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               AnimTimingProperties;                                     // 0x1088(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AInventoryItem*                              FireAmmoItem;                                             // 0x1098(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FSimulatedProjectile                        SimulatedProjectile;                                      // 0x10A0(0x0018) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData32[0x18];                                      // 0x10B8(0x0018) MISSED OFFSET
	struct FTransform                                  SkeletalMeshTransform;                                    // 0x10D0(0x0030) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FTransform                                  DefaultShieldCollisionRelativeTransform;                  // 0x1100(0x0030) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<class ATBLCharacterBase*>                   FakeClientCollisionEnabled;                               // 0x1130(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATBLCharacterBase>            CarriedCharacter;                                         // 0x1140(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData33[0x18];                                      // 0x1148(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.InventoryItem"));
		return ptr;
	}


	void UpdateVisualization(float DeltaTime);
	void StartSimulatedProjectile(int AttackID);
	bool ShouldShowInUI();
	bool ShouldDropOnDowned();
	bool ShouldCustomizePlacedInWorldItem(class ATBLCharacter* OwningCharacter);
	bool ShouldAttachRagdoll();
	void SetupHapticsForPS5OnSpawningAttachment(class AController* InController);
	void SetUnequipped();
	void SetStackCount(int Count);
	void SetRecentAttackReleaseWeaponActionSwitch(const struct FSoundSwitchEntry& Entry);
	void SetPendingHiddenInGame(bool bPendingHiddenInGame);
	void SetOverrideLifeSpan(bool EnableOverride, float NewOverrideLifespan);
	void SetOnFire();
	void SetOffFire();
	void SetInactive();
	void SetHealth(float Health);
	void SetDamagedState(EInventoryItemDamagedState NewDamagedState);
	void SetAddedToInventory(bool inAddedToInventory);
	void ResetMaxStackCount();
	void ResetItemToTransform(const struct FTransform& Transform);
	void RemoveBlacklistedPawn(class ATBLCharacter* Player);
	void ReloadThrownWeapon();
	void PlayImpactEvent(const struct FSoundSwitchEntry& SoundSwitch);
	void PlayEquipAnimation();
	int PlayActionEvent(const struct FSoundSwitchEntry& SoundSwitch);
	void PerformFinishedMovementOverlap();
	bool OverridePickupEvent(class ATBLCharacter* Character, bool bGiveWeapon, bool bIsAutoPickup);
	void OnWasParried(class ATBLCharacter* ParryingCharacter);
	void OnUseItemEnded(class AActor* Actor, const struct FName& CombatState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatStateBP);
	void OnUnequipComplete(class ATBLCharacter* Character);
	void OnUnequipCombatStateEnd(class AActor* Actor, const struct FName& CombatState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatStateBP);
	void OnRep_UseFireAmmo();
	void OnRep_TornOffName();
	void OnRep_State();
	void OnRep_StackCount();
	void OnRep_ResetToTransform();
	void OnRep_ProjectileHit();
	void OnRep_MountedItemParent();
	void OnRep_IsOnFire();
	void OnRep_HealthValue();
	void OnRep_Drop();
	void OnRep_AddedToInventory();
	void OnReloadCombatStateEnd(class AActor* Actor, const struct FName& CombatState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatStateBP);
	void OnProjectileHitTarget(const struct FHitResult& Hit);
	void OnProjectileHit(const struct FHitResult& HitResult);
	void OnProjectileBounce(const struct FHitResult& Hit, bool bParried);
	void OnPlayerMeshChanged(class USkeletalMeshComponent* OldMesh, class USkeletalMeshComponent* NewMesh);
	void OnPlayActionEvent(const struct FSoundSwitchEntry& SoundSwitch);
	void OnPickupEnded(class AActor* Actor, const struct FName& CombatState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatStateBP);
	void OnMovementStarted();
	void OnMovementFinished();
	void OnMeleeSuccess(class ATBLCharacter* DamagedCharacter);
	void OnLocalPlayerStateReplicated(class APlayerState* PlayerState);
	void OnInitialize();
	void OnFakeClientProjectileHit(const struct FHitResult& HitResult);
	void OnEquipComplete();
	void OnEquipCombatStateEnd(class AActor* Actor, const struct FName& CombatState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatStateBP);
	void OnDamaged(const struct FInventoryItemDamagedParams& Params);
	void OnAttackInterrupted(int AttackID);
	void OnAttachedActorKilled(const struct FDeathDamageTakenEvent& Event);
	void OnAttachedActorDestroyed(class AActor* DestroyedActor);
	void OnAnimNotifyWeaponDetach(class UTBLCharacterAnimInstance* AnimBP);
	void OnAnimNotifyWeaponAttach(class UTBLCharacterAnimInstance* AnimBP);
	void OnAnimNotifyUseItem(class UTBLCharacterAnimInstance* AnimBP);
	void NetMulticastOnAddToInventoryItemPool();
	void NetMulticastFastSharedReplication(const struct FFastSharedProperties_InventoryItem& Properties);
	void LogShieldInfo(const struct FString& LogText);
	bool IsTwoHandedWeapon();
	bool IsSimulatingPhysics();
	bool IsLowAmmo();
	bool IsDualWieldOffhandEquipped();
	bool IsAddedToInventory();
	void InitializeStackCountOnSpawn(class ATBLCharacter* CharacterOwner);
	void InitializeProjectileMovement(class AActor* Initiator, float InitialSpeed, bool bFakeClient);
	void InitializeGoreHead(class ATBLCharacter* Character, const struct FGoreHeadParams& Params, const struct FVector& Impulse);
	void InitDebugPreviousLocation();
	class UShapeComponent* GetTeamProjectileCollision();
	int GetStackCount();
	void GetSpecialAttackWindupSwitchOverride(struct FString* SwitchState);
	class USkeletalMeshComponent* GetSkeletalMesh();
	class UPrimitiveComponent* GetShieldCollision();
	class UPrimitiveComponent* GetPhysicsMesh();
	bool GetPendingHiddenInGame();
	class ATBLCharacter* GetOwningPawn();
	class UStaticMeshComponent* GetMesh();
	float GetMaxHealth();
	EWeaponMaterial GetMaterialByWeaponAction(bool IsAttacking, bool IsDefending, const struct FName& AttackName);
	float GetHealthPercent();
	float GetHealth();
	bool GetEquippableOnHorse();
	struct FInventoryItemDisplayInfo GetDisplayInfoForFaction(EFaction Faction);
	float GetDamageSourcePenetration();
	struct FString GetDamageSourceName(struct FText* NameText);
	class ATBLCharacterBase* GetCarriedCharacter();
	float GetBaseDamage(const struct FName& AttackName);
	void GetAttachRagdollParams(class ATBLCharacter* Character, const struct FDeathDamageTakenEvent& DamageEvent, struct FAttachRagdollParams* AttachRagdollParams);
	class USceneComponent* GetAttachRagdollComponent();
	void FinishUnequippingOnAnimNotify(class ATBLCharacter* Character);
	void EventUsePressed(class APawn* Pawn, class UInteractableComponent* InteractableComponent);
	void EnableCollisionForFakeClient(class ATBLCharacterBase* Character);
	void DisableCollisionForFakeClient();
	void DestroyFakeClient();
	void ClientToBeEquipped();
	void ClientOnItemUnequipped();
	void ClientOnItemEquipped(class AActor* NewOwner);
	void CheckStickPlayersToWall(class ATBLCharacter* KilledChar);
	bool CanUseItem();
	bool CanPickup(class APawn* Pawn);
	bool CannotAutoPickup(class APawn* Pawn);
	void BroadcastAttachRagdoll(const struct FVector& AttachLocation);
	void BounceOnProjectileHit(const struct FHitResult& HitResult, class AInventoryItem* BlockingItem, float InBounceVelocityModifier);
	void AttachSimulatedProjectileOnKill(const struct FHitResult& HitResult);
	void ApplyImpulseToGoreHead(const struct FVector& Impulse);
	void ApplyDamage(float InDamage);
	void AddToStackCount(int Delta);
	void AddIgnoreActors(class AActor* Initiator);
	void AddBlacklistedPawn(class ATBLCharacter* Player);
};


// Class TBL.InvocationActorComponent
// 0x0040 (0x0148 - 0x0108)
class UInvocationActorComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	struct FReplicated_FInvocationInfo                 Info;                                                     // 0x0118(0x0030) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.InvocationActorComponent"));
		return ptr;
	}


	void OnRep_Info();
};


// Class TBL.InvocationComponentInterface
// 0x0000 (0x0028 - 0x0028)
class UInvocationComponentInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.InvocationComponentInterface"));
		return ptr;
	}

};


// Class TBL.Quest
// 0x0000 (0x0028 - 0x0028)
class UQuest : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.Quest"));
		return ptr;
	}


	void UnbindOnProgressChanged(const struct FScriptDelegate& Delegate);
	void UnbindOnCompleted(const struct FScriptDelegate& Delegate);
	bool IsComplete();
	bool IsClientAuthoritative();
	struct FQuestReward GetReward();
	float GetProgress();
	void BindOnProgressChanged(const struct FScriptDelegate& Delegate);
	void BindOnCompleted(const struct FScriptDelegate& Delegate);
};


// Class TBL.QuestDisplayable
// 0x0000 (0x0028 - 0x0028)
class UQuestDisplayable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.QuestDisplayable"));
		return ptr;
	}


	struct FText GetTitle();
	struct FText GetScoreText();
	struct FText GetMaxScoreText();
	struct FSlateBrush GetImage();
	struct FSlateBrush GetIcon();
	struct FText GetGoalText();
	EQuestDifficulty GetDifficulty();
	struct FText GetDescription();
};


// Class TBL.QuestReplicatable
// 0x0000 (0x0028 - 0x0028)
class UQuestReplicatable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.QuestReplicatable"));
		return ptr;
	}

};


// Class TBL.IsActiveRiposte
// 0x0000 (0x0150 - 0x0150)
class UIsActiveRiposte : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsActiveRiposte"));
		return ptr;
	}

};


// Class TBL.IsAlive
// 0x0000 (0x0150 - 0x0150)
class UIsAlive : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsAlive"));
		return ptr;
	}

};


// Class TBL.IsAttackType
// 0x0008 (0x0158 - 0x0150)
class UIsAttackType : public UCondition
{
public:
	struct FName                                       AttackTypeName;                                           // 0x0150(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsAttackType"));
		return ptr;
	}

};


// Class TBL.IsCombatState
// 0x0008 (0x0158 - 0x0150)
class UIsCombatState : public UCondition
{
public:
	struct FName                                       CombatState;                                              // 0x0150(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsCombatState"));
		return ptr;
	}

};


// Class TBL.IsCounter
// 0x0000 (0x0150 - 0x0150)
class UIsCounter : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsCounter"));
		return ptr;
	}

};


// Class TBL.IsCounterSuccess
// 0x0000 (0x0150 - 0x0150)
class UIsCounterSuccess : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsCounterSuccess"));
		return ptr;
	}

};


// Class TBL.IsCrouched
// 0x0000 (0x0150 - 0x0150)
class UIsCrouched : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsCrouched"));
		return ptr;
	}

};


// Class TBL.IsEnemy
// 0x0008 (0x0158 - 0x0150)
class UIsEnemy : public UCondition
{
public:
	bool                                               bDeadPawnsAreEnemy;                                       // 0x0150(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsEnemy"));
		return ptr;
	}

};


// Class TBL.IsHorseMovementState
// 0x0010 (0x0160 - 0x0150)
class UIsHorseMovementState : public UCondition
{
public:
	EHorseMovementStateOp                              Operator;                                                 // 0x0150(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0151(0x0003) MISSED OFFSET
	struct FName                                       MovementState;                                            // 0x0154(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x015C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsHorseMovementState"));
		return ptr;
	}

};


// Class TBL.IsLookingDown
// 0x0000 (0x0150 - 0x0150)
class UIsLookingDown : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsLookingDown"));
		return ptr;
	}

};


// Class TBL.IsMovementDirection
// 0x0018 (0x0168 - 0x0150)
class UIsMovementDirection : public UCondition
{
public:
	TArray<TEnumAsByte<EMovementDirection>>            ValidDirections;                                          // 0x0150(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseInputDirection;                                       // 0x0160(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseLastNonZero;                                          // 0x0161(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0162(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsMovementDirection"));
		return ptr;
	}

};


// Class TBL.IsMovementMode
// 0x0008 (0x0158 - 0x0150)
class UIsMovementMode : public UCondition
{
public:
	TEnumAsByte<EMovementMode>                         MovementMode;                                             // 0x0150(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsMovementMode"));
		return ptr;
	}

};


// Class TBL.IsMoving
// 0x0000 (0x0150 - 0x0150)
class UIsMoving : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsMoving"));
		return ptr;
	}

};


// Class TBL.IsNot
// 0x0008 (0x0158 - 0x0150)
class UIsNot : public UCondition
{
public:
	class UCondition*                                  Not;                                                      // 0x0150(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsNot"));
		return ptr;
	}

};


// Class TBL.IsRiposte
// 0x0000 (0x0150 - 0x0150)
class UIsRiposte : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsRiposte"));
		return ptr;
	}

};


// Class TBL.IsSelf
// 0x0000 (0x0150 - 0x0150)
class UIsSelf : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsSelf"));
		return ptr;
	}

};


// Class TBL.IsStat
// 0x0008 (0x0158 - 0x0150)
class UIsStat : public UCondition
{
public:
	EStat                                              Stat;                                                     // 0x0150(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EComparisonType>                       ComparisonType;                                           // 0x0151(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0152(0x0002) MISSED OFFSET
	float                                              Value;                                                    // 0x0154(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsStat"));
		return ptr;
	}

};


// Class TBL.IsType
// 0x0040 (0x0190 - 0x0150)
class UIsType : public UCondition
{
public:
	int                                                Version;                                                  // 0x0150(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0154(0x0004) MISSED OFFSET
	TArray<struct FName>                               TypeNames;                                                // 0x0158(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*UObject*/>                  CachedTypes;                                              // 0x0168(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*AActor*/>                   Types;                                                    // 0x0178(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AActor*/                           Type;                                                     // 0x0188(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.IsType"));
		return ptr;
	}

};


// Class TBL.ItemPreVisualizationInterface
// 0x0000 (0x0028 - 0x0028)
class UItemPreVisualizationInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ItemPreVisualizationInterface"));
		return ptr;
	}


	void EnablePreVisualization();
	void DisablePreVisualization();
};


// Class TBL.ItemPreVisualizationInterfaceHelper
// 0x0050 (0x0078 - 0x0028)
class UItemPreVisualizationInterfaceHelper : public UObject
{
public:
	TMap<TWeakObjectPtr<class UObject>, class UClass* /*AInventoryItem*/> VisualizerListeners;                                      // 0x0028(0x0050) (CPF_UObjectWrapper, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ItemPreVisualizationInterfaceHelper"));
		return ptr;
	}


	void RemoveItemVisualizerListener(class UObject* WorldContextObject, class UObject* NewListener);
	void PlayerPossessedPawn(class APawn* NewPawn);
	void OnKilled(const struct FDeathDamageTakenEvent& Event);
	void CharacterEquippedItemsChanged();
	void AddItemVisualizerListener(class UObject* WorldContextObject, class UObject* NewListener, class UClass* /*AInventoryItem*/ Item);
};


// Class TBL.ItemReward
// 0x0018 (0x0060 - 0x0048)
class UItemReward : public UProgressionReward
{
public:
	TArray<struct FItemReference>                      Items;                                                    // 0x0048(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                Quantity;                                                 // 0x0058(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ItemReward"));
		return ptr;
	}

};


// Class TBL.ItemTableReward
// 0x0008 (0x0050 - 0x0048)
class UItemTableReward : public UProgressionReward
{
public:
	bool                                               bMarketable;                                              // 0x0048(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bTradeable;                                               // 0x0049(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x004A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ItemTableReward"));
		return ptr;
	}

};


// Class TBL.ItemTableRewardByAppId
// 0x0020 (0x0068 - 0x0048)
class UItemTableRewardByAppId : public UProgressionReward
{
public:
	TArray<struct FItemReference>                      Items;                                                    // 0x0048(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bMarketable;                                              // 0x0058(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bTradeable;                                               // 0x0059(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x005A(0x0002) MISSED OFFSET
	int                                                AppId;                                                    // 0x005C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EOnlineItemUnlockType>                 ItemUnlockType;                                           // 0x0060(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0061(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ItemTableRewardByAppId"));
		return ptr;
	}

};


// Class TBL.KeybindingWidgetInterface
// 0x0000 (0x0028 - 0x0028)
class UKeybindingWidgetInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KeybindingWidgetInterface"));
		return ptr;
	}


	void SetKeybinding(const struct FKey& Key, float Height, const struct FVector2D& IconSize);
};


// Class TBL.KeyboardFocusInterface
// 0x0000 (0x0028 - 0x0028)
class UKeyboardFocusInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KeyboardFocusInterface"));
		return ptr;
	}


	class UWidget* K2_GetFocusWidget();
};


// Class TBL.KillLowHealthTask
// 0x0008 (0x0058 - 0x0050)
class UKillLowHealthTask : public UBaseKillTask
{
public:
	float                                              RequiredMaxHealth;                                        // 0x0050(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KillLowHealthTask"));
		return ptr;
	}

};


// Class TBL.KillLowHealthWorker
// 0x0000 (0x0110 - 0x0110)
class UKillLowHealthWorker : public UBaseKillWorker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KillLowHealthWorker"));
		return ptr;
	}


	void OnStatChanged(class AActor* Actor, EStat StatType, const struct FStatEntry& Stat, float DeltaValue);
	void OnPawnPossessed(class APawn* Pawn, class ATBLPlayerController* Controller);
};


// Class TBL.KillWithWeaponTask
// 0x0010 (0x0060 - 0x0050)
class UKillWithWeaponTask : public UBaseKillTask
{
public:
	TArray<class UClass* /*AInventoryItem*/>           WeaponClasses;                                            // 0x0050(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KillWithWeaponTask"));
		return ptr;
	}

};


// Class TBL.KillWithWeaponWorker
// 0x0000 (0x0110 - 0x0110)
class UKillWithWeaponWorker : public UBaseKillWorker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KillWithWeaponWorker"));
		return ptr;
	}

};


// Class TBL.KillXAsClassTask
// 0x0010 (0x0060 - 0x0050)
class UKillXAsClassTask : public UBaseKillTask
{
public:
	TArray<struct FString>                             Loadout;                                                  // 0x0050(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KillXAsClassTask"));
		return ptr;
	}

};


// Class TBL.KillXAsClassWorker
// 0x0010 (0x0120 - 0x0110)
class UKillXAsClassWorker : public UBaseKillWorker
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0110(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KillXAsClassWorker"));
		return ptr;
	}

};


// Class TBL.KillXFromDistanceTask
// 0x0010 (0x0060 - 0x0050)
class UKillXFromDistanceTask : public UBaseKillTask
{
public:
	float                                              MinDistanceMeters;                                        // 0x0050(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	class UClass* /*AInventoryItem*/                   ProjectileClass;                                          // 0x0058(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KillXFromDistanceTask"));
		return ptr;
	}

};


// Class TBL.KillXFromDistanceWorker
// 0x0010 (0x0120 - 0x0110)
class UKillXFromDistanceWorker : public UBaseKillWorker
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0110(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KillXFromDistanceWorker"));
		return ptr;
	}

};


// Class TBL.KillXSiegeWeaponTask
// 0x0000 (0x0050 - 0x0050)
class UKillXSiegeWeaponTask : public UBaseKillTask
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KillXSiegeWeaponTask"));
		return ptr;
	}

};


// Class TBL.KillXSiegeWeaponWorker
// 0x0000 (0x0110 - 0x0110)
class UKillXSiegeWeaponWorker : public UBaseKillWorker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KillXSiegeWeaponWorker"));
		return ptr;
	}

};


// Class TBL.KillXTask
// 0x0000 (0x0050 - 0x0050)
class UKillXTask : public UBaseKillTask
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KillXTask"));
		return ptr;
	}

};


// Class TBL.KillXWithDamage
// 0x0000 (0x0110 - 0x0110)
class UKillXWithDamage : public UBaseKillWorker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KillXWithDamage"));
		return ptr;
	}


	void PlayerCausedFallDamage(const struct FDeathDamageTakenEvent& DeathEvent, class ATBLPlayerController* Controller);
};


// Class TBL.KillXWithDamageTask
// 0x0010 (0x0060 - 0x0050)
class UKillXWithDamageTask : public UBaseKillTask
{
public:
	struct FString                                     DamageTypeName;                                           // 0x0050(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KillXWithDamageTask"));
		return ptr;
	}

};


// Class TBL.KillXWorker
// 0x0000 (0x0110 - 0x0110)
class UKillXWorker : public UBaseKillWorker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KillXWorker"));
		return ptr;
	}

};


// Class TBL.Ladder
// 0x0170 (0x0480 - 0x0310)
class ALadder : public ATBLActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0310(0x0008) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnLadderStateChanged;                                     // 0x0318(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FBlendParams                                LadderMountBlend;                                         // 0x0328(0x0024) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FBlendParams                                LadderDismountBlend;                                      // 0x034C(0x0024) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bStartEnabled;                                            // 0x0370(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0371(0x0007) MISSED OFFSET
	struct FReplicated_Bool                            bLadderEnabled;                                           // 0x0378(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAnimMontage*                                LadderMontage;                                            // 0x0390(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LadderHeight;                                             // 0x0398(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     AttachOffset;                                             // 0x039C(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    AttachRotation;                                           // 0x03A8(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              MoveDownAngle;                                            // 0x03B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TurnLimit;                                                // 0x03B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxMountAngle;                                            // 0x03BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxMountDist;                                             // 0x03C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanDismountOffTop;                                       // 0x03C4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanDismountOffBottom;                                    // 0x03C5(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x2];                                       // 0x03C6(0x0002) MISSED OFFSET
	struct FVector                                     MountPointBottom;                                         // 0x03C8(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     MountPointTop;                                            // 0x03D4(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     DismountPointBottom;                                      // 0x03E0(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     DismountPointTop;                                         // 0x03EC(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LadderBottom;                                             // 0x03F8(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LadderTop;                                                // 0x0404(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USceneComponent*                             SceneComponent;                                           // 0x0410(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UInteractableComponent*                      Interactable;                                             // 0x0418(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UBoxComponent*                               JumpCollider;                                             // 0x0420(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class ATBLCharacter*>                       JumpOverlappingCharacters;                                // 0x0428(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class APawn*>                               PawnList;                                                 // 0x0438(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class APawn*                                       PawnToIgnoreJump;                                         // 0x0448(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTimerHandle                                PawnToIgnoreJumpHandle;                                   // 0x0450(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UNavLinkCustomComponent*                     SmartLinkComp;                                            // 0x0458(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSmartLinkIsRelevant;                                     // 0x0460(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0461(0x0007) MISSED OFFSET
	class USceneComponent*                             SmartLinkTop;                                             // 0x0468(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USceneComponent*                             SmartLinkBottom;                                          // 0x0470(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<ENavLinkDirection>                     SmartLinkDirection;                                       // 0x0478(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0479(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.Ladder"));
		return ptr;
	}


	bool WantsDismountOnThisEnd(bool bTop);
	void UsePressed(class APawn* Pawn, class UInteractableComponent* InteractableComponent);
	void OnUseSyncFailed(class APawn* Pawn, class UInteractableComponent* InteractableComponent);
	void OnRep_LadderEnabled();
	void OnMovementChangedInJumpCollider(const struct FName& MovementState);
	void MountLadder(class APawn* Pawn, bool bIsJumping);
	bool IsLadderEnabled();
	void EventMountLadder(class APawn* Pawn);
	void EndJumpOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void EnableLadder();
	void DisableLadder();
	bool CanMountLadder(class APawn* Pawn);
	void BeginJumpOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo);
};


// Class TBL.LineTracers
// 0x0090 (0x00F0 - 0x0060)
class ULineTracers : public UTracerShape
{
public:
	struct FName                                       EndSocket;                                                // 0x0060(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsValid;                                                 // 0x0068(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	struct FTracerSocketInfo                           EndSocketInfo;                                            // 0x0070(0x0060) (CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                NumFrames;                                                // 0x00D0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET
	TArray<struct FTransform>                          WeaponTransforms;                                         // 0x00D8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x00E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.LineTracers"));
		return ptr;
	}

};


// Class TBL.LoadItem
// 0x0000 (0x0178 - 0x0178)
class ULoadItem : public UAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.LoadItem"));
		return ptr;
	}

};


// Class TBL.LoadItemInterface
// 0x0000 (0x0028 - 0x0028)
class ULoadItemInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.LoadItemInterface"));
		return ptr;
	}


	void OnLoadItem(class AInventoryItem* Item, class ATBLCharacter* Initiator);
};


// Class TBL.LoadoutSelection
// 0x0100 (0x0128 - 0x0028)
class ULoadoutSelection : public UObject
{
public:
	TArray<class UClass* /*UWeaponGroup*/>             Primary;                                                  // 0x0028(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*UWeaponGroup*/>             Secondary;                                                // 0x0038(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*UWeaponGroup*/>             Shield;                                                   // 0x0048(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*UWeaponGroup*/>             Knife;                                                    // 0x0058(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*UWeaponGroup*/>             Item;                                                     // 0x0068(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*UWeaponGroup*/>             Bandage;                                                  // 0x0078(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*UWeaponGroup*/>             Special;                                                  // 0x0088(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSpawnFists;                                              // 0x0098(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET
	TArray<EInventoryItemSlot>                         DisabledSlots;                                            // 0x00A0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<class UClass* /*AInventoryItem*/, int>        OverrideStackCount;                                       // 0x00B0(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	TArray<EInventoryItemSlot>                         StartingSlots;                                            // 0x0100(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0110(0x0008) MISSED OFFSET
	TArray<class UClass* /*AInventoryItem*/>           CachedItems;                                              // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.LoadoutSelection"));
		return ptr;
	}


	class UClass* /*AInventoryItem*/ GetRandomItemForSlot(EInventoryItemSlot Slot);
	TArray<class UClass* /*AInventoryItem*/> GetItemSelectionBySlot(EInventoryItemSlot Slot, bool bOnPickup);
	class UClass* /*AInventoryItem*/ GetItemForSlot(EInventoryItemSlot Slot, int Index);
	TArray<EWeaponTag> GetAllItemWeaponTagsFromLoadout();
};


// Class TBL.LoadoutVolume
// 0x0060 (0x03B0 - 0x0350)
class ALoadoutVolume : public ACaptureVolume
{
public:
	bool                                               bIsActive;                                                // 0x0350(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x5F];                                      // 0x0351(0x005F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.LoadoutVolume"));
		return ptr;
	}


	void SetActive(bool Active);
	void OnIsActiveChanged();
	void LocalPCPossessedPawn(class APawn* NewPawn);
};


// Class TBL.LockTurnAngle
// 0x0050 (0x0078 - 0x0028)
class ULockTurnAngle : public UObject
{
public:
	bool                                               bEnabled;                                                 // 0x0028(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                HorizLockId;                                              // 0x002C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                VertLockId;                                               // 0x0030(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                DelayTimerHandle;                                         // 0x0034(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                EndTimerHandle;                                           // 0x0038(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FTurnLockParams                             TurnLock;                                                 // 0x003C(0x003C) (CPF_Transient, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.LockTurnAngle"));
		return ptr;
	}


	void OnRootMotionChanged(bool bRootMotion);
	void OnEndTimer(float OverTime);
	void OnDelayTimer(float OverTime);
	void OnCombatStateEvent(class AActor* InActor, const struct FName& EventName, const struct FAttackInfo& EventAttackInfo);
	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState);
};


// Class TBL.LTSGameMode
// 0x0018 (0x1248 - 0x1230)
class ALTSGameMode : public AArenaGameMode
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x1230(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.LTSGameMode"));
		return ptr;
	}


	void PlayRoundStartCommanderVO();
};


// Class TBL.LTSGameModeSettings
// 0x0038 (0x01A8 - 0x0170)
class ULTSGameModeSettings : public UArenaGameModeSettings
{
public:
	int                                                NumPlayerHudMarkersThreshold;                             // 0x0170(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                RoundsFromVictoryMusicTrigger;                            // 0x0174(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                        LTSPlayerHudComponent;                                    // 0x0178(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_EditConst, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TriggerCommanderVOAfterRoundStartTime;                    // 0x01A0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TriggerCommanderVOMatchPointDuration;                     // 0x01A4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.LTSGameModeSettings"));
		return ptr;
	}

};


// Class TBL.LTSGameState
// 0x0030 (0x0AD0 - 0x0AA0)
class ALTSGameState : public AArenaGameState
{
public:
	int                                                HudMarkerThreshold;                                       // 0x0AA0(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0AA4(0x0004) MISSED OFFSET
	class UClass* /*UHudMarkerDisplayComponent*/       LTSHudMarkerComponentClass;                               // 0x0AA8(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0AB0(0x0010) MISSED OFFSET
	TArray<EFaction>                                   PendingHudMarkersForFaction;                              // 0x0AC0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.LTSGameState"));
		return ptr;
	}


	void OnRep_LTSHudMarkerComponentClass();
};


// Class TBL.ManagedSignificanceAnimatedActor
// 0x0028 (0x0280 - 0x0258)
class AManagedSignificanceAnimatedActor : public AActor
{
public:
	TArray<class UClass* /*UActorComponent*/>          ComponentClassesToManage;                                 // 0x0258(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIncludeComponentsOfChildClasses;                         // 0x0268(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x17];                                      // 0x0269(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ManagedSignificanceAnimatedActor"));
		return ptr;
	}

};


// Class TBL.MatchStateListenerInterface
// 0x0000 (0x0028 - 0x0028)
class UMatchStateListenerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MatchStateListenerInterface"));
		return ptr;
	}

};


// Class TBL.MatchStateListenerInterfaceHelpers
// 0x0000 (0x0028 - 0x0028)
class UMatchStateListenerInterfaceHelpers : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MatchStateListenerInterfaceHelpers"));
		return ptr;
	}

};


// Class TBL.MatchWinTask
// 0x0020 (0x0070 - 0x0050)
class UMatchWinTask : public UTBLAchievementTaskCountable
{
public:
	EFaction                                           Team;                                                     // 0x0050(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	struct FString                                     MapName;                                                  // 0x0058(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EMatchVictoryType                                  MatchResult;                                              // 0x0068(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EMatchWinType                                      MatchWinType;                                             // 0x0069(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x6];                                       // 0x006A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MatchWinTask"));
		return ptr;
	}

};


// Class TBL.MatchWinWorker
// 0x0000 (0x00C0 - 0x00C0)
class UMatchWinWorker : public UTBLAchievementWorker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MatchWinWorker"));
		return ptr;
	}


	void OnVictory(EFaction InVictor);
};


// Class TBL.MeleeTargetMethod
// 0x0000 (0x01B8 - 0x01B8)
class UMeleeTargetMethod : public UAbilityTargetMethod
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MeleeTargetMethod"));
		return ptr;
	}


	void OnRagdollHitEventCosmetic(class AActor* HitTaker, class AActor* HitCauser, class AInventoryItem* Weapon, const struct FHitResult& HitResult);
	void OnCombatStateEventCosmetic(class AActor* Actor, const struct FName& EventName, const struct FAttackInfo& EventAttackInfo);
};


// Class TBL.MovementAction
// 0x0010 (0x0050 - 0x0040)
class UMovementAction : public UTBLObject
{
public:
	TEnumAsByte<EMovementFrameOfReference>             FrameOfReference;                                         // 0x0040(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	struct FName                                       AnimationEvent;                                           // 0x0044(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentTime;                                              // 0x004C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MovementAction"));
		return ptr;
	}

};


// Class TBL.MovementDebugger
// 0x03D0 (0x04D8 - 0x0108)
class UMovementDebugger : public UActorComponent
{
public:
	TArray<struct FMovementDebugFrame>                 RecordedFrames;                                           // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FMovementDebugFrame>                 ServerFramesFromFile;                                     // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DebugPositionIndex;                                       // 0x0128(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                PlayDirection;                                            // 0x012C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PlayDirectionDelay;                                       // 0x0130(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRecording;                                               // 0x0134(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0135(0x0003) MISSED OFFSET
	int                                                ID;                                                       // 0x0138(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	class ATBLCharacter*                               TargetCharacter;                                          // 0x0140(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMovementDebugFrame                         ServerFrame;                                              // 0x0148(0x0340) (CPF_NativeAccessSpecifierPublic)
	int                                                ServerSyncFrame;                                          // 0x0488(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x048C(0x0004) MISSED OFFSET
	TArray<struct FName>                               BoneNames;                                                // 0x0490(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDrawServer;                                              // 0x04A0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDrawClient;                                              // 0x04A1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x6];                                       // 0x04A2(0x0006) MISSED OFFSET
	class UInputComponent*                             InputComponent;                                           // 0x04A8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                FrameOffset;                                              // 0x04B0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x4];                                       // 0x04B4(0x0004) MISSED OFFSET
	struct FString                                     LastSavedFileName;                                        // 0x04B8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                DisplayDebugScrollDir;                                    // 0x04C8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DisplayDebugScrollY;                                      // 0x04CC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                OtherCharacterIndex;                                      // 0x04D0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x4];                                       // 0x04D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MovementDebugger"));
		return ptr;
	}


	void ToggleRecord();
	void ToggleDrawServer();
	void ToggleDrawClient();
	void Teleport();
	void StopRecord();
	void StartRecord();
	void SetTargetCharacter(class ATBLCharacter* Character);
	void ServerSetTargetCharacter(class ATBLCharacter* DebugTarget);
	void ServerSetClientTimeStamp(float ClientTimeStamp, int Direction);
	void ServerSetClientIndex(int Index);
	void ServerSaveToFile(const struct FString& Filename);
	void SaveToFile(const struct FString& Filename);
	void RecordPose(class ACharacter* Pawn, const struct FColor& Color, struct FDebugDrawShapes* DebugDraw);
	void RecordOtherCharacter(class ATBLCharacterBase* OtherChar, class UNetConnection* Connection, struct FMovementDebugSimualated* OtherCharacter);
	void RecordCapsule(class ACharacter* Pawn, const struct FColor& Color, struct FMovementDebugFrame* DebugFrame);
	void RecordBoneChain(class ACharacter* Pawn, const struct FName& BoneName, const struct FColor& Color, struct FDebugDrawShapes* DebugDraw);
	void PreviousCharacter();
	void PlayReleased();
	void OnRep_Recording();
	void OnPossessed(class APawn* NewPawn);
	void OnMovementSync(float ClientTimeStamp, float DeltaTime);
	void NextCharacter();
	void LoadFromFile(const struct FString& Filename);
	void IncreaseFrameOffset();
	struct FMovementDebugFrame GetServerFrame();
	int GetClientIndex();
	struct FMovementDebugFrame GetClientFrame();
	void ForwardPressed();
	void FixClientTimeStamps(TArray<struct FMovementDebugFrame>* Frames);
	bool FindServerFrame(float ClientTimeStamp, int Direction, TArray<struct FMovementDebugFrame>* SearchFrames, struct FMovementDebugFrame* ReturnFrame);
	void DrawStatLine(const struct FVector& Start, const struct FVector& End, const struct FColor& Clr);
	void DrawPose(const struct FColor& Clr, struct FDebugDrawShapes* DebugDraw);
	void DrawFrame(const struct FColor& Clr, struct FMovementDebugFrame* DebugFrame);
	void DrawDebug(class UCanvas* Canvas);
	void DisplayDebugScrollUp();
	void DisplayDebugScrollReleased();
	void DisplayDebugScrollDown();
	void DecreaseFrameOffset();
	void CloseDebugger();
	void ClientSendFrame(const struct FMovementDebugFrame& DebugFrame, bool bSyncTimeStamp);
	void ClientLoadFromFile(const struct FString& Filename);
	void BackwardPressed();
	void AutoSaveToFile(bool bSendToServer, const struct FString& Directory);
	void Animate(float Scale);
};


// Class TBL.MovementInstance
// 0x0080 (0x00A8 - 0x0028)
class UMovementInstance : public UAssemblyInstance
{
public:
	struct FMulticastScriptDelegate                    OnStartMovement;                                          // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnFinishMovement;                                         // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UMovementSequence*                           Sequence;                                                 // 0x0048(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AActor*                                      TargetActor;                                              // 0x0050(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMovementActionInitiationParams             InitParams;                                               // 0x0058(0x0028) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              InitTime;                                                 // 0x0080(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ScalingFactor;                                            // 0x0084(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementAction*                             CurrentMovement;                                          // 0x0088(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsFinished;                                              // 0x0090(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	float                                              FinishTime;                                               // 0x0094(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UTBLObject*>                          InstancedObjects;                                         // 0x0098(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MovementInstance"));
		return ptr;
	}


	void Stop();
	void StartMovement(class UMovementSequence* MovementSeq);
	void OnWallHit(class AActor* Owner, class AActor* HitActor, float HitAngle);
	void OnCharacterHit(class AActor* Owner, class ATBLCharacter* HitCharacter);
	void OnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	class ATBLCharacterBase* GetCharacterOwner();
};


// Class TBL.MovementModifierComponent
// 0x00D0 (0x01D8 - 0x0108)
class UMovementModifierComponent : public UActorComponent
{
public:
	class UDataTable*                                  MovementModifierDataTable;                                // 0x0108(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<class UPhysicalMaterial*, struct FName>       PhysMaterialModifiers;                                    // 0x0110(0x0050) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FMovementModifier>       MovementModifiers;                                        // 0x0160(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPublic)
	float                                              SlopeAngle;                                               // 0x01B0(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TotalModifier;                                            // 0x01B4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableSprint;                                           // 0x01B8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01B9(0x0003) MISSED OFFSET
	struct FName                                       CurrentSlopeState;                                        // 0x01BC(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01C4(0x0004) MISSED OFFSET
	class UPhysicalMaterial*                           PreviousPhysMaterial;                                     // 0x01C8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              UphillMinAngle;                                           // 0x01D0(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DownhillMinAngle;                                         // 0x01D4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MovementModifierComponent"));
		return ptr;
	}


	void RemoveModifier(const struct FName& Modifier);
	bool HasModifier(const struct FName& Modifier);
	void AddModifier(const struct FName& Modifier);
};


// Class TBL.MovementSequence
// 0x0010 (0x00B8 - 0x00A8)
class UMovementSequence : public UAssemblyBlueprint
{
public:
	class UMovementAction*                             movement;                                                 // 0x00A8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                Priority;                                                 // 0x00B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bStopOnCharacterHit;                                      // 0x00B4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00B5(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MovementSequence"));
		return ptr;
	}

};


// Class TBL.MultiActorHUDMarkerBase
// 0x01A8 (0x0400 - 0x0258)
class AMultiActorHUDMarkerBase : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0258(0x0018) MISSED OFFSET
	bool                                               bEndOfFrameTickEnabled;                                   // 0x0270(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bAwaitingActorReplication;                                // 0x0271(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0272(0x0006) MISSED OFFSET
	class UHudMarkerDisplayComponent*                  HUDMarkerComponent;                                       // 0x0278(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UObjectiveStatusDisplayComponent*            ObjectiveStatusComponent;                                 // 0x0280(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UActorInfoDisplayComponent*                  ActorInfoComponent;                                       // 0x0288(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DotProductScoreMultiplier;                                // 0x0290(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0294(0x0004) MISSED OFFSET
	TArray<TWeakObjectPtr<class AActor>>               LastDisplayedActorList;                                   // 0x0298(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<uint64_t, TWeakObjectPtr<class AActor>>       ManagedActorMap;                                          // 0x02A8(0x0050) (CPF_Transient, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	TMap<uint64_t, TWeakObjectPtr<class UWidgetVisibilityComponent>> ManagedComponentMap;                                      // 0x02F8(0x0050) (CPF_ExportObject, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseLegacyMode;                                           // 0x0348(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseMarkedRadius;                                         // 0x0349(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bStartEnabled;                                            // 0x034A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsEnabled;                                               // 0x034B(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x034C(0x0004) MISSED OFFSET
	TArray<class AActor*>                              ReplicatedActorList;                                      // 0x0350(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AActor*>                              ReplicatedRemovedActorList;                               // 0x0360(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x50];                                      // 0x0370(0x0050) MISSED OFFSET
	int                                                NumberOfMarkersToDisplay;                                 // 0x03C0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CurrentNumberOfMarkers;                                   // 0x03C4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EObjectiveZoneVisibilityMode                       ObjectiveZoneVisibilityMode;                              // 0x03C8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x7];                                       // 0x03C9(0x0007) MISSED OFFSET
	class AActor*                                      ObjectiveZoneActor;                                       // 0x03D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                NumberOfMarkersToDisplayOnZoneVisible;                    // 0x03D8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ExtraMarkerDisplayDuration;                               // 0x03DC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UObjectiveZoneDisplayComponent> OwningObjectiveZoneComponent;                             // 0x03E0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPlayerIsInOwningZone;                                    // 0x03E8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x7];                                       // 0x03E9(0x0007) MISSED OFFSET
	struct FTimerHandle                                ExtraMarkerDisplayHandle;                                 // 0x03F0(0x0008) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTimerHandle                                InitialVisibilityHandle;                                  // 0x03F8(0x0008) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MultiActorHUDMarkerBase"));
		return ptr;
	}


	void SetMarkedActors(TArray<class AActor*> InMarkedActors);
	void RemoveMarkedActor(class AActor* Actor);
	void OnRep_ReplicatedActorList();
	void OnRep_bIsEnabled();
	void OnPlayerEnteredZoneChanged(bool bLocalPlayerInsideZone);
	void OnPawnPossessed(class APawn* Pawn);
	void OnInitialVisibilityExpired();
	void OnExtraMarkerDisplayExpired();
	void OnAuthorityAddedActorDestroyed(class AActor* Actor);
	bool K2_ShouldIgnoreMarkedActor(class AActor* Actor);
	bool IsVisible();
	bool IsActive();
	TArray<class UWidgetVisibilityComponent*> GetWidgetVisibilityComponents();
	class UObjectiveStatusDisplayComponent* GetObjectiveStatusComponent();
	TArray<class UHudMarkerDisplayComponent*> GetMarkedActorHUDMarkerComponents();
	class UHudMarkerDisplayComponent* GetHUDMarkerComponent();
	class UActorInfoDisplayComponent* GetActorInfoComponent();
	void DeactivateMarker();
	void BindToObjectiveZone();
	void AuthoritySetMarkedActors(TArray<class AActor*> InMarkedActors);
	void AuthorityRemoveMarkedActor(class AActor* Actor);
	void AuthorityAddMarkedActor(class AActor* Actor);
	void AddMarkedActor(class AActor* Actor);
	void ActivateMarker();
};


// Class TBL.MultiActorHUDMarker
// 0x0010 (0x0410 - 0x0400)
class AMultiActorHUDMarker : public AMultiActorHUDMarkerBase
{
public:
	TArray<struct FMarkedActorEntry>                   MarkedActors;                                             // 0x0400(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MultiActorHUDMarker"));
		return ptr;
	}

};


// Class TBL.MultiActorHUDMarkerInteractable
// 0x0010 (0x0410 - 0x0400)
class AMultiActorHUDMarkerInteractable : public AMultiActorHUDMarkerBase
{
public:
	TArray<struct FMarkedActorEntryInteractable>       MarkedActors;                                             // 0x0400(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MultiActorHUDMarkerInteractable"));
		return ptr;
	}

};


// Class TBL.MultiActorHUDMarkerBurnable
// 0x0010 (0x0410 - 0x0400)
class AMultiActorHUDMarkerBurnable : public AMultiActorHUDMarkerBase
{
public:
	TArray<struct FMarkedActorEntryBurnable>           MarkedActors;                                             // 0x0400(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MultiActorHUDMarkerBurnable"));
		return ptr;
	}

};


// Class TBL.MultiActorHUDMarkerStatsComponent
// 0x0010 (0x0410 - 0x0400)
class AMultiActorHUDMarkerStatsComponent : public AMultiActorHUDMarkerBase
{
public:
	TArray<struct FMarkedActorEntryStatsComponent>     MarkedActors;                                             // 0x0400(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MultiActorHUDMarkerStatsComponent"));
		return ptr;
	}

};


// Class TBL.MultiActorHUDMarkerAmmoRefill
// 0x0040 (0x0440 - 0x0400)
class AMultiActorHUDMarkerAmmoRefill : public AMultiActorHUDMarkerBase
{
public:
	TArray<struct FMarkedActorEntryAmmoRefill>         MarkedActors;                                             // 0x0400(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EFaction                                           CachedFaction;                                            // 0x0410(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0411(0x0007) MISSED OFFSET
	TArray<class AInventoryItem*>                      CachedAmmoInventory;                                      // 0x0418(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UInventory*                                  CachedInventory;                                          // 0x0428(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxMarkerDistance;                                        // 0x0430(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SimultaneousMarkerOverride;                               // 0x0434(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxMarkerDistanceSquared;                                 // 0x0438(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x043C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MultiActorHUDMarkerAmmoRefill"));
		return ptr;
	}

};


// Class TBL.MultiTargetMethod
// 0x0010 (0x0218 - 0x0208)
class UMultiTargetMethod : public UCompositeTargetMethod
{
public:
	TArray<class UAbilityTargetMethod*>                TargetMethods;                                            // 0x0208(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.MultiTargetMethod"));
		return ptr;
	}

};


// Class TBL.NameGenerator
// 0x0000 (0x0028 - 0x0028)
class UNameGenerator : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.NameGenerator"));
		return ptr;
	}

};


// Class TBL.NativeAnimationSet_Base
// 0x0220 (0x0378 - 0x0158)
class UNativeAnimationSet_Base : public UAnimationSet
{
public:
	class UBlendSpace*                                 Crouch;                                                   // 0x0158(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 StrafeWounded;                                            // 0x0160(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 Strafe_F;                                                 // 0x0168(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 Strafe_B;                                                 // 0x0170(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 hop;                                                      // 0x0178(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 AimOffset;                                                // 0x0180(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 Strafe_1P;                                                // 0x0188(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 Combat_AimOffset_Lft;                                     // 0x0190(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 Combat_AimOffset_Rgt;                                     // 0x0198(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 Turn;                                                     // 0x01A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 Hop_3P;                                                   // 0x01A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 Dash_3P;                                                  // 0x01B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 AimOffset_Combat;                                         // 0x01B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 strafeStart_F;                                            // 0x01C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 strafeStart_B;                                            // 0x01C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 MountAimOffset_Combat;                                    // 0x01D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 strafeStop_F;                                             // 0x01D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 strafeStop_B;                                             // 0x01E0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 Downed_Loop;                                              // 0x01E8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 Downed_Loop_InSpot;                                       // 0x01F0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 interrupt_step;                                           // 0x01F8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 jog_F;                                                    // 0x0200(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 jog_B;                                                    // 0x0208(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 parry_pose;                                               // 0x0210(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 StrafeCombat_F;                                           // 0x0218(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 StrafeCombat_B;                                           // 0x0220(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 parry_weak_pose;                                          // 0x0228(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 Duck;                                                     // 0x0230(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace1D*                               Strafe_1D;                                                // 0x0238(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlendSpace*                                 sprintTap;                                                // 0x0240(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               IdleAlert;                                                // 0x0248(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               SprintCharge;                                             // 0x0250(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               IdlePose;                                                 // 0x0258(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               WorldHit_Normal;                                          // 0x0260(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               WorldHit_Alt;                                             // 0x0268(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               IdleAdditive;                                             // 0x0270(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               IdleAdditive_2;                                           // 0x0278(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               IdleAdditive_3;                                           // 0x0280(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               IdleAdditive_4;                                           // 0x0288(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               SprintStart;                                              // 0x0290(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               SprintLoop;                                               // 0x0298(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               SprintFast;                                               // 0x02A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               SprintStop;                                               // 0x02A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               IdleAlert_Crouch;                                         // 0x02B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               parry_loop;                                               // 0x02B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               downed_sprint;                                            // 0x02C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               mount_basePose;                                           // 0x02C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               mount_idleAdditive;                                       // 0x02D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               mount_gallop;                                             // 0x02D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               IdlePose_Wounded;                                         // 0x02E0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               SprintStart_Wounded;                                      // 0x02E8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               SprintLoop_Wounded;                                       // 0x02F0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               SprintFast_Wounded;                                       // 0x02F8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               SprintStop_Wounded;                                       // 0x0300(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               IdleWounded;                                              // 0x0308(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               parry_loop_weak;                                          // 0x0310(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               mount_gallopStart;                                        // 0x0318(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               parry_sprint;                                             // 0x0320(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               IdleBase;                                                 // 0x0328(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               CrouchAlertPose;                                          // 0x0330(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               IdleAlertPose;                                            // 0x0338(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               IdleAlert_3;                                              // 0x0340(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               IdleWounded_basePose;                                     // 0x0348(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               IdleAlert_4;                                              // 0x0350(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               parry_loop_strafe;                                        // 0x0358(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               SprintFast_v2;                                            // 0x0360(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               SprintFast_v3;                                            // 0x0368(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimSequence*                               SprintFast_v4;                                            // 0x0370(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.NativeAnimationSet_Base"));
		return ptr;
	}

};


// Class TBL.NativeCombatState_Release
// 0x0080 (0x0200 - 0x0180)
class UNativeCombatState_Release : public UBaseCombatState
{
public:
	TMap<struct FName, float>                          DelayCounterTime;                                         // 0x0180(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_NativeAccessSpecifierPublic)
	float                                              DelayCounterTimeOnHit;                                    // 0x01D0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DelayCounterTimeOnBlocked;                                // 0x01D4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAttackType*                                 DashJumpAttackType;                                       // 0x01D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ClearAttackQueueTime;                                     // 0x01E0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       PreviousCombatState;                                      // 0x01E4(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PreviousStateTime;                                        // 0x01EC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              HasHitTime;                                               // 0x01F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PreviousHasHitTime;                                       // 0x01F4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      HasHit : 1;                                               // 0x01F8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      HitWasBlocked : 1;                                        // 0x01F8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      PreviousHasHit : 1;                                       // 0x01F8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      PreviousHitWasBlocked : 1;                                // 0x01F8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      AllowCounters : 1;                                        // 0x01F8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01F9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.NativeCombatState_Release"));
		return ptr;
	}


	void ShouldDelayCounter(bool* Delay, float* DelayTime);
	void OnAllowCounters(float OverTime);
	void HandleQueuedParryCounter();
	bool AllowSprinting();
};


// Class TBL.NativePartyWidget
// 0x0010 (0x0330 - 0x0320)
class UNativePartyWidget : public UTBLUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0320(0x0008) MISSED OFFSET
	class UTextBlock*                                  PartyText;                                                // 0x0328(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.NativePartyWidget"));
		return ptr;
	}

};


// Class TBL.NavArea_Constricted
// 0x0000 (0x0048 - 0x0048)
class UNavArea_Constricted : public UNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.NavArea_Constricted"));
		return ptr;
	}

};


// Class TBL.NavArea_ForceDefault
// 0x0000 (0x0048 - 0x0048)
class UNavArea_ForceDefault : public UNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.NavArea_ForceDefault"));
		return ptr;
	}

};


// Class TBL.NavArea_Jump
// 0x0000 (0x0048 - 0x0048)
class UNavArea_Jump : public UNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.NavArea_Jump"));
		return ptr;
	}

};


// Class TBL.NavBlockingVolume
// 0x0008 (0x0298 - 0x0290)
class ANavBlockingVolume : public AVolume
{
public:
	class UTBLNavModifierComponent*                    NavModifier;                                              // 0x0290(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.NavBlockingVolume"));
		return ptr;
	}

};


// Class TBL.NetValidation
// 0x0028 (0x0050 - 0x0028)
class UNetValidation : public UObject
{
public:
	struct FVector                                     ServerStartFire_Offset1P_Min;                             // 0x0028(0x000C) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     ServerStartFire_Offset1P_Max;                             // 0x0034(0x000C) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               DisableValidationCheck;                                   // 0x0040(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.NetValidation"));
		return ptr;
	}

};


// Class TBL.NewSpawnSystemQueuer
// 0x0070 (0x00F0 - 0x0080)
class UNewSpawnSystemQueuer : public USpawnQueuer
{
public:
	class ASpawnWave*                                  PlayFromHereWave;                                         // 0x0080(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSet<class AController*>                           PlayedFromHere;                                           // 0x0088(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00D8(0x0008) MISSED OFFSET
	TArray<class AAIController*>                       BotsWaitingToSpawn;                                       // 0x00E0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.NewSpawnSystemQueuer"));
		return ptr;
	}

};


// Class TBL.NPCReplicatedDataComponent
// 0x0018 (0x0120 - 0x0108)
class UNPCReplicatedDataComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	bool                                               bIsScared;                                                // 0x0118(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0119(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.NPCReplicatedDataComponent"));
		return ptr;
	}


	void SetIsScared(bool InIsScared);
};


// Class TBL.NPCSpawnManagerBase
// 0x0010 (0x0320 - 0x0310)
class ANPCSpawnManagerBase : public ATBLActor
{
public:
	struct FMulticastScriptDelegate                    OnBehaviorTreeStarted;                                    // 0x0310(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.NPCSpawnManagerBase"));
		return ptr;
	}

};


// Class TBL.AsyncActionNPCSpawnManagerBase
// 0x0008 (0x0038 - 0x0030)
class UAsyncActionNPCSpawnManagerBase : public UBlueprintAsyncActionBase
{
public:
	TWeakObjectPtr<class ANPCSpawnManagerBase>         OwningNPCSpawnManager;                                    // 0x0030(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AsyncActionNPCSpawnManagerBase"));
		return ptr;
	}


	void OnNPCSpawnManagerDestroyed(class AActor* DestroyedActor);
	void BindToNPCSpawnManager(class ANPCSpawnManagerBase* NPCSpawnManager);
};


// Class TBL.AsyncActionNPCSpawnManagerBehaviourTree
// 0x0010 (0x0048 - 0x0038)
class UAsyncActionNPCSpawnManagerBehaviourTree : public UAsyncActionNPCSpawnManagerBase
{
public:
	struct FMulticastScriptDelegate                    OnBehaviorTreeStarted;                                    // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.AsyncActionNPCSpawnManagerBehaviourTree"));
		return ptr;
	}


	void NotifyBehaviorTreeStarted(class ATBLAIController* Controller);
	static class UAsyncActionNPCSpawnManagerBehaviourTree* AsyncWaitForBehaviourTree(class UObject* WorldContextObject, class ANPCSpawnManagerBase* NPCSpawnManager);
};


// Class TBL.ObjectsByClassList
// 0x0048 (0x0150 - 0x0108)
class UObjectsByClassList : public UWidget
{
public:
	float                                              ItemHeight;                                               // 0x0108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x14];                                      // 0x010C(0x0014) MISSED OFFSET
	TEnumAsByte<ESelectionMode>                        SelectionMode;                                            // 0x0120(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0121(0x0007) MISSED OFFSET
	class UClass* /*UObject*/                          ClassToList;                                              // 0x0128(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnGenerateRowEvent;                                       // 0x0130(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0140(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ObjectsByClassList"));
		return ptr;
	}


	void RefreshList();
};


// Class TBL.OnlineConfig
// 0x0038 (0x0060 - 0x0028)
class UOnlineConfig : public UObject
{
public:
	TArray<EInventoryType>                             WeaponAchievements;                                       // 0x0028(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FLevelSet>                           LevelWinAchievements;                                     // 0x0038(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TEnumAsByte<EGameModeType>>                 GameModeWinAchievements;                                  // 0x0048(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDataTable*                                  TitleProgressionTable;                                    // 0x0058(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OnlineConfig"));
		return ptr;
	}


	struct FTitleProgressionRow GetTitleProgression(int Level);
	void EventGetAchievementCategory(const struct FAchievementProgress& InAchievement, struct FText* Category, struct FText* Subcategory, int* DisplayPriority);
};


// Class TBL.OnOffActivationMethod
// 0x0050 (0x00E0 - 0x0090)
class UOnOffActivationMethod : public UAbilityActivationMethod
{
public:
	TArray<class UAction*>                             InitiatorActionsPerSecond;                                // 0x0090(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAction*>                             InitiatorActionsOn;                                       // 0x00A0(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAction*>                             InitiatorActionsOff;                                      // 0x00B0(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x00C0(0x0010) MISSED OFFSET
	bool                                               bKeyPressed;                                              // 0x00D0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0xF];                                       // 0x00D1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OnOffActivationMethod"));
		return ptr;
	}

};


// Class TBL.DropDownListItem
// 0x0020 (0x0048 - 0x0028)
class UDropDownListItem : public UObject
{
public:
	struct FText                                       Text;                                                     // 0x0028(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	int                                                Index;                                                    // 0x0040(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DropDownListItem"));
		return ptr;
	}

};


// Class TBL.OptionsDropDownList
// 0x0038 (0x0140 - 0x0108)
class UOptionsDropDownList : public UWidget
{
public:
	float                                              ItemHeight;                                               // 0x0108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	TArray<class UDropDownListItem*>                   Items;                                                    // 0x0110(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnGenerateRowEvent;                                       // 0x0120(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0130(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OptionsDropDownList"));
		return ptr;
	}


	void SetItemSelection(bool bSelected, TEnumAsByte<ESelectInfo> Type, class UDropDownListItem** InItem);
	void RemoveAllItems();
	class UWidget* GetSelectedWidget();
	int AddItem(const struct FText& Text, int Index);
};


// Class TBL.OptionsList
// 0x00A0 (0x01A8 - 0x0108)
class UOptionsList : public UWidget
{
public:
	float                                              ItemHeight;                                               // 0x0108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	class UOptionsScreenCategory*                      Category;                                                 // 0x0110(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UObject*>                             Items;                                                    // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       TableRowStyleName;                                        // 0x0128(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnGenerateSubcategoryHeaderEvent;                         // 0x0130(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnGenerateCheckboxEvent;                                  // 0x0140(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnGenerateSliderEvent;                                    // 0x0150(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnGenerateComboBoxEvent;                                  // 0x0160(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnGenerateKeybindEvent;                                   // 0x0170(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnItemSelected;                                           // 0x0180(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UTBLScrollBarStyleDataAsset*                 ScrollBarStyle;                                           // 0x0190(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0198(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OptionsList"));
		return ptr;
	}


	void SetCategory(class UOptionsScreenCategory* InCategory);
	void SelectWidget(class UObject* Item);
	bool IsFirstEntryInSubcategory(class UObject* Object);
	bool IsFirstEntry(class UObject* Object);
	class UWidget* GetSelectedWidget();
};


// Class TBL.OptionsListEntry
// 0x0000 (0x0248 - 0x0248)
class UOptionsListEntry : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OptionsListEntry"));
		return ptr;
	}


	void BP_OnSelected(TEnumAsByte<ESelectInfo> SelectInfo);
};


// Class TBL.OrCondition
// 0x0010 (0x0160 - 0x0150)
class UOrCondition : public UCondition
{
public:
	TArray<class UCondition*>                          Conditions;                                               // 0x0150(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OrCondition"));
		return ptr;
	}

};


// Class TBL.OutOfCombatZoneAuthority
// 0x02D8 (0x0530 - 0x0258)
class AOutOfCombatZoneAuthority : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0258(0x0008) MISSED OFFSET
	TArray<class AOutOfCombatZoneVolume*>              ActiveVolumes;                                            // 0x0260(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<class ATBLCharacter*, struct FVolumeSet>      Overlaps;                                                 // 0x0270(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	bool                                               bInverted;                                                // 0x02C0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x02C1(0x0003) MISSED OFFSET
	float                                              TimerDelaySeconds;                                        // 0x02C4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              HorseTimerDelaySeconds;                                   // 0x02C8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RecentSpawnForgivenessSeconds;                            // 0x02CC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              HorseRecentSpawnForgivenessSeconds;                       // 0x02D0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET
	TSet<class ATBLCharacter*>                         CharactersThatSpawnedInMe;                                // 0x02D8(0x0050) (CPF_NativeAccessSpecifierPublic)
	TSet<class ATBLCharacter*>                         CharactersThatLeftMe;                                     // 0x0328(0x0050) (CPF_NativeAccessSpecifierPublic)
	bool                                               bIsLocalPlayerOverlapping;                                // 0x0378(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0379(0x0007) MISSED OFFSET
	TMap<class ACharacter*, struct FTimerHandle>       ActionTimerHandles;                                       // 0x0380(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<class ACharacter*, struct FTimerHandle>       ForgivenessTimerHandles;                                  // 0x03D0(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TSet<class UClass* /*ATBLCharacter*/>              ConsideredCharacters;                                     // 0x0420(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	TSet<class UClass* /*ATBLCharacter*/>              IgnoredCharacters;                                        // 0x0470(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisabled;                                                // 0x04C0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x7];                                       // 0x04C1(0x0007) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnActionTriggeredEvent;                                   // 0x04C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBeginOverlapEvent;                                      // 0x04D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnEndOverlapEvent;                                        // 0x04E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnLocalPlayerBeginOverlapEvent;                           // 0x04F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnLocalPlayerEndOverlapEvent;                             // 0x0508(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnActiveVolumesChanged;                                   // 0x0518(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0528(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OutOfCombatZoneAuthority"));
		return ptr;
	}


	void StartForgivenessTimer(class ATBLCharacter* Character, struct FTimerHandle* TimerHandle);
	bool ShouldIgnoreCharacter(class ATBLCharacter* Character);
	void OnLocalPlayerEndOverlap(class ATBLCharacter* Character);
	void OnLocalPlayerBeginOverlap(class ATBLCharacter* Character);
	void OnForgivenessTimerElapsed(class ATBLCharacter* Character);
	void OnEndOverlap(class ATBLCharacter* Character);
	void OnBeginOverlap(class ATBLCharacter* Character);
	void OnActionTriggered(class ATBLCharacter* Character);
	bool K2_ShouldIgnoreCharacter(class ATBLCharacter* Character);
	bool IsInForgivenessTime(class ACharacter* Character);
	void HandleOnPlayerKilled(const struct FDeathEvent& DeathEvent);
	void HandleOnArenaRoundWon(EFaction Winner);
	void HandleLocalControllerPossessedPawn(class APawn* Pawn);
	void HandleLocalControllerPlayerStateReplicated(class APlayerState* PS);
	void HandleEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void HandleCharacterSpawned(class ATBLCharacter* Character);
	void HandleCharacterDestroyed(class AActor* DestroyedActor);
	void HandleBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void HandleActionTimerFired(class ATBLCharacter* Character);
	float GetTimerDelaySeconds(class ATBLCharacter* Character, bool* OutIsInForgivenessTime);
	float GetForgivenessTime(class ATBLCharacter* Character);
	static float GetCurrentLowestTimeLeft(TArray<class AOutOfCombatZoneAuthority*> Authorities, class ATBLCharacter* Character);
	bool CanHaveForgivenessTime(class ATBLCharacter* Character);
	void CancelForgivenessTimer(class ATBLCharacter* Character);
};


// Class TBL.OutOfCombatZoneVolume
// 0x0060 (0x02B8 - 0x0258)
class AOutOfCombatZoneVolume : public AActor
{
public:
	class UClass* /*AOutOfCombatZoneAuthority*/        AuthorityClass;                                           // 0x0258(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           Faction;                                                  // 0x0260(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0261(0x0007) MISSED OFFSET
	class USceneComponent*                             DefaultSceneComponent;                                    // 0x0268(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        PreviewMeshComponent;                                     // 0x0270(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FCombatZoneVolumeSizeParam>          ZoneSizeThresholdArray;                                   // 0x0278(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShouldShrinkZoneAccordingToThresholds;                   // 0x0288(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0xB];                                       // 0x0289(0x000B) MISSED OFFSET
	unsigned char                                      bIsActive : 1;                                            // 0x0294(0x0001) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x23];                                      // 0x0295(0x0023) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OutOfCombatZoneVolume"));
		return ptr;
	}


	void ResizeCombatZoneBasedOnNextThreshold();
	void ResetCombatZoneThreshold();
	void OnStateChanged(EOutOfCombatZoneVolumeActivateDeactivateAction StateChanged);
	void OnRep_IsActive();
	bool IsInCombatZone(const struct FVector& Point);
	bool IsActive();
	void InitCombatZoneThresholds();
	struct FCombatZoneVolumeSizeParam GetNextZoneThreshold();
	void ClientSetVisualizationFade(class ATBLPlayerController* LocalController, bool bShouldFade);
	bool CanResizeToNextThreshold(float NewPlayerRatio, float NewTimeRatio);
	void ActivateDeactivate(EOutOfCombatZoneVolumeActivateDeactivateAction Action);
};


// Class TBL.OutOfCombatZoneVolume_Box
// 0x0010 (0x02C8 - 0x02B8)
class AOutOfCombatZoneVolume_Box : public AOutOfCombatZoneVolume
{
public:
	struct FVector                                     BoxParams;                                                // 0x02B8(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OutOfCombatZoneVolume_Box"));
		return ptr;
	}


	void OnRep_BoxParams();
	void OnBoxParamsUpdated();
	void GetOverlappingCharacters(TArray<class ATBLCharacter*>* OutChars);
};


// Class TBL.OutOfCombatZoneVolume_Ellipse
// 0x0010 (0x02C8 - 0x02B8)
class AOutOfCombatZoneVolume_Ellipse : public AOutOfCombatZoneVolume
{
public:
	struct FVector2D                                   EllipseParams;                                            // 0x02B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x02C0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OutOfCombatZoneVolume_Ellipse"));
		return ptr;
	}


	void RecheckCollisions();
	void OnRep_EllipseParams();
	void OnEllipseParamsUpdated();
	void GetOverlappingCharacters(TArray<class ATBLCharacter*>* OutChars);
};


// Class TBL.ParryComponent
// 0x0060 (0x0500 - 0x04A0)
class UParryComponent : public UBoxComponent
{
public:
	float                                              UpperPitchTranslation;                                    // 0x04A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LowerPitchTranslation;                                    // 0x04A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PitchRotation;                                            // 0x04A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     CrouchOffset;                                             // 0x04AC(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CrouchInterpSpeed;                                        // 0x04B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     DefaultTranslation;                                       // 0x04BC(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     CurrentCrouchOffset;                                      // 0x04C8(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04D4(0x0004) MISSED OFFSET
	class USceneComponent*                             ParentComponent;                                          // 0x04D8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x20];                                      // 0x04E0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ParryComponent"));
		return ptr;
	}

};


// Class TBL.ParryTracers
// 0x0008 (0x00B0 - 0x00A8)
class UParryTracers : public UTracerType
{
public:
	bool                                               bHitTeammates;                                            // 0x00A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	struct FColor                                      DebugColor;                                               // 0x00AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ParryTracers"));
		return ptr;
	}

};


// Class TBL.PartyList
// 0x00A0 (0x03C0 - 0x0320)
class UPartyList : public UTBLUserWidget
{
public:
	class UOverlay*                                    InviteButtonOverlay;                                      // 0x0320(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UVerticalBox*                                PartyWidgetContainer;                                     // 0x0328(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UVerticalBox*                                PartyList;                                                // 0x0330(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0338(0x0010) MISSED OFFSET
	class UClass* /*UPartyListEntry*/                  PartyListEntryClass;                                      // 0x0348(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UPartyListEntry*                             SelfPartyEntry;                                           // 0x0350(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UPartyListEntry*>                     EntryWidgets;                                             // 0x0358(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FString, class UPartyListEntry*>       IdToEntryMap;                                             // 0x0368(0x0050) (CPF_ExportObject, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      MaxPartySize;                                             // 0x03B8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03B9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PartyList"));
		return ptr;
	}


	void OnVOIPTick();
	void OnPostLoadMap(class UWorld* LoadedWorld);
	void OnPartyMemberRemove(const struct FString& UserId, const struct FString& DisplayName);
	void OnPartyMemberLeave(const struct FString& UserId, const struct FString& DisplayName);
	void OnPartyMemberKick(const struct FString& UserId);
	void OnPartyMemberJoin(const struct FString& UserId, const struct FString& DisplayName);
	void OnPartyLeave(bool bResult);
	void OnPartyLeaderChange(const struct FString& UserId, const struct FString& DisplayName);
	void OnPartyInviteSendResult(bool bResult);
	void OnPartyInviteAccept(const struct FString& PartyId);
	void OnPartyDisband();
	bool IsPlayingMenu();
	void InitPartyWidget();
};


// Class TBL.PartyListEntry
// 0x0040 (0x0360 - 0x0320)
class UPartyListEntry : public UTBLUserWidget
{
public:
	class UWidgetSwitcher*                             IconSwitcher;                                             // 0x0320(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UImage*                                      LeaderIcon;                                               // 0x0328(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UImage*                                      TalkingIcon;                                              // 0x0330(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UImage*                                      MemberIcon;                                               // 0x0338(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UTBLTextBlock*                               PlayerName;                                               // 0x0340(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0348(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PartyListEntry"));
		return ptr;
	}

};


// Class TBL.PendingLevelPlayerController
// 0x0000 (0x05B0 - 0x05B0)
class APendingLevelPlayerController : public APlayerController
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PendingLevelPlayerController"));
		return ptr;
	}

};


// Class TBL.PerksComponent
// 0x00A8 (0x01B0 - 0x0108)
class UPerksComponent : public UActorComponent
{
public:
	class UDataTable*                                  PerksDataTable;                                           // 0x0108(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              HealSpeed;                                                // 0x0110(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0114(0x0004) MISSED OFFSET
	class UCurveFloat*                                 HealCurve;                                                // 0x0118(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BackstabAngle;                                            // 0x0120(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	TMap<EPerkType, struct FName>                      EnumToName;                                               // 0x0128(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class ATBLCharacter*                               OwnerCharacter;                                           // 0x0178(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass* /*ATBLCharacter*/                    CurrentSubclass;                                          // 0x0180(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass* /*ATBLCharacter*/                    CurrentClass;                                             // 0x0188(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              EagerBonusDamage;                                         // 0x0190(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SneakyBonusDamage;                                        // 0x0194(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SapperBonusDamage;                                        // 0x0198(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SniperBonusDamage;                                        // 0x019C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              OneHandWeaponSpeedBonus;                                  // 0x01A0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HelperHealthBonus;                                        // 0x01A4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bHasSprintShove : 1;                                      // 0x01A8(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bHasSprintAttack : 1;                                     // 0x01A8(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bHasSprintCharge : 1;                                     // 0x01A8(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bHasEagerBonus : 1;                                       // 0x01A8(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bHasSneakyBonus : 1;                                      // 0x01A8(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bHasSapperBonus : 1;                                      // 0x01A8(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bHasSniperBonus : 1;                                      // 0x01A8(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x01A9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PerksComponent"));
		return ptr;
	}


	void OnStartHeal(class AActor* HealedActor, EHealingSource HealingSource);
	void OnPawnRevived(class APawn* RevivedPlayer, class APawn* RevivorPlayer);
	void OnKilled(const struct FDeathDamageTakenEvent& Event);
	void ApplyHelperBonus();
};


// Class TBL.PlayerCapturePointComponent
// 0x00C0 (0x01C8 - 0x0108)
class UPlayerCapturePointComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	struct FPlayerCapturePointComponentProperties      PlayerCapturePointComponentProperties;                    // 0x0118(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_FPlayerCapturePointComponentProperties ReplicatedTeamCapturePointComponentProperties;            // 0x0120(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    PlayersInCaptureVolumeChanged;                            // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayerCompletedCapture;                                 // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBlockedStatusUpdated;                                   // 0x0158(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FReplicatedArray_ATBLCharacterPtr           PlayersInVolume;                                          // 0x0168(0x0020) (CPF_Net, CPF_RepNotify, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Bool                            bIsBlocked;                                               // 0x0188(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicatedArray_PlayerCaptureData          PlayersCapturingData;                                     // 0x01A0(0x0020) (CPF_Net, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x01C0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PlayerCapturePointComponent"));
		return ptr;
	}


	void SetPlayerCapturePointProperties(const struct FPlayerCapturePointComponentProperties& Props);
	void ResetCapturePoint();
	void RefreshActorsInCaptureZone();
	bool PlayerSatisfiesCaptureRequirments(class ATBLCharacter* Player);
	void OnTrackedCharacterKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnTrackedCharacterDestroyed(class AActor* DestroyedActor);
	void OnRep_Properties();
	void OnRep_PlayersInPlayerCapturePoint();
	void OnRep_IsBlocked();
	TArray<struct FPlayerCaptureData> GetPlayersCaptureData();
	bool GetIsBlocked();
	void EndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void DeactivatePlayerCapturePoint();
	void BeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void ActivatePlayerCapturePoint();
};


// Class TBL.PlayerClassData
// 0x0010 (0x0040 - 0x0030)
class UPlayerClassData : public UDataAsset
{
public:
	TArray<struct FCharacterTypeToCharacterAsset>      CharacterTypeToCharacterAssetMap;                         // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PlayerClassData"));
		return ptr;
	}


	static int GetCustomizationClassIndexFromClassEnum(TEnumAsByte<EAudioClassType> ClassType);
};


// Class TBL.PlayerInHudMarkerZoneInterface
// 0x0000 (0x0028 - 0x0028)
class UPlayerInHudMarkerZoneInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PlayerInHudMarkerZoneInterface"));
		return ptr;
	}


	bool IsLocalPlayerInHudMarkerZone();
};


// Class TBL.PlayerScoreList
// 0x01D8 (0x02E0 - 0x0108)
class UPlayerScoreList : public UWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0108(0x0008) MISSED OFFSET
	float                                              Lifetime;                                                 // 0x0110(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LevelUpLifeTime;                                          // 0x0114(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FGameplayTag                                DefaultTag;                                               // 0x0118(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnGenerateRowEvent;                                       // 0x0120(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnGenerateLevelUpRowEvent;                                // 0x0130(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0xF0];                                      // 0x0140(0x00F0) MISSED OFFSET
	TMap<class ATBLPlayerState*, class UWidget*>       PlayerKilledWidgetMap;                                    // 0x0230(0x0050) (CPF_ExportObject, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	class UWidget*                                     ObjectiveScoreWidget;                                     // 0x0280(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UWidget*                                     HealingScoreWidget;                                       // 0x0288(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0290(0x0010) MISSED OFFSET
	bool                                               LoadedPlayerController;                                   // 0x02A0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSuccessfulPlayerStateReplicated;                         // 0x02A1(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x6];                                       // 0x02A2(0x0006) MISSED OFFSET
	struct FTimerHandle                                CheckForPlayerStateReplication;                           // 0x02A8(0x0008) (CPF_Transient, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x30];                                      // 0x02B0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PlayerScoreList"));
		return ptr;
	}


	void PlayerStateReplicated(class APlayerState* PlayerState);
	void OnPlayerScoreEvent(const struct FScoreEventStruct& ScoreEvent);
	void OnPlayerLevelUpEvents(TArray<struct FLevelUpResult> LevelUpEvents);
	void OnInitialized(class ATBLPlayerController* PlayerOwner);
	void CheckForPlayerState();
};


// Class TBL.PlayerScoreUiInterface
// 0x0000 (0x0028 - 0x0028)
class UPlayerScoreUiInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PlayerScoreUiInterface"));
		return ptr;
	}


	void OnRemoved();
	void AddSubScoreEvent(const struct FScoreEventStruct& ScoreEvent);
	void AddScore(int Score);
};


// Class TBL.PlayerTask
// 0x0008 (0x0070 - 0x0068)
class UPlayerTask : public UGameplayTask
{
public:
	class ATBLPlayerController*                        PlayerController;                                         // 0x0068(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PlayerTask"));
		return ptr;
	}

};


// Class TBL.PodiumLocationComponent
// 0x0010 (0x04A0 - 0x0490)
class UPodiumLocationComponent : public UCapsuleComponent
{
public:
	int                                                Place;                                                    // 0x0490(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsWinner;                                                // 0x0494(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0xB];                                       // 0x0495(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PodiumLocationComponent"));
		return ptr;
	}

};


// Class TBL.PodiumLocation
// 0x0058 (0x02B0 - 0x0258)
class APodiumLocation : public AActor
{
public:
	class USceneComponent*                             SceneComponent;                                           // 0x0258(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UPodiumLocationComponent*>            LocationComponents;                                       // 0x0260(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UPodiumLocationComponent*>            VictorLocationComponents;                                 // 0x0270(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UPodiumLocationComponent*>            LoserLocationComponents;                                  // 0x0280(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FPodiumLocationData>                 VictorLocationsData;                                      // 0x0290(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FPodiumLocationData>                 LoserLocationsData;                                       // 0x02A0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PodiumLocation"));
		return ptr;
	}

};


// Class TBL.PossessableInterface
// 0x0000 (0x0028 - 0x0028)
class UPossessableInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PossessableInterface"));
		return ptr;
	}


	void EventEndPossess(class APawn* Pawn);
	void EventBeginPossess(class APawn* Pawn);
};


// Class TBL.ProgressBarCostsOverlay
// 0x01A0 (0x04B8 - 0x0318)
class UProgressBarCostsOverlay : public UProgressBar
{
public:
	float                                              OverlayPercent;                                           // 0x0318(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OverlayPercentDelegate;                                   // 0x031C(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x032C(0x0004) MISSED OFFSET
	struct FSlateBrush                                 OverlayFillImage;                                         // 0x0330(0x0088) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FSlateBrush                                 DamageFillImage;                                          // 0x03B8(0x0088) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	float                                              DamageLingerTime;                                         // 0x0440(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DamageRemovedPerSecond;                                   // 0x0444(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSlateColor                                 DamageFillColorAndOpacity;                                // 0x0448(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FSlateColor                                 OverlayFillColorAndOpacity;                               // 0x0470(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             DamageFillColorAndOpacityDelegate;                        // 0x0498(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OverlayFillColorAndOpacityDelegate;                       // 0x04A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ProgressBarCostsOverlay"));
		return ptr;
	}


	void SetOverlayPercent(float InOverlayPercent);
	void SetOverlayFillColorAndOpacity(const struct FLinearColor& InColor);
	void SetDamageFillColorAndOpacity(const struct FLinearColor& InColor);
	class UMaterialInstanceDynamic* GetFillDynamicMaterial();
};


// Class TBL.ProgressionSpec
// 0x0030 (0x00D8 - 0x00A8)
class UProgressionSpec : public UAssemblyBlueprint
{
public:
	class UDataTable*                                  XpTable;                                                  // 0x00A8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x28];                                      // 0x00B0(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ProgressionSpec"));
		return ptr;
	}

};


// Class TBL.ProjectileCollision
// 0x0018 (0x0040 - 0x0028)
class UProjectileCollision : public UObject
{
public:
	TWeakObjectPtr<class UShapeComponent>              ShapeComponent;                                           // 0x0028(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCosmeticCollision;                                       // 0x0030(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UTBLProjectileMovementComponent*             ProjectileMovement;                                       // 0x0038(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ProjectileCollision"));
		return ptr;
	}


	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo);
	bool IgnoreCharactersBehind(const struct FHitResult& Hit);
	void HandleDelayedHits();
};


// Class TBL.ProjectileOverlapEventInterface
// 0x0000 (0x0028 - 0x0028)
class UProjectileOverlapEventInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ProjectileOverlapEventInterface"));
		return ptr;
	}


	void OnProjectileOverlap(class AInventoryItem* Item, const struct FHitResult& HitResult);
};


// Class TBL.PropertyDebugger
// 0x01D0 (0x02D8 - 0x0108)
class UPropertyDebugger : public UTBLComponent
{
public:
	class ATBLCharacter*                               OtherCharacter;                                           // 0x0108(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AActor*                                      OtherActor;                                               // 0x0110(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                DisplayDebugScrollDir;                                    // 0x0118(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DisplayDebugScrollY;                                      // 0x011C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShowMenu;                                                // 0x0120(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0121(0x0003) MISSED OFFSET
	int                                                MenuDirection;                                            // 0x0124(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MenuTimer;                                                // 0x0128(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MenuHeldTime;                                             // 0x012C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MenuTimerRate;                                            // 0x0130(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	struct FString                                     SearchText;                                               // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFilterEnabled;                                           // 0x0148(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0149(0x0007) MISSED OFFSET
	double                                             LastInputTime;                                            // 0x0150(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FPropertyMenuItem>                   PropertiesMenu;                                           // 0x0158(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FPropertyMenuItem>                   PropertiesMenuUnfiltered;                                 // 0x0168(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FPropertyMenuItem                           CurrentMenu;                                              // 0x0178(0x0098) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FPropertyUndoItem>                   UndoStack;                                                // 0x0210(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FString>                             RedoStack;                                                // 0x0220(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FDebugProperty                              SelectedProperty;                                         // 0x0230(0x0020) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FDebugProperty>                      DebugProperties;                                          // 0x0250(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SelectedPropertyIndex;                                    // 0x0260(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0264(0x0004) MISSED OFFSET
	class UInputComponent*                             InputComponent;                                           // 0x0268(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UInputComponent*                             MenuInputComponent;                                       // 0x0270(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bReplicateProperties;                                     // 0x0278(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShowDebugOther;                                          // 0x0279(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x2];                                       // 0x027A(0x0002) MISSED OFFSET
	float                                              OtherCharacterTraceTime;                                  // 0x027C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               AllClassNames;                                            // 0x0280(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UActorComponent*>                     ActorComponents;                                          // 0x0290(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       DebugAllOption;                                           // 0x02A0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class ATBLHUD*                                     MyHUD;                                                    // 0x02A8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FString>                             HistoryBuffer;                                            // 0x02B0(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CurrentHistoryIndex;                                      // 0x02C0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x14];                                      // 0x02C4(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PropertyDebugger"));
		return ptr;
	}


	void ToggleShowDebugOther();
	void ToggleReplication();
	void ServerSetOtherCharacter(class ATBLCharacter* Other);
	void ServerSetOtherActor(class AActor* Other);
	void ServerGetSelectedClass(const struct FDebugProperty& Property);
	void ServerGetBaseClass(const struct FName& BaseObj);
	void ServerEnableReplication(bool bReplicate);
	void ServerDeleteDebugProperty(bool bFromEnd);
	void ServerAddDebugProperty(const struct FDebugProperty& Property);
	void PrintToFile();
	void PreviousProperty();
	void OnPossessed(class APawn* NewPawn);
	void OnMovementSync(class UMovementDebugger* MovementDebugger);
	void NextProperty();
	void MenuUpPressed();
	void MenuRight();
	void MenuReleased();
	void MenuPageUp();
	void MenuPageDown();
	void MenuOpen();
	void MenuLeft();
	void MenuDownPressed();
	void MenuDelete();
	void MenuClose();
	void MenuBackSpace();
	void MenuAdd();
	void InitHUD();
	bool HandleFilterText(const struct FString& Char);
	class UStruct* GetOverrideSelectedClass(const struct FDebugProperty& Property);
	class UStruct* GetOverrideBaseClass(const struct FName& BaseObj);
	void FindProperty(const struct FString& PropName);
	static void DrawProperty(class UCanvas* Canvas, const struct FString& PropName, const struct FString& PropVal, float* XPos, float* YPos);
	void DrawDebug(class UCanvas* Canvas);
	void DisplayDebugScrollUp();
	void DisplayDebugScrollReleased();
	void DisplayDebugScrollDown();
	void DebugInputChar(const struct FString& Char);
	void CreateMenu();
	void CloseDebugger();
	void ClientReturnSelectedClass(class UStruct* Struct);
	void ClearFilter();
	void ApplyFilter(const struct FString& Text);
};


// Class TBL.PushableSplineActor
// 0x0030 (0x0340 - 0x0310)
class APushableSplineActor : public ATBLActor
{
public:
	class USplineComponent*                            SplineComponentGenerated;                                 // 0x0310(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USplineComponent*                            SplineComponentOutline;                                   // 0x0318(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USceneComponent*                             DefaultSceneComponent;                                    // 0x0320(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FPushableEndPoint>                   PushableEndPoints;                                        // 0x0328(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              StartingDistance;                                         // 0x0338(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               AllSubLevelsLoaded;                                       // 0x033C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               AllowConstructionScriptToRun;                             // 0x033D(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x033E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PushableSplineActor"));
		return ptr;
	}


	void OnLevelLoaded();
};


// Class TBL.PushableComponent
// 0x03C0 (0x04C8 - 0x0108)
class UPushableComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0108(0x0018) MISSED OFFSET
	class UTeamCapturePointComponent*                  TeamCapturePointComponent;                                // 0x0120(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UHudMarkerDisplayComponent*                  ObjectiveStatusDisplay;                                   // 0x0128(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStatsComponent*                             StatsComponent;                                           // 0x0130(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USplineComponent*                            SplineComponent;                                          // 0x0138(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class APushableSplineActor*                        SplineActor;                                              // 0x0140(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_AActorPtr                       ReplicatedSplineActor;                                    // 0x0148(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EPushableMovementType                              PushableMovementType;                                     // 0x0160(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0161(0x0007) MISSED OFFSET
	struct FReplicated_EPushableMovementType           ReplicatedPushableMovementType;                           // 0x0168(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	TArray<class AActor*>                              FollowerPushables;                                        // 0x0180(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_FollowerPushables               ReplicatedFollowerPushables;                              // 0x0190(0x0020) (CPF_Net, CPF_RepNotify, CPF_NativeAccessSpecifierPublic)
	float                                              StartingDistance;                                         // 0x01B0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TimeToCompleteSeconds;                                    // 0x01B4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Float                           ReplicatedTimeToCompleteSeconds;                          // 0x01B8(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxSpeed;                                                 // 0x01D0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01D4(0x0004) MISSED OFFSET
	TArray<class UAkAudioEvent*>                       PlayMovingSounds;                                         // 0x01D8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAkAudioEvent*>                       StopMovingSounds;                                         // 0x01E8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisablePawnCollisionOnSkeletalMeshWhenActive;            // 0x01F8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bTestExperimentalTeleport;                                // 0x01F9(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bTeleportWithPhysics;                                     // 0x01FA(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAllowDisableOfPhysicsForOneTick;                         // 0x01FB(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x01FC(0x0004) MISSED OFFSET
	struct FReplicated_Bool                            PushableActive;                                           // 0x0200(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Float_FullPrecision             PushableProgressAuthority;                                // 0x0218(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Int32                           CurrentEndPoint;                                          // 0x0230(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PushableProgress;                                         // 0x0248(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUpdateMarkerWithProgress;                                // 0x024C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShowHudProgressForCurrentSplineSegment;                  // 0x024D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUpdateMarkerWithHealth;                                  // 0x024E(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x1];                                       // 0x024F(0x0001) MISSED OFFSET
	float                                              CurrentSpeedScale;                                        // 0x0250(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0254(0x0004) MISSED OFFSET
	struct FReplicated_UInt8                           ReplicatedMovementState;                                  // 0x0258(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPushableActivated;                                      // 0x0270(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPushableCompleted;                                      // 0x0280(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPushableProgressUpdated;                                // 0x0290(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPushableReachedEndPoint;                                // 0x02A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPushableMovementTypeChanged;                            // 0x02B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FPushableComponentProperties                PushableComponentProperties;                              // 0x02C0(0x0024) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x4];                                       // 0x02E4(0x0004) MISSED OFFSET
	struct FReplicated_FPushableComponentProperties    ReplicatedPushableComponentProperties;                    // 0x02E8(0x0038) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FFollowerPushableComponentProperties        FollowerPushableComponentProperties;                      // 0x0320(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_FFollowerPushableComponentProperties ReplicatedFollowerPushableComponentProperties;            // 0x0328(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	TArray<struct FPushableEndPoint>                   PushableEndPoints;                                        // 0x0340(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicatedArray_PushableEndPoints          ReplicatedPushableEndPoints;                              // 0x0350(0x0020) (CPF_Net, CPF_RepNotify, CPF_NativeAccessSpecifierPublic)
	struct FDataTableRowSelection                      PushingIntervalScoreEvent;                                // 0x0370(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FDataTableRowSelection                      PushingCompleteScoreEvent;                                // 0x0388(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanBeBasedWhilePushable;                                 // 0x03A0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x3];                                       // 0x03A1(0x0003) MISSED OFFSET
	float                                              LeaderStartingDistance;                                   // 0x03A4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              HitchTime;                                                // 0x03A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x4];                                       // 0x03AC(0x0004) MISSED OFFSET
	class UPrimitiveComponent*                         PushingCollisionComponent;                                // 0x03B0(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      OwnerSiegeMesh;                                           // 0x03B8(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x58];                                      // 0x03C0(0x0058) MISSED OFFSET
	class UAkComponent*                                OwnerAKComponent;                                         // 0x0418(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData10[0x10];                                      // 0x0420(0x0010) MISSED OFFSET
	class UPushingComponent*                           OwnersPushingComponent;                                   // 0x0430(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FReplicated_Bool                            PushableIsReversing;                                      // 0x0438(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FReplicated_Float                           PushableReverseEndProgress;                               // 0x0450(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData11[0x8];                                       // 0x0468(0x0008) MISSED OFFSET
	TSet<int>                                          CompletedEndPoints;                                       // 0x0470(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	bool                                               IsPlayingTravelSound;                                     // 0x04C0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData12[0x7];                                       // 0x04C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PushableComponent"));
		return ptr;
	}


	void SkipToEndOfCurrentEndPoint();
	void SetPushingCollisionComponent(class UPrimitiveComponent* NewPushingCollisionComponent);
	void SetPushableMovementType(EPushableMovementType NewMovementType);
	void SetPushableComponentProperties(const struct FPushableComponentProperties& Props);
	void SetFollowerPushableComponentProperties(const struct FFollowerPushableComponentProperties& Props);
	void SetCurrentEndPointCinematic(bool CinematicEndPoint);
	void ReversePushableByDistance(float Distance);
	void ResetProgress(float NewProgress);
	void ReConfigurePushable(EPushableMovementType NewMovementType, const struct FPushableComponentProperties& IndependentAndLeaderProperties, const struct FFollowerPushableComponentProperties& FollowerProperties, class APushableSplineActor* NewSplineActor, TArray<struct FPushableEndPoint> NewEndPoints, TArray<class AActor*> NewFollowerPushables, float TimeToComplete, float TravelSpeedToNewSpline, const struct FLatentActionInfo& LatentInfo);
	void PushableMoveDelegateComplete();
	void ProceedToNextEndPoint();
	void OnRep_ReplicatedSplineActor();
	void OnRep_ReplicatedMovementState();
	void OnRep_PushableProgressAuthority();
	void OnRep_PushableMovementType();
	void OnRep_PushableEndPoints();
	void OnRep_PushableComponentProperties();
	void OnRep_PushableActive();
	void OnRep_FollowerPushables();
	void OnRep_FollowerPushableComponentProperties();
	void OnRep_CurrentEndPoint();
	void OnPlayersInCaptureVolumeChanged(TArray<class ATBLCharacter*> Players);
	void OnOwningTeamHasChanged(class ATBLTeam* OwningTeam);
	void OnHealthChanged(float Amount, class AActor* Initiator);
	void OnControllingTeamHasChanged(class ATBLTeam* ControllingTeam);
	void OnCaptureStateChanged(TEnumAsByte<ETeamCapturePointComponentState> CaptureState);
	bool IsPushableActive();
	bool IsLeader();
	bool IsIndependent();
	bool IsFollower();
	class APushableSplineActor* GetSplineActor();
	TArray<class UPrimitiveComponent*> GetSimulatingPhysicsComponents();
	class UPrimitiveComponent* GetPushingCollisionComponent();
	void GetPushableProgressSummary(float* Progress, struct FPushableEndPoint* OutCurrentEndPoint, float* ProgressPercent);
	float GetProgressToNextPoint();
	void FollowerPushableMovementTypeUpdated();
	void CheckForBlockingItemCollision();
	void AddPushableAuthorityProgress(float Progress);
	void ActivatePushable(bool Active);
};


// Class TBL.PushableSiegeActor
// 0x00F0 (0x0400 - 0x0310)
class APushableSiegeActor : public ATBLActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0310(0x0010) MISSED OFFSET
	class USceneComponent*                             DefaultSceneComponent;                                    // 0x0320(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                AvoidanceUID;                                             // 0x0328(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FNavAvoidanceMask                           AvoidanceGroup;                                           // 0x032C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseRVOAvoidance;                                         // 0x0330(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0331(0x000F) MISSED OFFSET
	float                                              AvoidanceHeight;                                          // 0x0340(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0344(0x0008) MISSED OFFSET
	struct FVector                                     AvoidanceLocation;                                        // 0x034C(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UPhysicsAsset*                               StationaryPhysAsset;                                      // 0x0358(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UPhysicsAsset*                               PushablePhysAsset;                                        // 0x0360(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UPhysicsAsset*                               StationaryPhysAssetLowLod;                                // 0x0368(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UPhysicsAsset*                               PushablePhysAssetLowLod;                                  // 0x0370(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDedicatedServerUseLowLodPhysics;                         // 0x0378(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0379(0x0003) MISSED OFFSET
	int                                                LowLodPhysAssetLevel;                                     // 0x037C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UPushableComponent*                          PushableComponent;                                        // 0x0380(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UPushingComponent*                           PushingComponent;                                         // 0x0388(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UTeamCapturePointComponent*                  TeamCapturePoint;                                         // 0x0390(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UHudMarkerDisplayComponent*                  HudMarkerDisplay;                                         // 0x0398(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UTBLNavModifierComponent*                    TBLNavModifier;                                           // 0x03A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      SiegeMesh;                                                // 0x03A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UBoxComponent*                               PawnPushingCollisionComponent;                            // 0x03B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USceneComponent*                             HudMarkerComponentLocation;                               // 0x03B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAkComponent*                                AudioComponent;                                           // 0x03C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FReplicated_UInt8                           ReplicatedSiegeState;                                     // 0x03C8(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FMulticastScriptDelegate                    PushableReachedEndPoint;                                  // 0x03E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FMulticastScriptDelegate                    PushableComplete;                                         // 0x03F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PushableSiegeActor"));
		return ptr;
	}


	void UpdateSkeletalMesh();
	void SiegeStateAnimationUpdated(ESiegeActorState NewState);
	void SetSiegeState(ESiegeActorState NewState);
	void SetAvoidanceEnabled(bool bEnable);
	void OnRep_ReplicatedSiegeState();
	void OnPushableReachedEndPoint(int EndPointNum, const struct FPushableEndPoint& EndPoint, bool IsLastEndPoint);
	void OnPushableCompleted();
	void OnPushableActivated(bool bIsActive);
	void OnMeshLODChanged();
	void AddLogEntry(const struct FString& LogEntry);
};


// Class TBL.PushingComponent
// 0x0120 (0x0228 - 0x0108)
class UPushingComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnOverlapCharacters;                                      // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bCannotBePushed;                                          // 0x0128(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0129(0x0003) MISSED OFFSET
	float                                              MinPushSpeed;                                             // 0x012C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxPushSpeed;                                             // 0x0130(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FallingPushSpeed;                                         // 0x0134(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FallingPushBackSpeed;                                     // 0x0138(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FallingOverlapOffset;                                     // 0x013C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CollisionProfileName;                                     // 0x0140(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     PushedVelocity;                                           // 0x0148(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                BasePushingPriority;                                      // 0x0154(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FReplicated_Int32                           PushingPriority;                                          // 0x0158(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FReplicated_FVector                         DesiredPushedVelocity;                                    // 0x0170(0x0020) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EPushingDirection                                  PushingDirection;                                         // 0x0190(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0191(0x0003) MISSED OFFSET
	float                                              PushedTime;                                               // 0x0194(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     PreviousLocation;                                         // 0x0198(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     Velocity;                                                 // 0x01A4(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bOwnerIsCharacter;                                        // 0x01B0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x7];                                       // 0x01B1(0x0007) MISSED OFFSET
	TMap<int, int>                                     PushingInstances;                                         // 0x01B8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                PushingInstanceId;                                        // 0x0208(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x4];                                       // 0x020C(0x0004) MISSED OFFSET
	struct FPushOverTime                               PushOverTimeParams;                                       // 0x0210(0x0018) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.PushingComponent"));
		return ptr;
	}


	void UpdatePushingWhileFalling(float DeltaSeconds);
	void UpdatePushing(float DeltaSeconds, const struct FVector& OldLocation);
	void UpdatePushed(float DeltaTime);
	bool ShouldPush(class AActor* OtherActor);
	void SetPushingDirection(EPushingDirection Direction);
	void SetPushedVelocity(const struct FVector& PushVel);
	void PushActor(class AActor* Actor, const struct FVector& PushVel);
	void OnRep_PushingPriority();
	void OnRep_DesiredPushedVelocity();
	void OnCharacterMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity);
	bool HasEqualPriority(class AActor* OtherActor);
	struct FVector GetPushVelocity(class AActor* PushingActor, class AActor* OtherActor);
	float GetPushingRadius(class AActor* Actor);
	struct FVector GetOwnerVelocity();
	struct FVector GetFallingPushDirection(class AActor* PushingActor, class AActor* OtherActor, float DeltaSeconds);
	TArray<class UPrimitiveComponent*> GetCollisionComponents();
	bool FindOverlappingCharacters(const struct FVector& Offset, TArray<class ATBLCharacterBase*>* OutCharacters);
};


// Class TBL.QuestPool
// 0x0070 (0x0178 - 0x0108)
class UQuestPool : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnQuestsChanged;                                          // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>                DailySoftQuestStubs;                                      // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<TSoftClassPtr<class UClass>>                WeeklySoftQuestStubs;                                     // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<TScriptInterface<class UQuest>>             DailyQuests;                                              // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<TScriptInterface<class UQuest>>             WeeklyQuests;                                             // 0x0158(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UObject*>                             ActiveQuests;                                             // 0x0168(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.QuestPool"));
		return ptr;
	}


	void SlotQuest(const TScriptInterface<class UQuest>& Quest);
	void OnRep_ActiveQuests();
	void OnQuestProgressChanged(class UObject* Quest, float Progress);
	TArray<TScriptInterface<class UQuest>> GetWeeklyQuests();
	int GetMaxActiveQuests();
	TArray<TScriptInterface<class UQuest>> GetDailyQuests();
	TArray<TScriptInterface<class UQuest>> GetActiveQuests();
	void AbandonQuest(const TScriptInterface<class UQuest>& Quest);
};


// Class TBL.TBLQuestsBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UTBLQuestsBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLQuestsBlueprintLibrary"));
		return ptr;
	}


	static bool GetQuestsEnabled(class UObject* WorldContextObject);
	static bool GetCampaignsEnabled(class UObject* WorldContextObject);
};


// Class TBL.QuestStub
// 0x0198 (0x01C0 - 0x0028)
class UQuestStub : public UObject
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0028(0x0030) MISSED OFFSET
	float                                              Progress;                                                 // 0x0058(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FText                                       Title;                                                    // 0x0060(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	struct FText                                       Description;                                              // 0x0078(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	struct FText                                       GoalText;                                                 // 0x0090(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	struct FSlateBrush                                 Icon;                                                     // 0x00A8(0x0088) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	struct FSlateBrush                                 Image;                                                    // 0x0130(0x0088) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	EQuestDifficulty                                   Difficulty;                                               // 0x01B8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x7];                                       // 0x01B9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.QuestStub"));
		return ptr;
	}

};


// Class TBL.RallyPoint
// 0x00A0 (0x0358 - 0x02B8)
class ARallyPoint : public AAINavPoint
{
public:
	TSet<class UClass* /*APawn*/>                      ProhibitedClasses;                                        // 0x02B8(0x0050) (CPF_Edit, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	TSet<class UClass* /*APawn*/>                      AllowedClasses;                                           // 0x0308(0x0050) (CPF_Edit, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.RallyPoint"));
		return ptr;
	}


	bool IsAllowedPawnClass(class APawn* Pawn);
	bool HasPawnClassFilters();
};


// Class TBL.RepairableComponent
// 0x0010 (0x0470 - 0x0460)
class URepairableComponent : public UInteractableComponent
{
public:
	float                                              HealingAmount;                                            // 0x0460(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               CanRepairDeadActor;                                       // 0x0464(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0465(0x0003) MISSED OFFSET
	TWeakObjectPtr<class UStatsComponent>              StatsComponent;                                           // 0x0468(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.RepairableComponent"));
		return ptr;
	}

};


// Class TBL.ReplicatedCollisionActor
// 0x0008 (0x0318 - 0x0310)
class AReplicatedCollisionActor : public ATBLActor
{
public:
	bool                                               bReplicatedCollision;                                     // 0x0310(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0311(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ReplicatedCollisionActor"));
		return ptr;
	}


	void SetReplicatedCollision(bool bEnabled);
	void OnRep_ReplicatedCollision();
	void OnCollisionChanged(bool bEnabled);
	bool GetReplicatedCollision();
};


// Class TBL.ReplicatedSubobjectInterface
// 0x0000 (0x0028 - 0x0028)
class UReplicatedSubobjectInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ReplicatedSubobjectInterface"));
		return ptr;
	}

};


// Class TBL.ReviveOthersTask
// 0x0000 (0x0050 - 0x0050)
class UReviveOthersTask : public UTBLAchievementTaskCountable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ReviveOthersTask"));
		return ptr;
	}

};


// Class TBL.ReviveOthersWorker
// 0x0000 (0x00C0 - 0x00C0)
class UReviveOthersWorker : public UTBLAchievementWorker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ReviveOthersWorker"));
		return ptr;
	}


	void OnRevivedOtherPlayer(class APawn* Pawn, class ATBLPlayerController* Controller);
};


// Class TBL.RewardTable
// 0x0000 (0x00C8 - 0x00C8)
class URewardTable : public UDataTable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.RewardTable"));
		return ptr;
	}

};


// Class TBL.RichTextEmbeddedWidgetInterface
// 0x0000 (0x0028 - 0x0028)
class URichTextEmbeddedWidgetInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.RichTextEmbeddedWidgetInterface"));
		return ptr;
	}


	void OnReceivedEmbedInfo(const struct FRichTextEmbedInfo& Info);
};


// Class TBL.RoundBasedSpawnQueuer
// 0x0010 (0x0090 - 0x0080)
class URoundBasedSpawnQueuer : public USpawnQueuer
{
public:
	TArray<class AController*>                         PlayersWaitingToSpawn;                                    // 0x0080(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.RoundBasedSpawnQueuer"));
		return ptr;
	}

};


// Class TBL.ScrollWheelCapture
// 0x0020 (0x0128 - 0x0108)
class UScrollWheelCapture : public UWidget
{
public:
	struct FMulticastScriptDelegate                    OnMouseWheelScrolledEvent;                                // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0118(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ScrollWheelCapture"));
		return ptr;
	}

};


// Class TBL.SeatSpawner
// 0x0060 (0x0650 - 0x05F0)
class ASeatSpawner : public ASpawner
{
public:
	TArray<TWeakObjectPtr<class USiegeMountPoint>>     CurrentSeatMountComponentList;                            // 0x05F0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class USiegeMountPoint>>     PendingSpawnSeatMountComponentList;                       // 0x0600(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class USiegeMountPoint>>     SeatMountComponentIndexList;                              // 0x0610(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class USiegeMountPoint>>     SeatMountComponentList;                                   // 0x0620(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FSeatEntry>                          SeatActorList;                                            // 0x0630(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Protected, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ESeatSelectionMode                                 SeatSelectionMode;                                        // 0x0640(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0641(0x0003) MISSED OFFSET
	int                                                SeatSelectionIndex;                                       // 0x0644(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0648(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SeatSpawner"));
		return ptr;
	}

};


// Class TBL.TBLSeverBrowserEntryRowStyle
// 0x07C8 (0x07F8 - 0x0030)
class UTBLSeverBrowserEntryRowStyle : public USlateWidgetStyleContainerBase
{
public:
	struct FTableRowStyle                              RowStyle;                                                 // 0x0030(0x07C8) (CPF_Edit, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLSeverBrowserEntryRowStyle"));
		return ptr;
	}

};


// Class TBL.ServerBrowserList
// 0x0208 (0x0310 - 0x0108)
class UServerBrowserList : public UWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0108(0x0008) MISSED OFFSET
	float                                              ItemHeight;                                               // 0x0110(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x14];                                      // 0x0114(0x0014) MISSED OFFSET
	TEnumAsByte<ESelectionMode>                        SelectionMode;                                            // 0x0128(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0129(0x0003) MISSED OFFSET
	struct FName                                       TableRowStyleName;                                        // 0x012C(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnGenerateRowEvent;                                       // 0x0134(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnGetServerFilterSettingsEvent;                           // 0x0144(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnLoadingProgressStatusChangedEvent;                      // 0x0154(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnRefreshServerCompleteEvent;                             // 0x0164(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnSelectionChangedEvent;                                  // 0x0174(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x14];                                      // 0x0184(0x0014) MISSED OFFSET
	class UTBLScrollBarStyleDataAsset*                 ScrollBarStyle;                                           // 0x0198(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x170];                                     // 0x01A0(0x0170) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ServerBrowserList"));
		return ptr;
	}


	void UseSavedSort();
	void SortServersByServerType(bool Descending);
	void SortServersByServerName(bool Descending);
	void SortServersByPlayerNumbers(bool Descending);
	void SortServersByPing(bool Descending);
	void SortServersByMapName(bool Descending);
	void SortServersByGameMode(bool Descending);
	void SelectWidget(const struct FBlueprintSessionResult& Item);
	void SelectFirstWidget();
	void RefreshServerList(EServerListType ListType);
	void RefreshServerEntry(const struct FBlueprintSessionResult& SessionResult);
	void OnRefreshCompleted(bool bSuccess, EServerListType ListType);
	void OnQueryCompleted(bool bSuccess, EServerListType ListType);
	void OnPingServerComplete(const struct FBlueprintSessionResult& PingedSession);
	class UWidget* GetSelectedWidget();
	void GetSelectedSession(struct FBlueprintSessionResult* Out);
	int GetCurrentFilteredItemsCount();
	void FetchFilteredList();
	void CreateFakeServers(int NumberOfServers, TArray<struct FString> ServerNames, TArray<struct FString> MapNamesAndGameModes, TArray<int> ListOfPossibleMaxPlayers);
};


// Class TBL.SGComponent_TargetLocation
// 0x0000 (0x0118 - 0x0118)
class USGComponent_TargetLocation : public UST_SGComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SGComponent_TargetLocation"));
		return ptr;
	}

};


// Class TBL.SiegeMountPoint
// 0x0160 (0x03D0 - 0x0270)
class USiegeMountPoint : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0270(0x0010) MISSED OFFSET
	struct FName                                       CharacterAttachSocketName;                                // 0x0280(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AInventoryItem*/                   SiegeInventoryItemClass;                                  // 0x0288(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CameraYawRotationLimit;                                   // 0x0290(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CameraPitchRotationLimit;                                 // 0x0294(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    RotationLimitOffset;                                      // 0x0298(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FName                                       MountAnimation;                                           // 0x02A4(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxMountDistance;                                         // 0x02AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxMountAngle;                                            // 0x02B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxMountAngleOffset;                                      // 0x02B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimationSet*/                    CharacterAnimationSet;                                    // 0x02B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimationSet*/                    CharacterAnimationSet1P;                                  // 0x02C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCanDismount : 1;                                         // 0x02C8(0x0001) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x02C9(0x0007) MISSED OFFSET
	struct FMountBlendParams                           MountBlendParams;                                         // 0x02D0(0x00D0) (CPF_Transient, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               MountedCharacter;                                         // 0x03A0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              SiegeInventoryItem;                                       // 0x03A8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                HorizLockId;                                              // 0x03B0(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                VertLockId;                                               // 0x03B4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseMountCombatState;                                     // 0x03B8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x03B9(0x0003) MISSED OFFSET
	TWeakObjectPtr<class UInteractableComponent>       CachedInteractableComponent;                              // 0x03BC(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bPendingSpawn;                                            // 0x03C4(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0xB];                                       // 0x03C5(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SiegeMountPoint"));
		return ptr;
	}


	void UsePressed(class APawn* InPawn, class UInteractableComponent* InInteractable);
	void UpdateInterpToMountLocation(float DeltaSeconds);
	void SetInteractableComponent(class UInteractableComponent* Interactable);
	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState);
	void OnCharacterKilledDuringInterp(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnCharacterKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void DismountPressed();
	bool CanMount(class APawn* Pawn);
	void BroadcastPendingSpawn(bool bNewPendingSpawn);
	void BroadcastInterpToMountLocation(class ATBLCharacter* Character);
	void BroadcastDismount(EDismountType DismountType);
};


// Class TBL.SignificanceInterface
// 0x0000 (0x0028 - 0x0028)
class USignificanceInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SignificanceInterface"));
		return ptr;
	}

};


// Class TBL.SimpleSpawner
// 0x0000 (0x05F0 - 0x05F0)
class ASimpleSpawner : public ASpawner
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SimpleSpawner"));
		return ptr;
	}

};


// Class TBL.SingleTargetMethod
// 0x0018 (0x01D0 - 0x01B8)
class USingleTargetMethod : public UAbilityTargetMethod
{
public:
	int                                                Version;                                                  // 0x01B8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bTargetSelf;                                              // 0x01BC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01BD(0x0003) MISSED OFFSET
	float                                              DelayFinishTime;                                          // 0x01C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0xC];                                       // 0x01C4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SingleTargetMethod"));
		return ptr;
	}


	void DelayFinish();
};


// Class TBL.SourceType
// 0x0010 (0x0040 - 0x0030)
class USourceType : public UDataAsset
{
public:
	struct FString                                     Name;                                                     // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SourceType"));
		return ptr;
	}

};


// Class TBL.SpawnLocationComponent
// 0x0010 (0x04A0 - 0x0490)
class USpawnLocationComponent : public UCapsuleComponent
{
public:
	int                                                Priority;                                                 // 0x0490(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0494(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SpawnLocationComponent"));
		return ptr;
	}

};


// Class TBL.SpawnerScoreMethod
// 0x0000 (0x0028 - 0x0028)
class USpawnerScoreMethod : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SpawnerScoreMethod"));
		return ptr;
	}


	void GetSpawnerScore(const struct FVector& SpawnLocation, TArray<struct FCharacterInfo> CharacterList, const struct FSpawnScoringConfig& Config, TMap<EFaction, struct FSpawnScoreData>* ScoreResult);
};


// Class TBL.SpawnerScoreMethod_FFA
// 0x0000 (0x0028 - 0x0028)
class USpawnerScoreMethod_FFA : public USpawnerScoreMethod
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SpawnerScoreMethod_FFA"));
		return ptr;
	}

};


// Class TBL.SpawnQueuerComponent
// 0x0000 (0x0108 - 0x0108)
class USpawnQueuerComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SpawnQueuerComponent"));
		return ptr;
	}

};


// Class TBL.SpawnSequence
// 0x0168 (0x03C0 - 0x0258)
class ASpawnSequence : public AActor
{
public:
	TArray<class ASpawner*>                            Spawners;                                                 // 0x0258(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class ASpawner*>                            SpawnerQueue;                                             // 0x0268(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class ASpawner*>                            PushedSpawners;                                           // 0x0278(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsActive;                                                // 0x0288(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0289(0x0003) MISSED OFFSET
	int                                                CurrentIndex;                                             // 0x028C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           Faction;                                                  // 0x0290(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0291(0x0003) MISSED OFFSET
	int                                                SimultaneousWaves;                                        // 0x0294(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SecondsBetweenWaves;                                      // 0x0298(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOverrideWaveTimingToHalfOfSecondsBetweenWaves;           // 0x029C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAlwaysKeepOneWaveActive;                                 // 0x029D(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bLoop;                                                    // 0x029E(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFastFirstSpawn;                                          // 0x029F(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 SecondsBetweenWavesPlayerCountBonus;                      // 0x02A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MaxPlayersPlayerCountBonus;                               // 0x02A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSpawnWaveParamOverrides                    SpawnWaveParams;                                          // 0x02B0(0x00A0) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSequenceFinished;                                       // 0x0350(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	TSet<class ASpawnWave*>                            ActiveWaves;                                              // 0x0360(0x0050) (CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x10];                                      // 0x03B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SpawnSequence"));
		return ptr;
	}


	void StartNextWave();
	void SetSpawnerList(TArray<class ASpawner*> SpawnerList);
	void SetSecondsBetweenWaves(float InSecondsBetweenWaves);
	void RemoveSpawner(class ASpawner* Spawner);
	void PushSpawner(class ASpawner* Spawner);
	void Initialize(const struct FSpawnSequenceProperties& Properties);
	void HandleSpawnWaveNotJoinable(class ASpawnWave* SpawnWave);
	void HandleSpawnWaveDestroyed(class AActor* SpawnWave);
	void ForceSpawnController(class AController* Controller);
	void EmptySpawnerList();
	void Deactivate();
	void AddSpawner(class ASpawner* Spawner);
	void ActivateDeactivate(ESpawnSequenceActivateDeactivateAction Action);
	bool Activate();
};


// Class TBL.CarryableSpawnSpec
// 0x0010 (0x0038 - 0x0028)
class UCarryableSpawnSpec : public UObject
{
public:
	class UClass* /*AInventoryItem*/                   Carryable;                                                // 0x0028(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AssignmentPercentage;                                     // 0x0030(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                GuaranteedMinimumNum;                                     // 0x0034(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CarryableSpawnSpec"));
		return ptr;
	}

};


// Class TBL.RandomCarryableSpawnLoadout
// 0x0030 (0x0058 - 0x0028)
class URandomCarryableSpawnLoadout : public UObject
{
public:
	TArray<struct FRandomCarryableSpawnSpec>           CarryableSpecs;                                           // 0x0028(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     Status;                                                   // 0x0038(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     TotalPercent;                                             // 0x0048(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.RandomCarryableSpawnLoadout"));
		return ptr;
	}


	class UClass* /*AInventoryItem*/ GetRandomCarryable();
};


// Class TBL.SpecialSpawnSpec
// 0x0098 (0x00C0 - 0x0028)
class USpecialSpawnSpec : public UObject
{
public:
	struct FText                                       SpawnName;                                                // 0x0028(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	class UTexture2D*                                  SpawnWaveIcon;                                            // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bJoinAfterDeath;                                          // 0x0048(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAutospawnAllowed;                                        // 0x0049(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPromptedSpawn;                                           // 0x004A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseSubclassesOfAllowedClasses;                           // 0x004B(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIgnorePlayerOwnership;                                   // 0x004C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bForceBotsUseLoadout;                                     // 0x004D(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
	float                                              AutoVoHorseAllyPercent;                                   // 0x0050(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AutoVoHorseEnemyPercent;                                  // 0x0054(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AutoVoCavalaryChargeDelay;                                // 0x0058(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AutoVoOffenseChargeDelay;                                 // 0x005C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AutoVoAllyCavalaryIncomingDelay;                          // 0x0060(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AutoVoEnemyCavalryIncomingDelay;                          // 0x0064(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHorse;                                                   // 0x0068(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	int                                                MaxHorseCount;                                            // 0x006C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<class UClass* /*ATBLCharacter*/, class UClass* /*ULoadoutSelection*/> AllowedClasses;                                           // 0x0070(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SpecialSpawnSpec"));
		return ptr;
	}


	bool IsHorseWave();
	bool IsAllowedClass(class UClass* /*ATBLCharacter*/ CharacterClass);
	bool HasAllowedClassList();
	class UClass* /*ULoadoutSelection*/ GetRandomClassLoadout();
	int GetMaxHorseCount(class ASpawnWave* SpawnWave, EFaction FactionOverride);
	class UClass* /*ULoadoutSelection*/ GetAllowedClassLoadout(class UClass* /*ATBLCharacter*/ CharacterClass);
	void GetAllowedClassesSet(class ATBLPlayerController* TargetController, TSet<class UClass* /*ATBLCharacter*/>* AllowedClassesSet);
	void GetAllowedClassesList(class ATBLPlayerController* TargetController, TArray<class UClass* /*ATBLCharacter*/>* AllowedClassesList);
	TMap<class UClass* /*ATBLCharacter*/, class UClass* /*ULoadoutSelection*/> GetAllowedClasses();
	bool ForceBotsUseLoadout();
	bool CanSpawnHorse(class ASpawnWave* SpawnWave);
};


// Class TBL.SpecialItemAbility
// 0x0070 (0x0098 - 0x0028)
class USpecialItemAbility : public UObject
{
public:
	float                                              MaxCharge;                                                // 0x0028(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnChargeUpdated;                                          // 0x0030(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSpecialItemEquip;                                       // 0x0040(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSpecialItemUsed;                                        // 0x0050(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSpecialItemUseFailed;                                   // 0x0060(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              SpecialItem;                                              // 0x0070(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentCharge;                                            // 0x0078(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ESpecialItemChargeType                             LastChargeType;                                           // 0x007C(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
	int                                                LastStackCount;                                           // 0x0080(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EEquippedState                                     LastEquippedState;                                        // 0x0084(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsUsing : 1;                                             // 0x0085(0x0001) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0086(0x0002) MISSED OFFSET
	class ATBLCharacter*                               OwnerCharacter;                                           // 0x0088(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0090(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SpecialItemAbility"));
		return ptr;
	}


	void OnUseItem();
	void OnStartHeal(class AActor* HealedActor, EHealingSource HealingSource);
	void OnRechargeTimer();
	void OnPawnRevived(class APawn* RevivedPlayer, class APawn* RevivorPlayer);
	void OnParrySuccess(class ATBLCharacter* ThisCharacter, class ATBLCharacter* OtherCharacter, const struct FParryEventState& ParryEventState);
	void OnKilled(const struct FDeathDamageTakenEvent& Event);
	void OnItemStackChanged(class AInventoryItem* Item, int Delta);
	void OnEquippedItemsChanged();
	void OnDamageTaken(const struct FDamageTakenEvent& Event);
	void OnDamageCaused(const struct FDamageTakenEvent& Event);
	void IncreaseStackCount();
	int GetPerkBonus();
	float GetMaxCharge();
	float GetCurrentCharge();
	void DecreaseStackCount();
	void BattlecryAbilityStart();
	void BattlecryAbilityEnd();
	void ApplyHelperBonus();
};


// Class TBL.SphereTargetMethod
// 0x0040 (0x0210 - 0x01D0)
class USphereTargetMethod : public UShapeTargetMethod
{
public:
	bool                                               bTargetSelf;                                              // 0x01D0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01D1(0x0003) MISSED OFFSET
	float                                              SphereRadius;                                             // 0x01D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseZLimiters;                                            // 0x01D8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x01D9(0x0003) MISSED OFFSET
	float                                              ZUpLimiter;                                               // 0x01DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ZDownLimiter;                                             // 0x01E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     SphereOffset;                                             // 0x01E4(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseTargetChannel;                                        // 0x01F0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     TargetChannel;                                            // 0x01F1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2];                                       // 0x01F2(0x0002) MISSED OFFSET
	float                                              MaxRange;                                                 // 0x01F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MaxTargets;                                               // 0x01F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<ETargetVisibilityCheck>                CheckVisibility;                                          // 0x01FC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseControllerRotation;                                   // 0x01FD(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseMountRotation;                                        // 0x01FE(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x1];                                       // 0x01FF(0x0001) MISSED OFFSET
	float                                              DelayFinishTime;                                          // 0x0200(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ESphereHitDirection                                SphereHitDirection;                                       // 0x0204(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0xB];                                       // 0x0205(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SphereTargetMethod"));
		return ptr;
	}


	void GetSphereCenter(struct FVector* SphereCenter, struct FTransform* ControllerTransform);
	void DelayFinish();
};


// Class TBL.SpinBoxInt
// 0x0400 (0x0508 - 0x0108)
class USpinBoxInt : public UWidget
{
public:
	int                                                Value;                                                    // 0x0108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FScriptDelegate                             ValueDelegate;                                            // 0x010C(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	struct FSpinBoxStyle                               WidgetStyle;                                              // 0x0120(0x02E8) (CPF_Edit, CPF_BlueprintVisible, CPF_NativeAccessSpecifierPublic)
	class USlateWidgetStyleAsset*                      Style;                                                    // 0x0408(0x0008) (CPF_ZeroConstructor, CPF_Deprecated, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                Delta;                                                    // 0x0410(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                SliderExponent;                                           // 0x0414(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSlateFontInfo                              Font;                                                     // 0x0418(0x0058) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MinDesiredWidth;                                          // 0x0470(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ClearKeyboardFocusOnCommit;                               // 0x0474(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               SelectAllTextOnCommit;                                    // 0x0475(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0476(0x0002) MISSED OFFSET
	struct FSlateColor                                 ForegroundColor;                                          // 0x0478(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnValueChanged;                                           // 0x04A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnValueCommitted;                                         // 0x04B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBeginSliderMovement;                                    // 0x04C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnEndSliderMovement;                                      // 0x04D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bOverride_MinValue : 1;                                   // 0x04E0(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bOverride_MaxValue : 1;                                   // 0x04E0(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bOverride_MinSliderValue : 1;                             // 0x04E0(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bOverride_MaxSliderValue : 1;                             // 0x04E0(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x04E1(0x0003) MISSED OFFSET
	int                                                MinValue;                                                 // 0x04E4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MaxValue;                                                 // 0x04E8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MinSliderValue;                                           // 0x04EC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MaxSliderValue;                                           // 0x04F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x14];                                      // 0x04F4(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.SpinBoxInt"));
		return ptr;
	}


	void SetValue(int NewValue);
	void SetMinValue(int NewValue);
	void SetMinSliderValue(int NewValue);
	void SetMaxValue(int NewValue);
	void SetMaxSliderValue(int NewValue);
	void SetForegroundColor(const struct FSlateColor& InForegroundColor);
	void OnSpinBoxValueCommittedEvent__DelegateSignature(int InValue, TEnumAsByte<ETextCommit> CommitMethod);
	void OnSpinBoxValueChangedEvent__DelegateSignature(int InValue);
	void OnSpinBoxBeginSliderMovement__DelegateSignature();
	int GetValue();
	int GetMinValue();
	int GetMinSliderValue();
	int GetMaxValue();
	int GetMaxSliderValue();
	void ClearMinValue();
	void ClearMinSliderValue();
	void ClearMaxValue();
	void ClearMaxSliderValue();
};


// Class TBL.StagedLevelBlueprintInterface
// 0x0000 (0x0028 - 0x0028)
class UStagedLevelBlueprintInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.StagedLevelBlueprintInterface"));
		return ptr;
	}


	TScriptInterface<class UStageInterface> GetFirstStage();
};


// Class TBL.StageInterface
// 0x0000 (0x0028 - 0x0028)
class UStageInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.StageInterface"));
		return ptr;
	}


	void StartStage();
	bool IsStageReadyToComplete();
	float GetTimeRemainingPercent();
	float GetTimeRemaining();
	int GetStageIdNum();
	class AActor* GetStageCommander(EFaction Faction);
	TScriptInterface<class UStageInterface> CompleteStage();
};


// Class TBL.StandardDamage
// 0x0030 (0x01A8 - 0x0178)
class UStandardDamage : public UAction
{
public:
	float                                              BaseDamage;                                               // 0x0178(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
	class UDamageSource*                               DamageType;                                               // 0x0180(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAttackType*                                 AttackType;                                               // 0x0188(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass* /*AInventoryItem*/                   ItemClass;                                                // 0x0190(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EDamageProperty                                    DamageProperty;                                           // 0x0198(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0199(0x0007) MISSED OFFSET
	struct FTimerHandle                                ItemDamageTimerHandle;                                    // 0x01A0(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.StandardDamage"));
		return ptr;
	}

};


// Class TBL.StartJump
// 0x0000 (0x0178 - 0x0178)
class UStartJump : public UAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.StartJump"));
		return ptr;
	}

};


// Class TBL.StartMovement
// 0x0050 (0x01C8 - 0x0178)
class UStartMovement : public UAction
{
public:
	EAbilitiesMovementSequence                         MovementSequenceName;                                     // 0x0178(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0179(0x0003) MISSED OFFSET
	float                                              StrengthScaling;                                          // 0x017C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bApplyToInitiator;                                        // 0x0180(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bExecuteClientFirst;                                      // 0x0181(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0182(0x0006) MISSED OFFSET
	TArray<class UCondition*>                          Conditions;                                               // 0x0188(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAction*>                             StartActions;                                             // 0x0198(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UAction*>                             FinishActions;                                            // 0x01A8(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementSequence*                           MovementSequence;                                         // 0x01B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementInstance*                           MovementInstance;                                         // 0x01C0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.StartMovement"));
		return ptr;
	}


	void OnStartMovement();
	void OnFinishMovement();
};


// Class TBL.StatsComponent
// 0x03D0 (0x04D8 - 0x0108)
class UStatsComponent : public UTBLComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnStatsComponentInitialized;                              // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPreBroadcastDamage;                                     // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPreDamageTaken;                                         // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDamageTaken;                                            // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPostDamageTaken;                                        // 0x0158(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDamageCaused;                                           // 0x0168(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDamageFailed;                                           // 0x0178(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnKilled;                                                 // 0x0188(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnScoredKill;                                             // 0x0198(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnExperienceLevelChanged;                                 // 0x01A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnStatChanged;                                            // 0x01B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnStatHealthChanged;                                      // 0x01C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnStaminaDrained;                                         // 0x01D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnHealOverTimeStart;                                      // 0x01E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnHealOverTimeAdded;                                      // 0x01F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnHealOverTimeEnd;                                        // 0x0208(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnNeedsHealingChanged;                                    // 0x0218(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FStatsArray                                 Stats;                                                    // 0x0228(0x0018) (CPF_Transient, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Float                           ReplicatedHealth;                                         // 0x0240(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Float                           ReplicatedMaxHealth;                                      // 0x0258(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Float                           ReplicatedStamina;                                        // 0x0270(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UStatsDelegateObject*>                StatChangedDelegates;                                     // 0x0288(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicatedArray_FModEntry                  Mods;                                                     // 0x0298(0x0020) (CPF_Net, CPF_Transient, CPF_NativeAccessSpecifierPublic)
	TArray<struct FBaseStatEntry>                      BaseStats;                                                // 0x02B8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDataTable*                                  StatsDataTable;                                           // 0x02C8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       StatsDataTableRowName;                                    // 0x02D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bStatsScaleToPlayerCount;                                 // 0x02D8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x02D9(0x0007) MISSED OFFSET
	class UCurveFloat*                                 PlayerCountHealthScalingCurve;                            // 0x02E0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bReplicateStats;                                          // 0x02E8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableRegenTimer;                                       // 0x02E9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableProjectileDamage;                                 // 0x02EA(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnableSiegeDamage;                                       // 0x02EB(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ETeamDamageOptions                                 OnTeamDamage;                                             // 0x02EC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x02ED(0x0003) MISSED OFFSET
	TArray<class UDamageSource*>                       AllowedDamageSource;                                      // 0x02F0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FStatRegeneration>                   StatRegeneration;                                         // 0x0300(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDebugGotoDowned;                                         // 0x0310(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0311(0x0003) MISSED OFFSET
	float                                              PreviousStaminaReduction;                                 // 0x0314(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EConditionType                                     OnDamageApplyCondition;                                   // 0x0318(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0319(0x0003) MISSED OFFSET
	float                                              LastParrySuccessTime;                                     // 0x031C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FDamageTakenEvent                           LastDamageEvent;                                          // 0x0320(0x0148) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	bool                                               bAppliedPlayerCountHealthScaling;                         // 0x0468(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0469(0x0003) MISSED OFFSET
	int                                                RegenDisabledId;                                          // 0x046C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FDisabledRegenArray                         RegenDisabled;                                            // 0x0470(0x0010) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FHealOverTime>                       HealOverTime;                                             // 0x0480(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FDebugHealOverTime>                  DebugHealOverTime;                                        // 0x0490(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bGatherDebugHealOverTime;                                 // 0x04A0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData06[0xF];                                       // 0x04A1(0x000F) MISSED OFFSET
	float                                              BeginPlayTime;                                            // 0x04B0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bLoggedKillEvent;                                         // 0x04B4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	EFaction                                           AllowedDamagingFaction;                                   // 0x04B5(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData07[0x2];                                       // 0x04B6(0x0002) MISSED OFFSET
	struct FReplicated_EFaction                        ReplicatedAllowedDamagingFaction;                         // 0x04B8(0x0018) (CPF_Edit, CPF_Net, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData08[0x8];                                       // 0x04D0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.StatsComponent"));
		return ptr;
	}


	void UndoDisableRegeneration(int ID);
	void StartHealOverTime(float Amount, float Speed, class UCurveFloat* Curve, class ATBLCharacter* Healer, class ATBLPlayerState* InstigatorPlayerState, bool AwardHealingScore, bool bOverheal, EHealingSource HealingSource);
	void SetBase(EStat Stat, float Value, bool bCanOverCharge);
	void SetAllowedDamagingFaction(EFaction InFaction);
	void ServerDebugSetBase(EStat Stat, float Value);
	void ServerDebugApplyDamage(float Damage, class UDamageSource* DamageSource);
	void ServerDebugApplyBonus(EStat Stat, float Value);
	void ReceiveHealthChanged(float Amount, class UDamageSource* DamageSource, class AActor* InitiatorActor);
	void ReceiveExperienceChanged(float Amount, class UDamageSource* DamageSource, class AActor* InitiatorActor);
	void OnRep_Stamina();
	void OnRep_MaxHealth();
	void OnRep_Health();
	bool IsRegenerationDisabled(EStat Stat);
	bool IsDead();
	bool HasMod(TEnumAsByte<EMod> Mod);
	bool HasHealOverTimeOfSource(EHealingSource HealingSource);
	bool HasHealOverTime();
	class UStatsDelegateObject* GetStatChangedDelegate(EStat Stat);
	struct FStatEntry GetStat(EStat Stat);
	float GetHealthPercent();
	float GetHealOverTimeLeft();
	int GetExperienceLevel();
	EFaction GetAllowedDamagingFaction();
	void DrainStamina(float Amount);
	int DisableRegeneration(EStat Stat);
	float Current(EStat Stat);
	void BroadcastKilled(TArray<class AActor*> Killers, const struct FBroadcastKilledParams& Params);
	void BroadcastHealOverTime(float Amount, float Speed, class UCurveFloat* Curve, class ATBLPlayerState* InstigatorPlayerState, bool bOverheal, EHealingSource HealingSource);
	void BroadcastDamageTaken(const struct FDamageTakenEventCompressed& Event, int InvocationId);
	float BonusPercent(EStat Stat);
	float Bonus(EStat Stat);
	float base(EStat Stat);
	static bool ApplyPlayerCountHealthScalingCurve(class UObject* Target, class UCurveFloat* OverrideCurve);
	void ApplyModDelta(TEnumAsByte<EMod> Mod, int Delta);
	void ApplyBonusPercent(EStat Stat, float Value, bool bCanOverCharge);
	void ApplyBonus(EStat Stat, float Value, bool bCanOverCharge);
	void AddStamina(float Amount);
};


// Class TBL.StatsDelegateObject
// 0x0010 (0x0050 - 0x0040)
class UStatsDelegateObject : public UTBLObject
{
public:
	struct FMulticastScriptDelegate                    StatChangedDelegate;                                      // 0x0040(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.StatsDelegateObject"));
		return ptr;
	}

};


// Class TBL.StoreOffersList
// 0x0008 (0x0370 - 0x0368)
class UStoreOffersList : public UListView
{
public:
	class UTBLScrollBarStyleDataAsset*                 ScrollBarStyle;                                           // 0x0368(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.StoreOffersList"));
		return ptr;
	}

};


// Class TBL.TBLAchievementList
// 0x0050 (0x0078 - 0x0028)
class UTBLAchievementList : public UObject
{
public:
	TMap<struct FString, class UTBLAchievementTask*>   Achievements;                                             // 0x0028(0x0050) (CPF_Edit, CPF_ExportObject, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAchievementList"));
		return ptr;
	}

};


// Class TBL.TBLAchievementSettings
// 0x0028 (0x0060 - 0x0038)
class UTBLAchievementSettings : public UDeveloperSettings
{
public:
	TArray<TSoftClassPtr<class UClass>>                AchievementWorkers;                                       // 0x0038(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                DebugAchievementCountCap;                                 // 0x0048(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<TSoftClassPtr<class UClass>>                AchievementLists;                                         // 0x0050(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAchievementSettings"));
		return ptr;
	}

};


// Class TBL.TBLAchievementSubsystem
// 0x0108 (0x0138 - 0x0030)
class UTBLAchievementSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0030(0x0018) MISSED OFFSET
	TMap<class UClass* /*UObject*/, class UTBLAchievementWorker*> WorkersByClass;                                           // 0x0048(0x0050) (CPF_NativeAccessSpecifierPrivate)
	TMap<struct FString, class UTBLAchievementTask*>   IdToTaskMap;                                              // 0x0098(0x0050) (CPF_NativeAccessSpecifierPrivate)
	TMap<class UTBLAchievementTask*, struct FString>   TaskToIdMap;                                              // 0x00E8(0x0050) (CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAchievementSubsystem"));
		return ptr;
	}


	void ResetAchievements();
	void OnWorldDestroy(class UWorld* World);
	void OnWorldCreation(class UWorld* World);
};


// Class TBL.TBLActivitySubsystem
// 0x00A8 (0x00D8 - 0x0030)
class UTBLActivitySubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0030(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLActivitySubsystem"));
		return ptr;
	}


	void OnWorldCleanup(class UWorld* World, bool bSessionEnded, bool bCleanupResources);
	void OnPostLoadMap(class UWorld* LoadedWorld);
	void HandleStateChanged(const struct FName& CurrentState);
	void HandleOnTitleDataUpdated();
};


// Class TBL.TBLAIController
// 0x0448 (0x07A8 - 0x0360)
class ATBLAIController : public AAIController
{
public:
	class UInputReplayComponent*                       InputReplayComponent;                                     // 0x0360(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAIControlHandler*                           ControlHandler;                                           // 0x0368(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UUtilityAI_DecisionMaker*                    GeneralDecisionMakerComponent;                            // 0x0370(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPossessedPawn;                                          // 0x0378(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPossessedPawnPendingDestroy;                            // 0x0388(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnStartedBehaviorTree;                                    // 0x0398(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UBehaviorTree*                               DefaultBehaviorTree;                                      // 0x03A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseCrowdManager;                                         // 0x03B0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOverrideRotation;                                        // 0x03B1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCreatePlayerState;                                       // 0x03B2(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x1];                                       // 0x03B3(0x0001) MISSED OFFSET
	float                                              IdleTime;                                                 // 0x03B4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     MoveToNavMeshTarget;                                      // 0x03B8(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03C4(0x0004) MISSED OFFSET
	class ATBLPlayerController*                        OverridePlayerController;                                 // 0x03C8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UInteractableComponent*                      CurrentlyUsedInteractable;                                // 0x03D0(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsInteractableUseBeingHeld;                               // 0x03D8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x03D9(0x0007) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnInteractableStartedToBeHeld;                            // 0x03E0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInteractableUsed;                                       // 0x03F0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInteractableStoppedBeingHeld;                           // 0x0400(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnFailedToSpawn;                                          // 0x0410(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<struct FAIEventLog>                         AIEventLog;                                               // 0x0420(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AAIPlayerStart*                              SpawnPoint;                                               // 0x0430(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                BotId;                                                    // 0x0438(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x043C(0x0004) MISSED OFFSET
	struct FString                                     BotName;                                                  // 0x0440(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsLevelSpawnedBot;                                       // 0x0450(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsPlayerCustomizedBot;                                   // 0x0451(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x6];                                       // 0x0452(0x0006) MISSED OFFSET
	TMap<class AActor*, int>                           NumTimesTargetted;                                        // 0x0458(0x0050) (CPF_NativeAccessSpecifierPublic)
	struct FAIPersonality                              Personality;                                              // 0x04A8(0x0270) (CPF_NativeAccessSpecifierPublic)
	TArray<TEnumAsByte<EAudioPersonalityType>>         PossiblePersonalities;                                    // 0x0718(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDataTable*                                  PersonalityTable;                                         // 0x0728(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOverridePersonalityRow;                                  // 0x0730(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0731(0x0003) MISSED OFFSET
	struct FName                                       PersonalityRowOverride;                                   // 0x0734(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MoveInputTime;                                            // 0x073C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                NavMeshReturnAttemptCount;                                // 0x0740(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0744(0x0004) MISSED OFFSET
	struct FTimerHandle                                NavMeshReturnAttemptHandle;                               // 0x0748(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowPathingWithMoveInput;                               // 0x0750(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDummyBot;                                                // 0x0751(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bNullBot;                                                 // 0x0752(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bBackfillBot;                                             // 0x0753(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   MoveInputDirection;                                       // 0x0754(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     PreviousLocation;                                         // 0x075C(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     SpawnLocation;                                            // 0x0768(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    SpawnRotation;                                            // 0x0774(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               LoggedErrorTypes;                                         // 0x0780(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TargetMaxDistance;                                        // 0x0790(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x14];                                      // 0x0794(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAIController"));
		return ptr;
	}


	void UseInteractable(class UInteractableComponent* Interactable, bool bHold);
	void Suicide();
	void StopUsingInteractable();
	void StopReturnToNavMesh();
	void SetTargetMaxDistance(float MaxDistance);
	void SetNullBot(bool bNull);
	void SetDummyBot(bool bDummy);
	void SetBackfillBot(bool bBackfill);
	void ReturnToNavMeshExpired();
	void ResetError(const struct FName& ErrorType);
	bool MoveToTargetLocation(const struct FVector& Target);
	bool MoveToNavMesh(const struct FVector& PathGoal, class AActor* PathGoalActor);
	void MoveInput(const struct FVector2D& InputDir, float Time, bool bAllowPathing);
	void LogEvent(const struct FName& EventName, class AActor* Target, const struct FString& DebugStr);
	void LogError(const struct FName& ErrorType, const struct FString& Message, bool bError);
	void Jump();
	bool IsOnNavMesh();
	bool IsLevelSpawnedBot();
	bool IsDummyBot();
	bool IsBackfillBot();
	void GiveWeapon(const struct FName& Weapon);
	float GetTargetMaxDistance();
	class AActor* GetTarget();
	void Dismount();
	static void DestroyControllerAndPawn(class AController* Controller, class APawn* TargetPawn);
	static void DestroyController(class AController* Controller);
	bool CanPathFollow();
	void AttemptReturnToNavMesh();
};


// Class TBL.TBLAICombatController
// 0x0178 (0x0920 - 0x07A8)
class ATBLAICombatController : public ATBLAIController
{
public:
	EAiMeleeCombatMode                                 MeleeCombatMode;                                          // 0x07A8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x07A9(0x0003) MISSED OFFSET
	float                                              Advantage;                                                // 0x07AC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AActor*                                      CombatTarget;                                             // 0x07B0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x60];                                      // 0x07B8(0x0060) MISSED OFFSET
	class UUtilityAI_CombatDecisionMaker*              CombatDecisionMakerComponent;                             // 0x0818(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0820(0x0018) MISSED OFFSET
	TArray<float>                                      RecentBlockedHits;                                        // 0x0838(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x44];                                      // 0x0848(0x0044) MISSED OFFSET
	float                                              TimeLastAttack;                                           // 0x088C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0890(0x0004) MISSED OFFSET
	float                                              CombatTargetDesiredDistance;                              // 0x0894(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EAiCombatDistance                                  DesiredDistance;                                          // 0x0898(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EAiCombatStrafing                                  DesiredStrafing;                                          // 0x0899(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x2];                                       // 0x089A(0x0002) MISSED OFFSET
	float                                              AttackDistanceMultiplier;                                 // 0x089C(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              EngageSprintStartOkayMin;                                 // 0x08A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              EngageSprintStopMax;                                      // 0x08A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SprintAttackOkayMax;                                      // 0x08A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SprintAttackOkayMin;                                      // 0x08AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AttackOkayMax;                                            // 0x08B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              EngagementMin;                                            // 0x08B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DisengagementMax;                                         // 0x08B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DefaultDistanceToKeep;                                    // 0x08BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FacehugRange;                                             // 0x08C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CloseAttackRange;                                         // 0x08C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MediumAttackRange;                                        // 0x08C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FarAttackRange;                                           // 0x08CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              OutsideAttackRange;                                       // 0x08D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CombatMovementMaxDistance;                                // 0x08D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              StuckMaxTime;                                             // 0x08D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CorneringDistance;                                        // 0x08DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              OffsetFromCornersDistance;                                // 0x08E0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSprinting;                                               // 0x08E4(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x23];                                      // 0x08E5(0x0023) MISSED OFFSET
	struct FTimerHandle                                EdgeDetectionTimer;                                       // 0x0908(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     NearestNavWallNormal;                                     // 0x0910(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x4];                                       // 0x091C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAICombatController"));
		return ptr;
	}


	void StrafeAndKeepDistance(EAiCombatDistance Distance, EAiCombatStrafing Strafing);
	void ReleaseBlock();
	void OnCombatStateBegin(class AActor* Actor, const struct FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState);
	void HoldBlock();
	void HandleTookDamage(const struct FDamageTakenEvent& Event);
	void HandleDamageCaused(const struct FDamageTakenEvent& DamageEvent);
	EAiMeleeCombatMode GetMeleeCombatMode();
	void Engage(const struct FEngageParams& InEngageParams);
	void EnemyOnCombatStateBegin(class AActor* Actor, const struct FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState);
	void Dodge(TArray<TEnumAsByte<EMovementDirection>> AllowedDirections);
	void Disengage(const struct FDisengageParams& InDisengageParams);
	void Attack(const struct FCombatAiAttackParams& InParams);
};


// Class TBL.TBLAILibrary
// 0x0000 (0x0028 - 0x0028)
class UTBLAILibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAILibrary"));
		return ptr;
	}


	static class ATBLCharacter* SpawnTBLAIFromClass(class UObject* WorldContextObject, class UClass* /*ATBLCharacter*/ CharacterClass, EFaction Faction, class UClass* /*ATBLAIController*/ ControllerClass, class UBehaviorTree* BehaviorTree, const struct FVector& Location, const struct FRotator& Rotation, bool bNoCollisionFail);
	static class ATBLAIController* SpawnTBLAIControllerFromClass(class UObject* WorldContextObject, EFaction Faction, class UClass* /*ATBLAIController*/ ControllerClass, class UClass* /*ATBLCharacter*/ NextSpawnCharacterClass, class UBehaviorTree* BehaviorTree, bool IsPlayerBot);
	static void RemoveAvoidanceArea(class UObject* WorldContextObject, class UObject* Instigator);
	static void PlayEmote(class ATBLCharacter* Character, const struct FName& EmoteName);
	static float InfluenceAtLocation(class UClass* /*UI_Influence*/ InfluenceInput, class AAIController* Controller, const struct FVector& Location);
	static bool GetPerceivedLocationOfActor(class AAIController* Controller, class AActor* Actor, struct FVector* OutVector);
	static TSet<class AActor*> GetActorsByAITag(class UObject* WorldContextObject, const struct FGameplayTag& Tag, EFaction Faction);
	static struct FGameplayTagContainer GetActorAITags(class AActor* Actor, EFaction Faction);
	static void CreateAvoidanceArea(class UObject* WorldContextObject, class UObject* Instigator, const struct FVector& Location, float Radius);
	static void ClearAllAITagsForFaction(class UObject* WorldContextObject, EFaction Faction);
	static void AIUntagManyActors(TArray<class AActor*> Actor, const struct FGameplayTagContainer& TagsToRemove, EFaction Faction);
	static void AIUntagAllActorsForFaction(class UObject* WorldContextObject, const struct FGameplayTagContainer& TagsToRemove, EFaction Faction);
	static void AIUntagActor(class AActor* Actor, const struct FGameplayTagContainer& TagsToRemove, EFaction Faction);
	static void AITagManyActors(TArray<class AActor*> Actors, const struct FGameplayTagContainer& TagsToAdd, EFaction Faction, bool bUntagWhenActorDies);
	static void AITagActor(class AActor* Actor, const struct FGameplayTagContainer& TagsToAdd, EFaction Faction, bool bUntagWhenActorDies);
};


// Class TBL.TBLAISystem
// 0x0438 (0x0568 - 0x0130)
class UTBLAISystem : public UAISystem
{
public:
	TMap<class ATBLAIController*, class AActor*>       CurrentTargets;                                           // 0x0130(0x0050) (CPF_NativeAccessSpecifierPublic)
	TMap<class AActor*, struct FControllerArray>       CurrentTargeters;                                         // 0x0180(0x0050) (CPF_NativeAccessSpecifierPublic)
	TMap<class ATBLAIController*, struct FWeaponClassSet> ControllerWeaponMap;                                      // 0x01D0(0x0050) (CPF_NativeAccessSpecifierPublic)
	TMap<class UClass* /*AInventoryItem*/, struct FControllerArray> WeaponMap;                                                // 0x0220(0x0050) (CPF_NativeAccessSpecifierPublic)
	TMap<class ATBLAIController*, class UClass* /*UUtilityAI_Behavior*/> ControllerBehaviourMap;                                   // 0x0270(0x0050) (CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)
	TMap<class UClass* /*UUtilityAI_Behavior*/, struct FControllerArray> BehaviourMap;                                             // 0x02C0(0x0050) (CPF_NativeAccessSpecifierPublic)
	TMap<class ATBLAIController*, struct FVector>      ControllerLocationMap;                                    // 0x0310(0x0050) (CPF_NativeAccessSpecifierPublic)
	TMap<struct FVector, struct FControllerArray>      LocationMap;                                              // 0x0360(0x0050) (CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0xA0];                                      // 0x03B0(0x00A0) MISSED OFFSET
	TArray<struct FString>                             BotNames;                                                 // 0x0450(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSet<class ATBLAIController*>                      BotsWithSpecialNames;                                     // 0x0460(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPublic)
	class UAITagSystem*                                TagSystem;                                                // 0x04B0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0xA0];                                      // 0x04B8(0x00A0) MISSED OFFSET
	struct FTimerHandle                                ObjectiveTimeRequestTimerHandle;                          // 0x0558(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              LastKnownObjectiveTimeRemaining;                          // 0x0560(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              LastKnownObjectiveTimePercentRemaining;                   // 0x0564(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAISystem"));
		return ptr;
	}


	void RemoveAvoidanceArea(class UObject* Instigator);
	void OnPlayerPossessed(class AController* Controller, class ATBLCharacter* Character);
	void NotifyControllerTargetLocation(class ATBLAIController* Controller, const struct FVector& NewTargetLocation);
	void NotifyControllerTarget(class ATBLAIController* Controller, class AActor* NewTarget);
	struct FVector GetSpawnCenter(EFaction Faction);
	float GetObjectiveTimeRemaining();
	float GetObjectiveTimePercentRemaining();
	int GetNumControllersWithWeapon(class UClass* /*AInventoryItem*/ Weapon);
	int GetNumControllersWithBehaviour(class UClass* /*UUtilityAI_Behavior*/ Behaviour);
	int GetNumControllersTargettingLocation(const struct FVector& TargetLocation);
	int GetNumControllersTargetting(class AActor* Target);
	int GetNumControllersRegistered(EFaction Faction);
	TSet<class ATBLAIController*> GetControllersWithWeapon(class UClass* /*AInventoryItem*/ Weapon);
	TSet<class ATBLAIController*> GetControllersWithBehaviour(class UClass* /*UUtilityAI_Behavior*/ Behaviour);
	TSet<class ATBLAIController*> GetControllersTargettingLocation(const struct FVector& TargetLocation);
	TSet<class ATBLAIController*> GetControllersTargetting(class AActor* Target);
	void CreateAvoidanceArea(class UObject* Instigator, const struct FVector& Location, float Radius);
};


// Class TBL.TBLAnimal
// 0x00D0 (0x0770 - 0x06A0)
class ATBLAnimal : public ATBLCharacterBase
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x06A0(0x0010) MISSED OFFSET
	class UStatsComponent*                             Stats;                                                    // 0x06B0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPawnNoiseEmitterComponent*                  NoiseEmitter;                                             // 0x06B8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTBLAnimalAnimInstance*                      AnimInstance;                                             // 0x06C0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimationSet*/                    AnimationSet;                                             // 0x06C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               AnimalHolder;                                             // 0x06D0(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsBeingThrown;                                           // 0x06D8(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsBeingHeld;                                             // 0x06D9(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPanicking;                                               // 0x06DA(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x1];                                       // 0x06DB(0x0001) MISSED OFFSET
	float                                              PanicDuration;                                            // 0x06DC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bReplicatePanicking;                                      // 0x06E0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x06E1(0x0003) MISSED OFFSET
	float                                              MaxWalkSpeed;                                             // 0x06E4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxPanicWalkSpeed;                                        // 0x06E8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxHealth;                                                // 0x06EC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicationPredictionState                 PredictionState;                                          // 0x06F0(0x0070) (CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0760(0x0008) MISSED OFFSET
	bool                                               bCharMoveTickingAllowed;                                  // 0x0768(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsSignificant;                                           // 0x0769(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x6];                                       // 0x076A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAnimal"));
		return ptr;
	}


	void StopPanicking();
	void StartPanicking();
	void SetCharMoveTickingAllowed(bool bTickAllowed);
	void Ragdoll();
	void OnRep_bPanicking();
	void OnKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnDamageTaken(const struct FDamageTakenEvent& DamageEvent);
	void K2_TornOff();
	void CheckCharMoveTick(bool bAsync);
	void CarryableAnimalEvent(const struct FName& EventName, class ATBLCharacter* ParentCharacter);
};


// Class TBL.CarryablePig
// 0x0010 (0x0780 - 0x0770)
class ACarryablePig : public ATBLAnimal
{
public:
	class UCarryablePlayerComponent*                   CarryablePlayer;                                          // 0x0770(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UInteractableComponent*                      Interactable;                                             // 0x0778(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CarryablePig"));
		return ptr;
	}

};


// Class TBL.TBLAnimInstance
// 0x0240 (0x04B0 - 0x0270)
class UTBLAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0270(0x0004) MISSED OFFSET
	float                                              LastUpdateAnimationTime;                                  // 0x0274(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LastUpdateAnimationInterval;                              // 0x0278(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x027C(0x0004) MISSED OFFSET
	class USkeletalMeshComponent*                      SkeletalMesh;                                             // 0x0280(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCombatStateComponent*                       CombatStateComponent;                                     // 0x0288(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                LODLevel;                                                 // 0x0290(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FarFromCameraDistance;                                    // 0x0294(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsFarFromCamera;                                          // 0x0298(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x17];                                      // 0x0299(0x0017) MISSED OFFSET
	TArray<struct FName>                               HideLowLodBones;                                          // 0x02B0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bGatherDebugNodeVisit;                                    // 0x02C0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDumpAnimationInfoToFile;                                 // 0x02C1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x6];                                       // 0x02C2(0x0006) MISSED OFFSET
	struct FString                                     DebugNodeVisitFilter;                                     // 0x02C8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x10];                                      // 0x02D8(0x0010) MISSED OFFSET
	TMap<struct FName, struct FAnimDebugMontage>       MontageDebug;                                             // 0x02E8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, struct FAnimDebugStateMachine>  StateMachineDebug;                                        // 0x0338(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<int>                                        DebugAnimNodes;                                           // 0x0388(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               DefaultDebugCategories;                                   // 0x0398(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               StateMachineNames;                                        // 0x03A8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, struct FName>                   CrowdControlVariant1;                                     // 0x03B8(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, struct FName>                   CrowdControlVariant2;                                     // 0x0408(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, struct FName>                   CrowdControlVariant3;                                     // 0x0458(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x8];                                       // 0x04A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAnimInstance"));
		return ptr;
	}


	void SetLODLevel(int NewLodLevel);
	void SetIsFarFromCamera(bool bIsFar);
	void Montage_StopAll(float InBlendOutTime);
	float Montage_PlaySection(class UAnimMontage* MontageToPlay, const struct FName& StartingSection, float InPlayRate, float StartSectionPercent, float InBlendTime, EMontagePlayReturnType ReturnValueType);
	TArray<struct FString> GetDebugNodeVisit_Blend();
	TArray<struct FString> GetDebugNodeVisit();
	TArray<struct FAnimDebugMontageInstance> GetDebugMontageInstances();
	void GatherDebugNodeVisit();
	void EventOnLODLevelChanged();
	void EventFarFromCameraChanged();
	void DumpAnimationInfoToFile();
	void AnimNotify_EndWeaponTracers();
	void AnimNotify_ActivateAbility();
};


// Class TBL.TBLAnimalAnimInstance
// 0x0050 (0x0500 - 0x04B0)
class UTBLAnimalAnimInstance : public UTBLAnimInstance
{
public:
	float                                              TimeStartedPanicking;                                     // 0x04B0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04B4(0x0004) MISSED OFFSET
	class ATBLAnimal*                                  Animal;                                                   // 0x04B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MoveSpeedSq;                                              // 0x04C0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsMoving;                                                // 0x04C4(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsDead;                                                  // 0x04C5(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsBeingHeld;                                             // 0x04C6(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsBeingHeld_Combat;                                      // 0x04C7(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsBeingThrown;                                           // 0x04C8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x04C9(0x0007) MISSED OFFSET
	class UClass* /*UAnimationSet*/                    PreviewAnimationSet;                                      // 0x04D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               AnimationSetBase;                                         // 0x04D8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStatsComponent*                             Stats;                                                    // 0x04E0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x18];                                      // 0x04E8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAnimalAnimInstance"));
		return ptr;
	}


	void OnAnimationSetChanged(class UClass* /*UAnimationSet*/ AnimationSet);
	void NotifyTookDamage();
	void NotifyStartedPanicking();
	void NotifyLanded();
	void NotifyKilled();
	void EventOnTookDamage();
	void EventOnStartedPanicking();
	void EventOnLanded();
	void EventOnKilled();
};


// Class TBL.TBLAssetManager
// 0x02D0 (0x0708 - 0x0438)
class UTBLAssetManager : public UAssetManager
{
public:
	unsigned char                                      UnknownData00[0x2D0];                                     // 0x0438(0x02D0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAssetManager"));
		return ptr;
	}

};


// Class TBL.TBLAutoNavLink
// 0x0010 (0x02B8 - 0x02A8)
class ATBLAutoNavLink : public ANavLinkProxy
{
public:
	TArray<struct FVector>                             FoundLinkPoints;                                          // 0x02A8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLAutoNavLink"));
		return ptr;
	}

};


// Class TBL.TBLBallistaAnimInstance
// 0x0040 (0x04F0 - 0x04B0)
class UTBLBallistaAnimInstance : public UTBLAnimInstance
{
public:
	class ATBLCharacter*                               MountedCharacter;                                         // 0x04B0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BallistaPitch;                                            // 0x04B8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BallistaYaw;                                              // 0x04BC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsLoaded;                                                 // 0x04C0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsActive;                                                 // 0x04C1(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x04C2(0x0006) MISSED OFFSET
	class UTBLCharacterAnimInstance_Playable*          CharacterAnimBP;                                          // 0x04C8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CombatState;                                              // 0x04D0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               Is3p;                                                     // 0x04D8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x17];                                      // 0x04D9(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLBallistaAnimInstance"));
		return ptr;
	}


	void OnRepaired();
	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* NewCombatState);
	void OnBallistaRepaired();
	void OnBallistaMounted(class ATBLCharacter* Character);
	void OnBallistaDismounted(class ATBLCharacter* Character, EDismountType DismountType);
};


// Class TBL.TBLBatteringRamAnimInstance
// 0x0040 (0x04F0 - 0x04B0)
class UTBLBatteringRamAnimInstance : public UTBLAnimInstance
{
public:
	class ATBLCharacter*                               LeftCharacter;                                            // 0x04B0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               RightCharacter;                                           // 0x04B8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      LeftCharacterMesh;                                        // 0x04C0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      RightCharacterMesh;                                       // 0x04C8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CombatState;                                              // 0x04D0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ChargePercent;                                            // 0x04D8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04DC(0x0004) MISSED OFFSET
	class UTBLCharacterAnimInstance_Playable*          LeftCharacterAnimBP;                                      // 0x04E0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTBLCharacterAnimInstance_Playable*          RightCharacterAnimBP;                                     // 0x04E8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLBatteringRamAnimInstance"));
		return ptr;
	}


	void EventOnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void AnimNotify_ramRecovery_End();
	void AnimNotify_ramFire_Action();
};


// Class TBL.TBLBlueprintCompilerInterface
// 0x0000 (0x0028 - 0x0028)
class UTBLBlueprintCompilerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLBlueprintCompilerInterface"));
		return ptr;
	}

};


// Class TBL.TBLBombardAnimInstance
// 0x0060 (0x0510 - 0x04B0)
class UTBLBombardAnimInstance : public UTBLAnimInstance
{
public:
	class ATBLCharacter*                               MountedCharacter;                                         // 0x04B0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnAnimNotifyBombardFire;                                  // 0x04B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              BombardPitch;                                             // 0x04C8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BombardYaw;                                               // 0x04CC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsLoaded;                                                 // 0x04D0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsActive;                                                 // 0x04D1(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x04D2(0x0006) MISSED OFFSET
	class UTBLCharacterAnimInstance_Playable*          CharacterAnimBP;                                          // 0x04D8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CombatState;                                              // 0x04E0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               Is3p;                                                     // 0x04E8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x04E9(0x0007) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnBombardFireAnimComplete;                                // 0x04F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0500(0x0008) MISSED OFFSET
	bool                                               bWantsToFire;                                             // 0x0508(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0509(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLBombardAnimInstance"));
		return ptr;
	}


	void OnRepaired();
	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* NewCombatState);
	void OnBombardRepaired();
	void OnBombardMounted(class ATBLCharacter* Character);
	void OnBombardFireActionBegin();
	void OnBombardFireAction();
	void OnBombardDismounted(class ATBLCharacter* Character, EDismountType DismountType);
	void AddLogEntry(const struct FString& LogEntry);
};


// Class TBL.TBLCameraShake
// 0x0000 (0x0160 - 0x0160)
class UTBLCameraShake : public UCameraShake
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLCameraShake"));
		return ptr;
	}

};


// Class TBL.TBLCatapultAnimInstance
// 0x0050 (0x0500 - 0x04B0)
class UTBLCatapultAnimInstance : public UTBLAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04B0(0x0008) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnAnimNotifyCatapultFireEnd;                              // 0x04B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class ACatapult*                                   CatapultActor;                                            // 0x04C8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               MountedCharacter;                                         // 0x04D0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsActive;                                                 // 0x04D8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x04D9(0x0007) MISSED OFFSET
	class UTBLCharacterAnimInstance_Playable*          CharacterAnimBP;                                          // 0x04E0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CombatState;                                              // 0x04E8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               Is3p;                                                     // 0x04F0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x04F1(0x0003) MISSED OFFSET
	float                                              ChargePercent;                                            // 0x04F4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bInteractable;                                            // 0x04F8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsPacked;                                                // 0x04F9(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWantsToFire;                                             // 0x04FA(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x5];                                       // 0x04FB(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLCatapultAnimInstance"));
		return ptr;
	}


	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* NewCombatState);
	void OnCatapultStateChanged(unsigned char State, unsigned char PreviousState);
	void OnCatapultMounted(class ATBLCharacter* Character);
	void OnCatapultFireNoDriver();
	void OnCatapultDismounted(class ATBLCharacter* Character, EDismountType DismountType);
	void CatapultLaunchCharacters();
	void CatapultFireAction();
	void AnimNotify_catapultFireEnd_Action();
};


// Class TBL.TBLCharacter
// 0x1040 (0x16E0 - 0x06A0)
class ATBLCharacter : public ATBLCharacterBase
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x06A0(0x0030) MISSED OFFSET
	struct FCharacterDisplayInfo                       DisplayInfo;                                              // 0x06D0(0x0078) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EAudioClassType>                       AudioClassType;                                           // 0x0748(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ECharacterClass                                    PawnClassType;                                            // 0x0749(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x074A(0x0002) MISSED OFFSET
	struct FName                                       OnlineXpStatName;                                         // 0x074C(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0754(0x0004) MISSED OFFSET
	class UProgressionSpec*                            ClassProgressionSpec;                                     // 0x0758(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAbilitiesComponent*                         Abilities;                                                // 0x0760(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStatsComponent*                             Stats;                                                    // 0x0768(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UHeadlookComponent*                          HeadlookComponent;                                        // 0x0770(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedServerFrame;                                    // 0x0778(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0779(0x0007) MISSED OFFSET
	struct FBasedMovementInfo                          LastReplicatedBasedMovement;                              // 0x0780(0x0030) (CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x14];                                      // 0x07B0(0x0014) MISSED OFFSET
	int                                                RandomSeed;                                               // 0x07C4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLockMeshRotationState                      LockMeshRotationState;                                    // 0x07C8(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	float                                              PreviousBlendInTime;                                      // 0x07E0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      RemoteViewYaw;                                            // 0x07E4(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bUseRemoteViewYaw;                                        // 0x07E5(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      bCinematicRestrictedControl : 1;                          // 0x07E6(0x0001) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x1];                                       // 0x07E7(0x0001) MISSED OFFSET
	float                                              CinematicRestrictedControlCameraLockAngle;                // 0x07E8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                CinematicRestrictedControlCameraLockID;                   // 0x07EC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FSpecialItemReplicated                      SpecialItemReplicated;                                    // 0x07F0(0x0002) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	bool                                               bShouldCharacterBeHidden;                                 // 0x07F2(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData06[0x5];                                       // 0x07F3(0x0005) MISSED OFFSET
	class ATBLPlayerState*                             BeingRevivedBy;                                           // 0x07F8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FMulticastScriptDelegate                    OnBeingRevivedByChangedDelegate;                          // 0x0800(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      Mesh1P;                                                   // 0x0810(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UFollowMasterSkeletalMeshComponent*          FollowMeshComponent;                                      // 0x0818(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPushingComponent*                           PushingComponent;                                         // 0x0820(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCustomizationComponent*                     CustomizationComponent;                                   // 0x0828(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0830(0x0008) MISSED OFFSET
	class UCameraComponent*                            Camera1P;                                                 // 0x0838(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCameraComponent*                            Camera3P;                                                 // 0x0840(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       Camera1PSocket;                                           // 0x0848(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       Camera3PSocket;                                           // 0x0850(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     CameraOffset1P;                                           // 0x0858(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FCamera1PBlendParams                        Camera1PBlendParams;                                      // 0x0864(0x003C) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FReplicationPredictionState                 PredictionState;                                          // 0x08A0(0x0070) (CPF_NativeAccessSpecifierPublic)
	bool                                               bIsTenosiaInMap;                                          // 0x0910(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x7];                                       // 0x0911(0x0007) MISSED OFFSET
	TArray<class UClass* /*ATBLCharacter*/>            CharacterSubclasses;                                      // 0x0918(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*ULoadoutSelection*/                LoadoutSelection;                                         // 0x0928(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*ULoadoutSelection*/                OverrideLoadoutSelection;                                 // 0x0930(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AInventoryItem*/                   EquippedCarryableOnSpawn;                                 // 0x0938(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BaseTurnRate;                                             // 0x0940(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BaseLookUpRate;                                           // 0x0944(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AttackFromBehindAngle;                                    // 0x0948(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x4];                                       // 0x094C(0x0004) MISSED OFFSET
	class UCombatStateComponent*                       CombatStateComponent;                                     // 0x0950(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCombatStateSynchronization*                 CombatStateSynchronization;                               // 0x0958(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCombatStateQueue*                           CombatStateQueue;                                         // 0x0960(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UCombatStateSet*/                  CombatStateSet;                                           // 0x0968(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UConditionsComponent*                        ConditionsComponent;                                      // 0x0970(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UInteractableComponent*                      InteractableComponent;                                    // 0x0978(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementModifierComponent*                  MovementModifiers;                                        // 0x0980(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPerksComponent*                             PerksComponent;                                           // 0x0988(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AInventoryItem>               LastWeaponHitBy;                                          // 0x0990(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ATBLCharacter>                LastCharacterHitBy;                                       // 0x0998(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AInventoryItem>               WeaponAppliedBleed;                                       // 0x09A0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPossessed;                                              // 0x09A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnHitWorld;                                               // 0x09B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMeleeSuccess;                                           // 0x09C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDamage;                                                 // 0x09D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDamageCaused;                                           // 0x09E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnFallDamage;                                             // 0x09F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnWasParried;                                             // 0x0A08(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnParrySuccess;                                           // 0x0A18(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnClash;                                                  // 0x0A28(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnStartHeal;                                              // 0x0A38(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnHealedByLocalPlayer;                                    // 0x0A48(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnStaminaCostFailed;                                      // 0x0A58(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCameraChanged;                                          // 0x0A68(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnAnimationSetChanged;                                    // 0x0A78(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInventoryItemEquipped;                                  // 0x0A88(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInventoryItemUnequipped;                                // 0x0A98(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInventoryItemToBeEquipped;                              // 0x0AA8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnAbleToHealChanged;                                      // 0x0AB8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMount;                                                  // 0x0AC8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    SetOnHorse;                                               // 0x0AD8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDismount;                                               // 0x0AE8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInteractableFocused;                                    // 0x0AF8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnInteractableLostFocus;                                  // 0x0B08(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnUseableActorInteractableFocused;                        // 0x0B18(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnUseableActorInteractableLostFocused;                    // 0x0B28(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnStatsComponentFocused;                                  // 0x0B38(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnStatsComponentLostFocused;                              // 0x0B48(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnUnderCrosshairChanged;                                  // 0x0B58(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSetRagdollPhysics;                                      // 0x0B68(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnFreezeRagdollPhysics;                                   // 0x0B78(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnUnfreezeRagdollPhysics;                                 // 0x0B88(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSetFirstPersonDeathCamera;                              // 0x0B98(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSetThirdPersonDeathCamera;                              // 0x0BA8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnRootMotionChanged;                                      // 0x0BB8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDismountPressed;                                        // 0x0BC8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCarryableCharacterEvent;                                // 0x0BD8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCarryableAnimationEvent;                                // 0x0BE8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    PlayInventoryAnimation;                                   // 0x0BF8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayerMeshChanged;                                      // 0x0C08(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnClientNotifySuicide;                                    // 0x0C18(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnClientNotifyKilled;                                     // 0x0C28(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayerStateReplicated;                                  // 0x0C38(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnWasHitEarly;                                            // 0x0C48(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayEmote;                                              // 0x0C58(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnProjectileBeginPlay;                                    // 0x0C68(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnShowInGameMenu;                                         // 0x0C78(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	TArray<class AActor*>                              HitActors;                                                // 0x0C88(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class AActor*>                              HeadShotActors;                                           // 0x0C98(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<class ATBLCharacter*, struct FArmHitInfo>     ArmHits;                                                  // 0x0CA8(0x0050) (CPF_NativeAccessSpecifierPublic)
	int                                                ClientTracerHitCount;                                     // 0x0CF8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0CFC(0x0004) MISSED OFFSET
	TArray<struct FName>                               ClientTracerHitBones;                                     // 0x0D00(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class UPrimitiveComponent>>  ClientTracerHitComponents;                                // 0x0D10(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLSpectatorPawn*                           SpectatingPawn;                                           // 0x0D20(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHasAltAttack;                                            // 0x0D28(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0D29(0x0003) MISSED OFFSET
	struct FThirdPersonCameraParams                    ThirdPersonCameraParams;                                  // 0x0D2C(0x0060) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FThirdPersonCameraParams                    CurrentCameraParams;                                      // 0x0D8C(0x0060) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              MountOrDismountCameraInterpSpeed;                         // 0x0DEC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMovementDebugger*                           MovementDebugger;                                         // 0x0DF0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMesh*                               SKMesh3P;                                                 // 0x0DF8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<uint64_t, struct FLastSightCheckInfo>         SightCacheMap;                                            // 0x0E00(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x10];                                      // 0x0E50(0x0010) MISSED OFFSET
	struct FRotator                                    GoreHeadRotationOffset;                                   // 0x0E60(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bSpawnedGoreHead : 1;                                     // 0x0E6C(0x0001) (CPF_Transient, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsForCustomizationMenu : 1;                              // 0x0E6C(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCustomizationMenuComponentsSpawned;                      // 0x0E6D(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData13[0x2];                                       // 0x0E6E(0x0002) MISSED OFFSET
	struct FCustomizationContext                       CustomizationContext;                                     // 0x0E70(0x0058) (CPF_Edit, CPF_BlueprintVisible, CPF_Transient, CPF_NativeAccessSpecifierPublic)
	class USkeletalMesh*                               DefaultMesh1P;                                            // 0x0EC8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     Mesh1PLocation;                                           // 0x0ED0(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    Mesh1PRotation;                                           // 0x0EDC(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              FirstPossessedTimeSeconds;                                // 0x0EE8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHasAttackedSuccessfully;                                 // 0x0EEC(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData14[0x3];                                       // 0x0EED(0x0003) MISSED OFFSET
	float                                              GamepadUsePressedStartTime;                               // 0x0EF0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                GamepadUsePressedCount;                                   // 0x0EF4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              DebugProjectile;                                          // 0x0EF8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              DebugFakeClientProjectile;                                // 0x0F00(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              DebugDroppedItem;                                         // 0x0F08(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDebugIgnoreAI;                                           // 0x0F10(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsCinematicsRelevant;                                    // 0x0F11(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData15[0x6];                                       // 0x0F12(0x0006) MISSED OFFSET
	class ASpawner*                                    SpawnedAtSpawner;                                         // 0x0F18(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USceneComponent*                             SpawnedAtSpawnComp;                                       // 0x0F20(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                SpawnerPosition;                                          // 0x0F28(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPreventForwardSpawn;                                     // 0x0F2C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData16[0x3];                                       // 0x0F2D(0x0003) MISSED OFFSET
	TArray<class AInventoryItem*>                      AttachedItems;                                            // 0x0F30(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLockMeshBlendOutParams                     LockMeshBlendInParams;                                    // 0x0F40(0x0054) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FLockMeshBlendOutParams                     LockMeshBlendOutParams;                                   // 0x0F94(0x0054) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCinematicRestrictedControl;                             // 0x0FE8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCinematicAllowedControl;                                // 0x0FF8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMountRootBlendParams                       MountRootBlendParams;                                     // 0x1008(0x0068) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FBlendParams                                MountControlBlendParams;                                  // 0x1070(0x0024) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData17[0x4];                                       // 0x1094(0x0004) MISSED OFFSET
	TArray<class UDamageSource*>                       VOFriendlyDamageSources;                                  // 0x1098(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UDamageSource*>                       AutoVONegativeDamageSources;                              // 0x10A8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHelmetKnockedOff;                                        // 0x10B8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      DeadCharacterId;                                          // 0x10B9(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData18[0x6];                                       // 0x10BA(0x0006) MISSED OFFSET
	TMap<TEnumAsByte<EAudioAutoVOType>, float>         AutoVOProbabilty;                                         // 0x10C0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FTutorialLocationBlendParams                TutorialLocationBlendParams;                              // 0x1110(0x003C) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData19[0x4];                                       // 0x114C(0x0004) MISSED OFFSET
	struct FTutorialLookAtParams                       TutorialLookAtParams;                                     // 0x1150(0x0020) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FHorseLookAtParams                          HorseLookAtParams;                                        // 0x1170(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FHorseLookAtParams                          HorseOrientCameraOnBumpParams;                            // 0x1188(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FAttachedRagdoll                            AttachedRagdoll;                                          // 0x11A0(0x0030) (CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	struct FAttachRagdollBlendParams                   AttachRagdollBlendParams;                                 // 0x11D0(0x003C) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData20[0x4];                                       // 0x120C(0x0004) MISSED OFFSET
	class USpecialItemAbility*                         SpecialItemAbility;                                       // 0x1210(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSpecialAbilitySet;                                      // 0x1218(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FParryEventState                            LastParryEvent;                                           // 0x1228(0x0070) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	class AInventoryItem*                              LastFiredProjectile;                                      // 0x1298(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FDebugMovementReplication                   DebugMovementReplication;                                 // 0x12A0(0x001C) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData21[0x4];                                       // 0x12BC(0x0004) MISSED OFFSET
	class AHorse*                                      KnockdownOffHorse;                                        // 0x12C0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TimeToVOExpiry;                                           // 0x12C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                NumberOfAllowedVOsWithinExpiry;                           // 0x12CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              VOCooldown;                                               // 0x12D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BattleCryVOCooldown;                                      // 0x12D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              VOQueueEmoteWindow;                                       // 0x12D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData22[0x4];                                       // 0x12DC(0x0004) MISSED OFFSET
	TArray<class UParryComponent*>                     CachedParryComponents;                                    // 0x12E0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UInteractableComponent*                      ClosestInteractable;                                      // 0x12F0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UStatsComponent*                             ClosestStatsComponent;                                    // 0x12F8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UFireSourceComponent*                        ClosestFireSource;                                        // 0x1300(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UInteractableComponent*                      UseableActorInteractable;                                 // 0x1308(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FInteractableSettings                       InteractableSettings;                                     // 0x1310(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              GamepadDismountPressedStartTime;                          // 0x1330(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData23[0x4];                                       // 0x1334(0x0004) MISSED OFFSET
	class UInventory*                                  Inventory;                                                // 0x1338(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsDying : 1;                                             // 0x1340(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_EditConst, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData24[0x3];                                       // 0x1341(0x0003) MISSED OFFSET
	float                                              DeathTime;                                                // 0x1344(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DeathAnimationLength;                                     // 0x1348(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DeathAnimationToRagdollImpulse;                           // 0x134C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldCrouchOverrideRecoveryAnimation;                   // 0x1350(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShouldPlayDeathAnimation;                                // 0x1351(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData25[0x2];                                       // 0x1352(0x0002) MISSED OFFSET
	struct FName                                       DeathAnimationMontageName;                                // 0x1354(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       DeathAnimationSectionName1p;                              // 0x135C(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       DeathAnimationSectionName3p;                              // 0x1364(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData26[0x4];                                       // 0x136C(0x0004) MISSED OFFSET
	class UAkComponent*                                AudioComponent;                                           // 0x1370(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData27[0x8];                                       // 0x1378(0x0008) MISSED OFFSET
	struct FTransform                                  Camera3PRotation;                                         // 0x1380(0x0030) (CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              RagdollStartTime;                                         // 0x13B0(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRagdollTriggered;                                        // 0x13B4(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRagdollCustomTick;                                       // 0x13B5(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData28[0x7];                                       // 0x13B6(0x0007) MISSED OFFSET
	bool                                               bIsCharacterPaused;                                       // 0x13BD(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData29[0x2];                                       // 0x13BE(0x0002) MISSED OFFSET
	TArray<class UActorComponent*>                     PausedComponents;                                         // 0x13C0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AActor*>                              PausedActors;                                             // 0x13D0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<float>                                      PausedActorLifespans;                                     // 0x13E0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FTimerHandle>                        PausedTimerHandles;                                       // 0x13F0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>                 PausedPhysics;                                            // 0x1400(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHasRandomSeed;                                           // 0x1410(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDidPushRespawnState;                                     // 0x1411(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bTapOutHeld;                                              // 0x1412(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData30[0x1];                                       // 0x1413(0x0001) MISSED OFFSET
	struct FAttachedSmoothing                          AttachedSmoothing;                                        // 0x1414(0x000C) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               PreviousIsPlayingRootMotion;                              // 0x1420(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EFaction                                           AutoPossessAIFaction;                                     // 0x1421(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData31[0x6];                                       // 0x1422(0x0006) MISSED OFFSET
	class UBehaviorTree*                               AutoPossessAIBehaviorTree;                                // 0x1428(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAutoPossessAIStartCinematicRestricted;                   // 0x1430(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanSuicide;                                              // 0x1431(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPreventSuicide;                                          // 0x1432(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSuicideTried;                                            // 0x1433(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRemovableBot;                                            // 0x1434(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bNeverPerceiveCharacter;                                  // 0x1435(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData32[0x2];                                       // 0x1436(0x0002) MISSED OFFSET
	float                                              FellOutOfWorldKillTime;                                   // 0x1438(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCountTowardsKillsAndKnockdowns;                          // 0x143C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData33[0x3];                                       // 0x143D(0x0003) MISSED OFFSET
	TArray<class AActor*>                              ConstructableActors;                                      // 0x1440(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData34[0x8];                                       // 0x1450(0x0008) MISSED OFFSET
	class AController*                                 LastController;                                           // 0x1458(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class ATBLPlayerController*                        LastPlayerController;                                     // 0x1460(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class ATBLPlayerState*                             LastPlayerState;                                          // 0x1468(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVOTracker                                  VOTracker;                                                // 0x1470(0x0030) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 LipSyncVOCurve;                                           // 0x14A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EAudioAutoVOType>                      CurrentAutoVo;                                            // 0x14A8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData35[0x7];                                       // 0x14A9(0x0007) MISSED OFFSET
	TArray<TEnumAsByte<EAudioAutoVOType>>              DeathFriendlyAudoVO;                                      // 0x14B0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<TEnumAsByte<EAudioAutoVOType>>              AliveFriendlyAudoVO;                                      // 0x14C0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData36[0x60];                                      // 0x14D0(0x0060) MISSED OFFSET
	class UInteractableComponent*                      CachedInteractableUseHeldComponent;                       // 0x1530(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, TWeakObjectPtr<class AActor>>  ConditionsAppliedByActor;                                 // 0x1538(0x0050) (CPF_Transient, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData37[0x38];                                      // 0x1588(0x0038) MISSED OFFSET
	TMap<TEnumAsByte<EAudioAutoVOType>, float>         AutoVODistanceByType;                                     // 0x15C0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UTeamCapturePointComponent>   CapturePoint;                                             // 0x1610(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData38[0x18];                                      // 0x1618(0x0018) MISSED OFFSET
	float                                              WaitForAttachToProjectileTime;                            // 0x1630(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData39[0x4];                                       // 0x1634(0x0004) MISSED OFFSET
	class ATBLTeam*                                    PreviousTeam;                                             // 0x1638(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsInitialAutorun;                                        // 0x1640(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData40[0x7];                                       // 0x1641(0x0007) MISSED OFFSET
	TMap<struct FSoftObjectPath, uint32_t>             ParticleSystemsToPrepopulate;                             // 0x1648(0x0050) (CPF_Config, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayerNeedsHealing;                                      // 0x1698(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData41[0x7];                                       // 0x1699(0x0007) MISSED OFFSET
	TArray<class UClass* /*AInventoryItem*/>           HealingItemTypes;                                         // 0x16A0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*AInventoryItem*/>           HealingSpecialItemTypes;                                  // 0x16B0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bLastAbleToHealCheck;                                     // 0x16C0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData42[0x3];                                       // 0x16C1(0x0003) MISSED OFFSET
	float                                              NeedsHealingThreshold;                                    // 0x16C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData43[0x18];                                      // 0x16C8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLCharacter"));
		return ptr;
	}


	void WasHitEarly(const struct FHitResult& Hit, class ATBLCharacter* AttackingCharacter);
	void WasHitAfterDeath(class ATBLCharacter* OtherCharacter, struct FHitResult* Hit);
	void UpdateThirdPersonCamera(float DeltaSeconds, bool bSpectator);
	void UpdateSpecialItemAbility(class AInventoryItem* SpecialItem);
	void UpdateRagdoll(float DeltaSeconds);
	void UpdatePlayingVO(float DeltaSeconds);
	void UpdateParryAim(float DeltaSeconds);
	void UpdateLockMeshRotation();
	void UpdateBlending(float DeltaSeconds);
	void UpdateAttachedSmoothing(float DeltaSeconds);
	void UnfreezeRagdoll();
	void TutorialPlayerControl(const struct FTutorialPlayerControlParams& Params);
	void TrapEvent(ETrapEventResult Result, class UObject* TrapObject);
	void SwitchAttachedItemMesh(class USkeletalMeshComponent* ParentMesh);
	void Suicide(EKillReason KillReason);
	void StopRevive(class ATBLCharacter* DownedCharacter);
	void StopLowPriorityCharacterActionEvent();
	void StopHighPriorityCharacterActionEvent();
	void StopCharacterActionEvent();
	void StartRevive(class ATBLCharacter* DownedCharacter);
	bool ShouldIgnoreAI();
	bool ShouldClash(class ATBLCharacter* InitiatorCharacter, class ATBLCharacter* TargetCharacter, const struct FVector& ClashLocation);
	bool ShouldBlockCharacter(class ATBLCharacter* AttackingCharacter, class ATBLCharacter* HitCharacter, struct FActionContext* Context);
	bool ShouldAttackBeCountered(class ATBLCharacter* AttackingCharacter, class AInventoryItem* AttackingItem, class AInventoryItem* DefenderItem);
	void SetupAI();
	void SetThirdPersonDeathCamera();
	void SetSpectatingPawn(class ATBLSpectatorPawn* SpectatingPawn);
	void SetRagdollPhysics();
	void SetPlayerDrunk(bool IsDrunk);
	void SetIsInitialAutorun();
	void SetIgnoreAI(bool bNewIgnoreAI);
	void SetFirstPersonDeathCamera();
	void SetDeathAnimationParameters(const struct FDamageTakenEvent& Event);
	void SetCinematicRestrictedControl(bool bRestricted);
	void ServerUseTornOffItem(class UClass* /*AInventoryItem*/ ItemClass, const struct FName& TornOffName);
	void ServerUseHeldStart(class UInteractableComponent* Interactable);
	void ServerUseHeldRelease(class UInteractableComponent* Interactable);
	void ServerUseHeldComplete(class UInteractableComponent* Interactable);
	void ServerUse(class UInteractableComponent* Interactable, bool bIsAutoPickup);
	void ServerTrapEvent(ETrapEventResult Result, class UObject* TrapObject, float ClientTimeStamp);
	void ServerSetFireSource(class UFireSourceComponent* NewFireSource);
	void ServerPlayEmote(unsigned char EmoteRowNum, TEnumAsByte<EAudioPersonalityType> PersonalityType, unsigned char EmotePlayingSeqNum, unsigned char bIsOverrideEmote, unsigned char EmoteType);
	void ServerPlayChickenEmote();
	void ServerHitWorld(const struct FHitWorldParams& Params, float ClientTimeStamp);
	void ServerHandleOnCustomizationJobsEmptied();
	void ServerEnterPostGameState();
	void ServerDismountPressed();
	void Revive(class ATBLCharacter* DownedCharacter);
	void RemoveEmoteFromQueue(int EmoteId);
	void RemoveConstructableActor(class AActor* DestroyedActor);
	void PushRespawnState();
	void ProcessTurnAndLookInputRate(TEnumAsByte<EAxis> Axis, float Rate);
	void ProcessTurnAndLookInput(TEnumAsByte<EAxis> Axis, float Value);
	void PlayLowPriorityCharacterActionEvent(const struct FSoundSwitchEntry& SoundSwitch);
	void PlayHighPriorityCharacterActionEvent(const struct FSoundSwitchEntry& SoundSwitch);
	void PlayEmoteFromServer(const struct FName& EmoteName);
	bool PlayEmote(const struct FPersonalityEmoteTableRow& Emote, ERadialVOMenuPage Page);
	void PlayChickenEmote();
	void PlayCharacterActionEvent(const struct FSoundSwitchEntry& SoundSwitch, bool IsLocalPlayerInvolved);
	void PlayAutoVOFromServer(TEnumAsByte<EAudioAutoVOType> AutoVoType, bool SkipLocalPlayer);
	void PlayAutoVO(TEnumAsByte<EAudioAutoVOType> AutoVoType);
	void PauseCharacter(bool bPaused);
	void OnTeamChanged(class ATBLTeam* OwnerTeam);
	void OnRep_SpecialItemCharge();
	void OnRep_SpawnedAtSpawnComp();
	void OnRep_ShouldCharacterBeHidden();
	void OnRep_RandomSeed(int PreviousRandomInt);
	void OnRep_LockMeshRotation();
	void OnRep_InventorySlots();
	void OnRep_CinematicRestrictedControl();
	void OnRep_BeingRevivedBy();
	void OnRep_AttachToProjectile(class AInventoryItem* Projectile);
	void OnMeleeHitSuccess(class AActor* HitActor);
	void OnKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnInteractableUsePawnChanged(class APawn* Pawn);
	void OnInitializeAltWeightsState();
	void OnEquippedItemsChanged();
	void OnDamageTaken(const struct FDamageTakenEvent& DamageEvent);
	void OnCustomized();
	void OnConstructableActorKilled(const struct FDeathDamageTakenEvent& Event);
	void OnConstructableActorDestroyed(class AActor* DestroyedActor);
	void OnComponentOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo);
	void OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnCombatStateEnd(class AActor* Actor, const struct FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState);
	void OnCombatStateBegin(class AActor* Actor, const struct FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState);
	void OnCausedDamage(const struct FDamageTakenEvent& DamageEvent);
	void OnAttachedRagdollActorDestroyed(class AActor* DestroyedActor);
	void OnApplyCondition(class AActor* Actor, EConditionType Condition);
	void NetMulticastFastSharedReplication(const struct FFastSharedProperties_TBLCharacter& Properties);
	void LoserEnterPostGameState();
	void KillWithHitParams(EKillReason KillReason, bool bSwitchedTeamsInLoadoutVolume, const struct FHitResult& HitResult, const struct FVector& HitDirection, class AActor* Killer);
	void Kill(EKillReason KillReason, bool bSwitchedTeamsInLoadoutVolume, class AActor* Killer);
	bool IsSprinting();
	bool IsSpecialPawnClass();
	bool IsSpawnFadeOutEnabled();
	bool IsRagdollCustomTick();
	bool IsPawnSubclass();
	bool IsLocalPlayer();
	bool IsInterpingToMountLocation();
	bool IsInRagdoll();
	bool IsInParryView(class UParryComponent* ParryComp, const struct FTransform& BoxTransform, const struct FVector& BoxExtents, float IgnoreParryDepth);
	bool IsInitialAutorun();
	bool IsHoldingAltAttack(float Tolerance);
	bool IsFollowAnimationEnabled();
	bool IsFacingTarget(const struct FHitResult& Hit, const struct FFacingTargetParams& Params);
	bool IsCinematicRestrictedControl();
	bool IsCharacterPaused();
	static bool IsCharacterClassArchetype(ECharacterClass Type);
	bool IsBlocking(class ATBLCharacter* AttackingCharacter);
	bool IsArrowCameraEnabled();
	void InterruptUse(const struct FName& NextCombatState);
	void InitiateAbilityByName(const struct FName& AbilityName);
	void HitWorldWithStats(const struct FHitResult& Hit, bool bParried);
	void HitWorld(const struct FHitResult& Hit);
	void HitClash(class ATBLCharacter* OtherCharacter, struct FHitResult* Hit);
	void HideCharacterAndEquipment(bool bHide);
	bool HasCondition(EConditionType Condition);
	void HandleOnCustomizationJobsEmptied();
	struct FThirdPersonCameraParams GetThirdPersonCameraParams();
	class USpecialItemAbility* GetSpecialItemAbility();
	TEnumAsByte<EAudioPersonalityType> GetPersonalityType();
	class USkeletalMeshComponent* GetPawnMesh(bool WantFirstPerson);
	ECharacterClass GetPawnClassType();
	ECharacterClass GetPawnClassArchetype();
	TArray<class UParryComponent*> GetParryComponents();
	float GetNeedsHealingThreshold();
	class AController* GetLastController();
	class UInventory* GetInventory();
	class UInteractableComponent* GetFocusedInteractable();
	struct FVector GetFacingDirection();
	class AInventoryItem* GetEquippedWeapon();
	class AInventoryItem* GetEquippedItemByHand(EEquippedHand Hand);
	TArray<class AInventoryItem*> GetEquippedInventoryItems();
	float GetDeathTime();
	class USkeletalMeshComponent* GetCurrentMesh();
	TArray<class AInventoryItem*> GetCurrentAttackingWeapons();
	class UCombatStateComponent* GetCombatStateComponent();
	static ECharacterClassType GetCharacterClassType(ECharacterClass Type);
	static struct FString GetCharacterClassAudioSwitch(TEnumAsByte<EAudioClassType> ClassType, EFaction Faction);
	static ECharacterClass GetCharacterClassArchetype(ECharacterClass Type);
	TEnumAsByte<EAudioClassType> GetCharacterAudioType();
	struct FVector GetCenterPlayArea();
	struct FVector GetCameraSocketLocation();
	class UClass* /*AInventoryItem*/ GetBlockingInventoryItem(class ATBLCharacter* AttackingCharacter);
	void GetBattlecryActionEvent(class UAkAudioEvent** StartEvent, class UAkAudioEvent** StopEvent);
	float GetAutoVODistanceSqrdByType(TEnumAsByte<EAudioAutoVOType> Type);
	float GetAnimationPercent();
	struct FString GetAIObjectiveDebugString();
	TArray<class AActor*> GetAIObjectiveActors();
	class AActor* GetActorWhoAppliedCondition(EConditionType ConditionApplied);
	void GetActionEvent(class UAkAudioEvent** StartEvent, class UAkAudioEvent** StopEvent);
	void FellOutOfWorldTimer();
	void DoKeyEvent(const struct FName& ActionName, TEnumAsByte<EInputEvent> KeyEvent);
	void DoKeyAxis(const struct FName& ActionName, float AxisValue);
	bool DoesCountTowardKillsAndKnockdowns();
	void DebugDrawShield(class ATBLPlayerController* DebugController);
	void DebugDrawParryBox(float DeltaTime);
	void DebugDrawCamera(float DeltaTime);
	void DeathAnimationOverlap();
	void DamageWithHitParams(float Damage, const struct FHitResult& HitResult, const struct FVector& HitDirection, bool bLoseLimbCheat);
	void ConsumeCurrentInput();
	void ConditionAppliedByActor(EConditionType ConditionApplied, class AActor* ConditionCauser);
	void ClientTeleportTo(const struct FVector& vecTargetPos, const struct FRotator& vecTargetRot);
	void ClientSuicideReceived(const struct FDamageTakenEventCompressed& DamageEventCompressed);
	void ClientSetCustomizationSwatches(TArray<struct FSwatchSelection> Swatches);
	void ClientReliableNotifySuicide(EKillReason KillReason);
	void ClientDrawDebugString(const struct FVector& Location, const struct FString& Text, const struct FColor& Clr, float Duration, float FontScale);
	void ClientDrawDebugSphere(const struct FVector& Center, float Radius, int Segments, const struct FColor& Clr, bool bPersistentLines);
	void ClientDrawDebugPose(class ATBLCharacter* Character, const struct FColor& Clr);
	void ClientDrawDebugPoint(const struct FVector& Location, float Size, const struct FColor& Clr, bool bPersistentLines, float Lifetime);
	void ClientDrawDebugLine(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FColor& Clr, bool bPersistentLines, float Lifetime, float Thickness);
	void ClientDrawDebugCapsule(const struct FVector& Center, float HalfHeight, float Radius, const struct FColor& Color);
	void ClientDrawDebugBox(const struct FVector& Center, const struct FVector& Box, const struct FTransform& Transform, const struct FColor& Color, bool bPersistentLines, float Lifetime);
	void ClientDrawDebugArrow(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FColor& Clr, bool bPersistentLines, float Lifetime, float Thickness);
	void ClientApplyCondition(EConditionType Condition);
	void ClearTutorialPlayerControl();
	void CheckTeamCollision(class AActor* OtherActor, class UPrimitiveComponent* OtherComp);
	void CarryableCharacterEvent(const struct FName& EventName, class ATBLCharacter* ParentCharacter);
	void CarryableAnimationEvent(const struct FName& EventName);
	bool CanSprintShove();
	bool CanSprintCharge();
	bool CanSprintAttack();
	bool CanRevive(class APawn* Pawn);
	bool CanFullSprint();
	bool CanClash();
	void BroadcastWasHitEarly(const struct FEarlyHitResult& EarlyHit);
	void BroadcastPauseCharacter(bool bPaused);
	void BroadcastParryEvent(class AActor* Target, const struct FParryEventReplicated& ParryEventReplicated);
	void BroadcastOnHealedByLocalPlayer();
	void BroadcastLoseHelmet();
	void BroadcastHitWorldWithStats(const struct FHitWorldParams& Params);
	void BroadcastHitWorld(const struct FHitWorldParams& Params);
	void BroadcastDetachFromController();
	void BroadcastClashEvent(class ATBLCharacter* Target, const struct FClashEventReplicated& ClashEventReplicated);
	void BroadcastCinematicRestrictControl();
	void BroadcastCinematicAllowControl();
	void BroadcastChickenEmote();
	void BroadcastCharacterEmote(unsigned char EmoteRowNum, TEnumAsByte<EAudioPersonalityType> PersonalityType, unsigned char EmotePlayingSeqNum, unsigned char EmoteRandomSeed, unsigned char bIsOverrideEmote, unsigned char EmoteType);
	void BroadcastAutoVO(TEnumAsByte<EAudioAutoVOType> AutoVoType, bool SkipLocalPlayer);
	void BroadcastAbleToHealIfChanged();
	void AddConstructableActorToArray(class AActor* NewActor);
	void AddConstructableActor(class AInventoryItem* CarryableItem, class AActor* NewActor);
};


// Class TBL.TBLCharacterAnimInstance
// 0x10A0 (0x1550 - 0x04B0)
class UTBLCharacterAnimInstance : public UTBLAnimInstance
{
public:
	struct FMulticastScriptDelegate                    OnAnimNotifyWeaponAttach;                                 // 0x04B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnAnimNotifyWeaponDetach;                                 // 0x04C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnAnimNotifyUseItem;                                      // 0x04D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnLadderAnimationEnded;                                   // 0x04E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnAnimNotifyStepEvent;                                    // 0x04F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0500(0x0018) MISSED OFFSET
	class UAnimMontage*                                LastSpawnMontage;                                         // 0x0518(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       LastSpawnSectionName;                                     // 0x0520(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SpawnAnimStartTime;                                       // 0x0528(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x052C(0x0004) MISSED OFFSET
	class UDataTable*                                  ComboBlendTimeDataTable;                                  // 0x0530(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ThwackPlayRateCurve;                                      // 0x0538(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FComboMontageRule, struct FName>       ComboMontageRules;                                        // 0x0540(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FComboMontageRule, struct FName>       ThwackComboMontageRules;                                  // 0x0590(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FComboMontageRule, struct FName>       RiposteMontageRules;                                      // 0x05E0(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   ThwackComboMontage;                                       // 0x0630(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   FeintMontage;                                             // 0x0680(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, float>                          DelayBackToIdle;                                          // 0x06D0(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimationSet*/                    AnimationSetMount_Class_Default;                          // 0x0720(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimationSet*/                    AnimationSetSiege_Class_Default;                          // 0x0728(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimationSet*/                    AnimationSetOffhand1P_Class_Default;                      // 0x0730(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimationSet*/                    AnimationSetOffhand3P_Class_Default;                      // 0x0738(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimationSet*/                    AnimationSetPeasant_Class_Default;                        // 0x0740(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimationSet*/                    AnimationSetDeath1P_Default;                              // 0x0748(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimationSet*/                    AnimationSetDeath3P_Default;                              // 0x0750(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       Socket_LeftStirrup;                                       // 0x0758(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       Socket_RightStirrup;                                      // 0x0760(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SpeedLine;                                                // 0x0768(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x076C(0x0004) MISSED OFFSET
	struct FFootStepSounds                             FootStepSounds;                                           // 0x0770(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FAttackMontage                              CurrentAttackMontage;                                     // 0x07C0(0x01D8) (CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               AttackStates;                                             // 0x0998(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   SectionToCombatState;                                     // 0x09A8(0x0050) (CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   AltCombatStates;                                          // 0x09F8(0x0050) (CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   HeavyAttacks;                                             // 0x0A48(0x0050) (CPF_NativeAccessSpecifierPublic)
	struct FName                                       JabDeflectSection;                                        // 0x0A98(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   DeflectSections;                                          // 0x0AA0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   AltDeflectSections;                                       // 0x0AF0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   ParryStartSections;                                       // 0x0B40(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   AltParryStartSections;                                    // 0x0B90(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   FeintToParrySections;                                     // 0x0BE0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   AltFeintToParrySections;                                  // 0x0C30(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   ParrySuccessSections;                                     // 0x0C80(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   AltParrySuccessSections;                                  // 0x0CD0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   KnockdownSections;                                        // 0x0D20(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   KnockdownGroundSections;                                  // 0x0D70(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   GetUpSections;                                            // 0x0DC0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   FallingSections;                                          // 0x0E10(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   FallingGetUpSections;                                     // 0x0E60(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   DownedKnockdownSections;                                  // 0x0EB0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   DownedStaggerSections;                                    // 0x0F00(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   DownedPickupSections;                                     // 0x0F50(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   MountUpSections;                                          // 0x0FA0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   MountDownSections;                                        // 0x0FF0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   MountCombatStates;                                        // 0x1040(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<EConditionType, struct FName>                 MissingLimbNames;                                         // 0x1090(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   MountStaggerMontages;                                     // 0x10E0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FPeasantMontage>         PeasantStates;                                            // 0x1130(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               ServerIdlePoseCombatStates;                               // 0x1180(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               ServerIdlePoseMovementStates;                             // 0x1190(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               HideServerBones;                                          // 0x11A0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               TBLCharacter;                                             // 0x11B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTBLCharacterMovement*                       movement;                                                 // 0x11B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsPostInitialized;                                        // 0x11C0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsServer;                                                 // 0x11C1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               Is3p;                                                     // 0x11C2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x1];                                       // 0x11C3(0x0001) MISSED OFFSET
	struct FName                                       CombatState;                                              // 0x11C4(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x4];                                       // 0x11CC(0x0004) MISSED OFFSET
	class UCombatState*                                CombatStateBlueprint;                                     // 0x11D0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CombatStatePercent;                                       // 0x11D8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       AbilityName;                                              // 0x11DC(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       ComboState;                                               // 0x11E4(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x4];                                       // 0x11EC(0x0004) MISSED OFFSET
	class UAttackType*                                 AttackType;                                               // 0x11F0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    AimRotation;                                              // 0x11F8(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               IsDead;                                                   // 0x1204(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsRagdoll;                                                // 0x1205(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsShieldEquipped;                                         // 0x1206(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsCrouch;                                                 // 0x1207(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsDowned;                                                 // 0x1208(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsAttackQueued;                                           // 0x1209(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x2];                                       // 0x120A(0x0002) MISSED OFFSET
	float                                              MaxSpeed;                                                 // 0x120C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     InputDir;                                                 // 0x1210(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     Velocity;                                                 // 0x121C(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     PreviousVelocity;                                         // 0x1228(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     PreviousMeshLocation;                                     // 0x1234(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              VelocityInterpSpeed;                                      // 0x1240(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentSpeed;                                             // 0x1244(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentSpeed2d;                                           // 0x1248(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MovementDirection;                                        // 0x124C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MovementDirectionIndex;                                   // 0x1250(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MovementDirectionTime;                                    // 0x1254(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               OnStrafeStopNeedsEvent;                                   // 0x1258(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x3];                                       // 0x1259(0x0003) MISSED OFFSET
	float                                              MaxSpeedInCurrentState;                                   // 0x125C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MovementStateWeight;                                      // 0x1260(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MovementStateInterpSpeed;                                 // 0x1264(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsMove;                                                   // 0x1268(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x3];                                       // 0x1269(0x0003) MISSED OFFSET
	float                                              CharMoveWeight;                                           // 0x126C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       MovementState;                                            // 0x1270(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       PreviousMovementState;                                    // 0x1278(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DashDirection;                                            // 0x1280(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    SprintTurnDirection;                                      // 0x1284(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              SprintTurnAngle;                                          // 0x1290(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SprintTurnWeight;                                         // 0x1294(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsLunge;                                                  // 0x1298(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x3];                                       // 0x1299(0x0003) MISSED OFFSET
	float                                              LungeStartTime;                                           // 0x129C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsOnHorse;                                                // 0x12A0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x7];                                       // 0x12A1(0x0007) MISSED OFFSET
	class UTBLHorseAnimInstance*                       HorseAnimBP;                                              // 0x12A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsOnSiege;                                                // 0x12B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsAltPosition;                                            // 0x12B1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x2];                                       // 0x12B2(0x0002) MISSED OFFSET
	struct FName                                       SiegeName;                                                // 0x12B4(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData12[0x4];                                       // 0x12BC(0x0004) MISSED OFFSET
	class UTBLAnimInstance*                            SiegeAnimBP;                                              // 0x12C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTBLBatteringRamAnimInstance*                BatteringRamAnimBP;                                       // 0x12C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       AnimationSetName;                                         // 0x12D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       AnimationSetName_OffHand;                                 // 0x12D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CurrentEmoteName;                                         // 0x12E0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CurrentEmoteMontageName;                                  // 0x12E8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsPlayingSequencerAnimation;                             // 0x12F0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData13[0x3];                                       // 0x12F1(0x0003) MISSED OFFSET
	struct FName                                       LastMissingLimb;                                          // 0x12F4(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsItemEquipped;                                           // 0x12FC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsLeftFootTap;                                            // 0x12FD(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsRightFootTap;                                           // 0x12FE(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData14[0x1];                                       // 0x12FF(0x0001) MISSED OFFSET
	float                                              AttackWindupWeight;                                       // 0x1300(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EAnimGraphBranch01                                 AnimGraphBranch01;                                        // 0x1304(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData15[0x3];                                       // 0x1305(0x0003) MISSED OFFSET
	float                                              AimPitch;                                                 // 0x1308(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsOffHandAttack;                                          // 0x130C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               PreviousIsOnHorse;                                        // 0x130D(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIdlePoseCombatState;                                     // 0x130E(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIdlePoseMovementState;                                   // 0x130F(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              IdlePoseStateTime;                                        // 0x1310(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              InitialMoveTime;                                          // 0x1314(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FAnimDamageParams                           PreviousDamageParams;                                     // 0x1318(0x0040) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               AnimationSetBase;                                         // 0x1358(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               AnimationSetBase1P;                                       // 0x1360(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               AnimationSetBase3P;                                       // 0x1368(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               AnimationSetBaseMount;                                    // 0x1370(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               AnimationSetBaseSiege;                                    // 0x1378(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               AnimationSetBaseDeath;                                    // 0x1380(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               PreviousAnimationSetBase;                                 // 0x1388(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AHorse*                                      Horse;                                                    // 0x1390(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AActor*                                      Siege;                                                    // 0x1398(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimMontage*                                ParryMontage;                                             // 0x13A0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimMontage*                                ParryEventMontage;                                        // 0x13A8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimMontage*                                ParryRiposteShieldMontage;                                // 0x13B0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimMontage*                                ParrySuccessMontage;                                      // 0x13B8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               CarryableParentCharacter;                                 // 0x13C0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimMontage*                                KnockdownMontage;                                         // 0x13C8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       KnockdownDirection;                                       // 0x13D0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimMontage*                                FallingMontage;                                           // 0x13D8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimMontage*                                InteractMontage;                                          // 0x13E0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimMontage*                                ReloadMontage;                                            // 0x13E8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimMontage*                                PeasantMontage;                                           // 0x13F0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FCombatStateMontage                         CurrentCombatStateMontage;                                // 0x13F8(0x0010) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bCarryablePickup;                                         // 0x1408(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData16[0x3];                                       // 0x1409(0x0003) MISSED OFFSET
	float                                              InventoryAnimationLength;                                 // 0x140C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SprintTurnEndTime;                                        // 0x1410(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsCustomizationAnimInstance;                              // 0x1414(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData17[0x3];                                       // 0x1415(0x0003) MISSED OFFSET
	float                                              LipSyncVOMeter;                                           // 0x1418(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData18[0x4];                                       // 0x141C(0x0004) MISSED OFFSET
	TMap<class UAnimMontage*, class UAnimMontage*>     NoBlend1PMontages;                                        // 0x1420(0x0050) (CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               CharAnimationSet;                                         // 0x1470(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               CharAnimationSet1P;                                       // 0x1478(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               CharAnimationSet3P;                                       // 0x1480(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               CharAnimationSetMount;                                    // 0x1488(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               CharAnimationSetSiege;                                    // 0x1490(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               CharAnimationSetDeath;                                    // 0x1498(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               CharAnimationSetOffHand;                                  // 0x14A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               CharAnimationSetOffHand1P;                                // 0x14A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               CharAnimationSetOffHand3P;                                // 0x14B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               CharAnimationSetPeasant;                                  // 0x14B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               CharPreviousAnimationSet;                                 // 0x14C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData19[0x88];                                      // 0x14C8(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLCharacterAnimInstance"));
		return ptr;
	}


	void UpdateFootStepSounds(float DeltaSeconds, bool bHidden);
	void TriggerRagdoll();
	void StopCurrentCombatStateMontage(const struct FName& NewCombatState, float BlendTime);
	void StartPeasantAnimation(const struct FName& InCombatState);
	void StartParryAttack(class UAnimationSet* AnimSet);
	void StartAttack(bool bIsHeavy);
	bool ShouldStopAnimGraph();
	void SetOnHorse(bool bIsOnHorse);
	void SetDeathAnimationParameters(const struct FDamageTakenEvent& Event, uint32_t RandomSeed);
	void ReverseLadderAnimation();
	void PlaySpawnAnimation(const struct FName& AnimationName);
	void PlayLadderAnimation(const struct FName& SectionName);
	float PlayInventoryItemUse(class AInventoryItem* Item, bool bPickup);
	float PlayInventoryItemUnequipped(class AInventoryItem* Item);
	float PlayInventoryItemEquipped(class AInventoryItem* Item);
	void PlayInventoryAnimation(const struct FName& Animation, class AInventoryItem* Item);
	void PlayHorseMountAnimation(const struct FName& AnimationName);
	void PlayHorseLandedAnimation();
	void PlayHorseDismountAnimation(const struct FName& AnimationName);
	void PlayDeathAnimation();
	void PlayCombatStateMontage(const struct FName& InCombatState, const struct FName& MontageName, const struct FName& SectionName, class UAnimationSet* AnimSet);
	void OnWasHitEarly(const struct FEarlyHitResult& EarlyHit);
	void OnVault(class AVaultMarker* VaultMarker);
	void OnUnfreezeRagdollPhysics();
	void OnSwitchAttack();
	void OnStartAttack();
	void OnSprintTurn();
	void OnSpawnAnimationComplete(class UAnimMontage* Montage, bool bInterrupted);
	void OnSignificanceChanged(ECharacterSignificanceLevel InSignificance);
	void OnSetRagdollPhysics();
	void OnResetForAnimInstancePool();
	void OnRecentlyRendered(bool bInRecentlyRendered);
	void OnRagdollHitFxEvent(class AActor* HitTaker, class AActor* HitCauser, class AInventoryItem* Weapon, const struct FHitResult& HitResult, const struct FVector& HitDirection, float Damage, class UDamageSource* DamageSource, class AActor* Projectile, const struct FName& AttackName);
	void OnPostDamage(const struct FDamageTakenEvent& DamageEvent, const struct FPostDamageEventInfo& PostDamageInfo);
	void OnParrySuccess(class ATBLCharacter* ThisCharacter, class ATBLCharacter* OtherCharacter, const struct FParryEventState& ParryEventState);
	void OnParryInEnded(class UAnimMontage* Montage, bool bInterrupted);
	void OnMovementStateUpdate(float DeltaSeconds);
	void OnMovementStateChanged(const struct FName& MovementState);
	void OnMovementActionStarted(const struct FName& MovementName, const struct FRotator& Direction);
	void OnMovementActionFinished(const struct FName& MovementName);
	void OnMount(class AActor* AttachParent, class USiegeMountPoint* MountPoint);
	void OnMeleeSuccess(class ATBLCharacter* DamagedCharacter);
	void OnKilled(const struct FDeathDamageTakenEvent& Event);
	void OnGetUp(const struct FName& Direction);
	void OnFreezeRagdollPhysics();
	void OnEquippedItemsChanged();
	void OnDismount(class AActor* AttachParent, EDismountType DismountType);
	void OnCustomizationApplied(const struct FCustomizationContext& Context);
	void OnCrowdControlNoDamage(class AActor* OwningActor, const struct FName& InCombatState, const struct FCrowdControlParams& CrowdControlParams);
	void OnCrowdControl(const struct FName& InCombatState, const struct FAnimDamageParams& DamageEvent, ECrowdControlVariant CrowdControlVariant);
	void OnConditionAdded(class AActor* Actor, EConditionType Condition);
	void OnCombatStateEvent(class AActor* Actor, const struct FName& EventName, const struct FAttackInfo& EventAttackInfo);
	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void OnCombatStateBegin(class AActor* Actor, const struct FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void OnChildAttachedToMesh(class USceneComponent* Child);
	void OnCarryableParent_CombatStateBegin(class AActor* Actor, const struct FName& InCombatStateName, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void OnCarryableCharacterEvent(const struct FName& EventName, class ATBLCharacter* ParentCharacter);
	void OnBackToIdleTimer();
	void OnAnimationSetChanged(const struct FName& AnimSetName, const struct FAnimationSetDataTable& AnimInfo, class AInventoryItem* InventoryItem);
	void OnAnimationComplete();
	void NotifyCompleteDeathAnimation();
	void LadderSectionChanged(class UAnimMontage* Montage, int NextSection);
	void LadderMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	void HideUnusedBonesOnServer();
	void HideBones(TArray<struct FName> BoneList, TArray<struct FName> VisibleBones);
	int GetStopAnimGraphValue();
	void GetSpawnMontage(const struct FName& AnimationName, class UAnimMontage** Montage, struct FName* MontageName, struct FName* SectionName);
	float GetPhysicsSpawnTime(const struct FName& AnimationName);
	float GetPeasantAnimationLength(const struct FName& InCombatState);
	float GetMountAnimationLength(bool MountUp, const struct FName& Direction);
	struct FVector GetLadderMountOffset(bool MountUp, bool bFromTop);
	float GetInventoryAnimationLength();
	struct FVector GetHorseDismountOffset(const struct FName& AnimationName);
	void GetCurrentSpawnRootMotion(const struct FName& AnimationName, float Position, struct FVector* OutTranslation, struct FRotator* OutRotation);
	float GetCurrentSpawnAnimationTime();
	void GetCurrentRootMotion(class UAnimMontage* Montage, const struct FName& SectionName, bool bEndAnimation, float Position, struct FVector* OutTranslation, struct FRotator* OutRotation);
	void GetCurrentLadderRootMotion(const struct FName& SectionName, bool bEndAnimation, struct FVector* OutTranslation, struct FRotator* OutRotation);
	class UAnimationSet* GetAnimationSetFromData(const struct FAnimationSetDataTable& AnimInfo);
	void EventVOPlaying(bool IsPlaying);
	void EventUnfreezeRagdollPhysics();
	void EventSpawnMontageStart(const struct FName& AnimationName);
	void EventSpawnMontageComplete(const struct FName& AnimationName);
	void EventOnWantsToGallop(bool bWantsToGallop);
	void EventOnStrafeStop();
	void EventOnStartAttack(const struct FName& InAbilityName, const struct FName& InCombatState, const struct FName& InComboState, class UAttackType* InAttackType);
	void EventOnSprintStop(bool bIsHoldingMoveKey);
	void EventOnSprintState(const struct FName& SprintState);
	void EventOnSprintStart();
	void EventOnSignificanceChanged();
	void EventOnSiegeMounted();
	void EventOnSiegeDismounted(EDismountType DismountType);
	void EventOnMovementStateChanged(const struct FName& InMovementState, const struct FName& InPreviousMovementState);
	void EventOnMovementDirectionChanged();
	void EventOnMovementActionStarted(const struct FName& MovementName, const struct FRotator& Direction);
	void EventOnMissingLimb(const struct FName& Condition);
	void EventOnMeleeHitSuccess(const struct FName& AttackName, const struct FName& AttackComboState);
	void EventOnLanded();
	void EventOnKilled(const struct FAnimDeathParams& Params);
	void EventOnJump();
	void EventOnInterrupt(const struct FAnimDamageParams& DamageEvent);
	void EventOnHorseStartMount(const struct FName& Direction);
	void EventOnHorseStartDismount(const struct FName& Direction);
	void EventOnHorseMounted();
	void EventOnHorseDismounted(EDismountType DismountType);
	void EventOnHitAfterDeath(const struct FAnimDeathParams& Params);
	void EventOnGetUp(const struct FName& Direction);
	void EventOnDisarm();
	void EventOnDashCooldownFinished();
	void EventOnDash(float InDashDirection);
	void EventOnCrowdControl(const struct FName& InCombatState, const struct FAnimDamageParams& DamageEvent, ECrowdControlVariant CrowdControlVariant);
	void EventOnCombatStateEnd(class AActor* Actor, const struct FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void EventOnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void EventOnCombatStateBegin(class AActor* Actor, const struct FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void EventOnCameraOffsetEnd(float AngleOffset);
	void EventOnCameraOffsetBegin();
	void EventHiddenPositionUpdate();
	void EventFreezeRagdollPhysics();
	void EventDamageNoInterrupt(const struct FAnimDamageParams& DamageEvent);
	void EventCarryableCharacter(const struct FName& EventName, class ATBLCharacter* ParentCharacter);
	void DisableSpawnRootMotion(const struct FName& AnimationName);
	void DisableAttackRootMotion();
	void CustomizationWeaponToStand(class UAnimMontage* Montage, bool bInterrupted);
	void CustomizationStandToWeapon(class UAnimMontage* Montage, bool bInterrupted);
	void CarryableSectionChanged(class UAnimMontage* Montage, int NextSection);
	void BlueprintOnAnimationSetChanged();
	void AnimNotify_WeaponDetach();
	void AnimNotify_WeaponAttach();
	void AnimNotify_UseItem();
	void AnimNotify_ShieldDetach();
	void AnimNotify_ShieldAttach();
	void AnimNotify_Revive();
	void AnimNotify_DropWeapon();
};


// Class TBL.TBLCharacterAnimInstance_Customization
// 0x0000 (0x1550 - 0x1550)
class UTBLCharacterAnimInstance_Customization : public UTBLCharacterAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLCharacterAnimInstance_Customization"));
		return ptr;
	}

};


// Class TBL.TBLCharacterAnimInstance_Peasant
// 0x0010 (0x1560 - 0x1550)
class UTBLCharacterAnimInstance_Peasant : public UTBLCharacterAnimInstance
{
public:
	class UNPCReplicatedDataComponent*                 NPCReplicatedDataComponent;                               // 0x1550(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x1558(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLCharacterAnimInstance_Peasant"));
		return ptr;
	}

};


// Class TBL.TBLCharacterAnimInstance_Playable
// 0x0110 (0x1660 - 0x1550)
class UTBLCharacterAnimInstance_Playable : public UTBLCharacterAnimInstance
{
public:
	EEquippedHand                                      WeaponEquippedType;                                       // 0x1550(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x1551(0x0003) MISSED OFFSET
	struct FVector2D                                   StrafeDirection;                                          // 0x1554(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CameraOffsetRotation;                                     // 0x155C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsCameraOffset;                                           // 0x1560(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0xF];                                       // 0x1561(0x000F) MISSED OFFSET
	struct FTransform                                  LeftStirrup;                                              // 0x1570(0x0030) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FTransform                                  RightStirrup;                                             // 0x15A0(0x0030) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    AimRate;                                                  // 0x15D0(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              MovementAcceleration;                                     // 0x15DC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              InputDirection;                                           // 0x15E0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              InputDirectionTime;                                       // 0x15E4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              WoundedWeight;                                            // 0x15E8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector2D                                   WoundedWeightRange;                                       // 0x15EC(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              WoundedWeightInterpSpeed;                                 // 0x15F4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LowStaminaWeight;                                         // 0x15F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector2D                                   LowStaminaWeightRange;                                    // 0x15FC(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    SlopeAngle;                                               // 0x1604(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              SlopeWeight;                                              // 0x1610(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     HeadlookLocation;                                         // 0x1614(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsHeadlook;                                               // 0x1620(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               PreviousDashCooldown;                                     // 0x1621(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2];                                       // 0x1622(0x0002) MISSED OFFSET
	float                                              PreviousSpeed;                                            // 0x1624(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PreviousSpeed2d;                                          // 0x1628(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    PreviousAimDirection;                                     // 0x162C(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              PreviousMovementDirection;                                // 0x1638(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PreviousMovementDirectionTime;                            // 0x163C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PreviousInputDirection;                                   // 0x1640(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PreviousInputDirectionTime;                               // 0x1644(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PreviousAcceleration2d;                                   // 0x1648(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PreviousSprintTime;                                       // 0x164C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PreviousBackSpeedModifier;                                // 0x1650(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               PreviousIsSprinting;                                      // 0x1654(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0xB];                                       // 0x1655(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLCharacterAnimInstance_Playable"));
		return ptr;
	}

};


// Class TBL.TBLCharacterMountableAnimInstance
// 0x0040 (0x04F0 - 0x04B0)
class UTBLCharacterMountableAnimInstance : public UTBLAnimInstance
{
public:
	class ATBLCharacter*                               LeftCharacter;                                            // 0x04B0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               RightCharacter;                                           // 0x04B8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      LeftCharacterMesh;                                        // 0x04C0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      RightCharacterMesh;                                       // 0x04C8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CombatState;                                              // 0x04D0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ChargePercent;                                            // 0x04D8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04DC(0x0004) MISSED OFFSET
	class UTBLCharacterAnimInstance_Playable*          LeftCharacterAnimBP;                                      // 0x04E0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTBLCharacterAnimInstance_Playable*          RightCharacterAnimBP;                                     // 0x04E8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLCharacterMountableAnimInstance"));
		return ptr;
	}


	void OnHealthChanged(float Amount, class AActor* Initiator);
	void OnAnimationStart();
	void MountableActorDeadOnStartup();
	void EventOnKilled();
	void EventOnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void AnimNotify_MountableActorKilledAnim_End();
	void AnimNotify_InFinalMontageSection();
	void AnimNotify_CharacterRecovery_End();
	void AnimNotify_CharacterFire_Action();
};


// Class TBL.TBLCharacterMovement
// 0x0790 (0x18B0 - 0x1120)
class UTBLCharacterMovement : public UTBLCharacterMovementBaseComponent
{
public:
	struct FMulticastScriptDelegate                    OnMovementStateChanged;                                   // 0x1120(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnJumpPressed;                                            // 0x1130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnJump;                                                   // 0x1140(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnLanded;                                                 // 0x1150(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSprintState;                                            // 0x1160(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnStartedFalling;                                         // 0x1170(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMovementSync;                                           // 0x1180(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSprintStop;                                             // 0x1190(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnVault;                                                  // 0x11A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlayLadderAnimation;                                    // 0x11B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnReverseLadderAnimation;                                 // 0x11C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPlaySpawnAnimation;                                     // 0x11D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMovementInput;                                          // 0x11E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMovementStateUpdate;                                    // 0x11F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnSprintTurn;                                             // 0x1200(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              ForwardSpeedModifier;                                     // 0x1210(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BackSpeedModifier;                                        // 0x1214(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              StrafeSpeedModifier;                                      // 0x1218(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector2D                                   SprintStrafeSpeedModifier;                                // 0x121C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector2D                                   ForwardStrafeSpeedModifier;                               // 0x1224(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector2D                                   BackStrafeSpeedModifier;                                  // 0x122C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableJump;                                             // 0x1234(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x1235(0x0003) MISSED OFFSET
	float                                              DisableSlideMaxAngle;                                     // 0x1238(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SprintForwardAcceleration;                                // 0x123C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SprintStrafeAcceleration;                                 // 0x1240(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FChaseMechanicParams                        ChaseMechanicParams;                                      // 0x1244(0x0020) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x1264(0x0004) MISSED OFFSET
	struct FLandingSlowDownParams                      LandingSlowDownParams;                                    // 0x1268(0x0020) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              ViewPitchMinSpinningSpecial;                              // 0x1288(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ViewPitchMaxSpinningSpecial;                              // 0x128C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ViewPitchMinStanding;                                     // 0x1290(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ViewPitchMaxStanding;                                     // 0x1294(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ViewPitchMinCrouching;                                    // 0x1298(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ViewPitchMaxCrouching;                                    // 0x129C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ViewPitchInterpSpeed;                                     // 0x12A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ViewPitchSpinningSpecialInterpSpeed;                      // 0x12A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSprintTurnParams                           SprintTurnParams;                                         // 0x12A8(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              DownedCapsuleHalfHeight;                                  // 0x12D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DownedCapsuleRadius;                                      // 0x12D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DownedTurnLimit;                                          // 0x12D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinimumCrouchTime;                                        // 0x12DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AutoSprintDelay;                                          // 0x12E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       DelayPlaySpawnAnimation;                                  // 0x12E4(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x12EC(0x0004) MISSED OFFSET
	struct FSpawnState                                 SpawnState;                                               // 0x12F0(0x0040) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayingSpawnAnimation;                                   // 0x1330(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bMoveForwardHeld;                                         // 0x1331(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bMoveBackwardHeld;                                        // 0x1332(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bMoveRightHeld;                                           // 0x1333(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bMoveLeftHeld;                                            // 0x1334(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x1335(0x0003) MISSED OFFSET
	float                                              MoveForwardHeldTime;                                      // 0x1338(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MoveBackwardHeldTime;                                     // 0x133C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MoveRightHeldTime;                                        // 0x1340(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MoveLeftHeldTime;                                         // 0x1344(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWantsToSprint;                                           // 0x1348(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWantsToAutoSprint;                                       // 0x1349(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bForceWalk;                                               // 0x134A(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAutoSprint;                                              // 0x134B(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSprintLocked;                                            // 0x134C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAltAttackWithMovement;                                   // 0x134D(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bGamepadSprint;                                           // 0x134E(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x9];                                       // 0x134F(0x0009) MISSED OFFSET
	struct FReplicated_Bool                            InventoryCanJump;                                         // 0x1358(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Float                           InventorySpeedPenalty;                                    // 0x1370(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Float                           PerksSpeedBonus;                                          // 0x1388(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentAimPenalty;                                        // 0x13A0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentRangedInaccuracy;                                  // 0x13A4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     PreMoveVelocity;                                          // 0x13A8(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x4];                                       // 0x13B4(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnPostLockMovement;                                       // 0x13B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnCrouch;                                                 // 0x13C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnDash;                                                   // 0x13D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsMovementLocked : 1;                                    // 0x13E8(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x3];                                       // 0x13E9(0x0003) MISSED OFFSET
	float                                              GamepadUsePressedTime;                                    // 0x13EC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsAutorunSprinting;                                      // 0x13F0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bForceMaxSprint;                                          // 0x13F1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x2];                                       // 0x13F2(0x0002) MISSED OFFSET
	float                                              LastTickSprintSpeed;                                      // 0x13F4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UStatsComponent*                             Stats;                                                    // 0x13F8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMovementModifierComponent*                  MovementModifiers;                                        // 0x1400(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DefaultMovementSpeed;                                     // 0x1408(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x4];                                       // 0x140C(0x0004) MISSED OFFSET
	struct FReplicated_Bool                            bIsSprinting;                                             // 0x1410(0x0018) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FSprintState                                SprintState;                                              // 0x1428(0x004C) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FSpawnBoost                                 SpawnBoost;                                               // 0x1474(0x0028) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x4];                                       // 0x149C(0x0004) MISSED OFFSET
	struct FReplicated_Float                           RepCurrentSpawnBoost;                                     // 0x14A0(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FReplicated_FReplicatedSprintTurn           ReplicatedSprintTurn;                                     // 0x14B8(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsDowned : 1;                                            // 0x14D0(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x3];                                       // 0x14D1(0x0003) MISSED OFFSET
	int                                                DownedTurnRateId;                                         // 0x14D4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCharacterCollisionEnabled;                               // 0x14D8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x3];                                       // 0x14D9(0x0003) MISSED OFFSET
	float                                              DashCooldown;                                             // 0x14DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              JumpCooldown;                                             // 0x14E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              JumpFromDashCooldown;                                     // 0x14E4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastDashTime;                                             // 0x14E8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastLandedTime;                                           // 0x14EC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLadderState                                LadderState;                                              // 0x14F0(0x0070) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FLadderRootMotionBlend                      LadderRootMotionBlend;                                    // 0x1560(0x0090) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FLadderRotationBlend                        LadderRotationBlend;                                      // 0x15F0(0x003C) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x4];                                       // 0x162C(0x0004) MISSED OFFSET
	struct FReplicated_Float                           ChaseBonus;                                               // 0x1630(0x0018) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ChaseTime;                                                // 0x1648(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bTeleport;                                                // 0x164C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x3];                                       // 0x164D(0x0003) MISSED OFFSET
	struct FVector                                     TeleportLocation;                                         // 0x1650(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    TeleportRotation;                                         // 0x165C(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              TeleportTime;                                             // 0x1668(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x4];                                       // 0x166C(0x0004) MISSED OFFSET
	double                                             LastFindFloorTime;                                        // 0x1670(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LastHitDirection;                                         // 0x1678(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FFindFloorResult                            CurrentFollowGround;                                      // 0x1684(0x0094) (CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              FallingStartTime;                                         // 0x1718(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x4];                                       // 0x171C(0x0004) MISSED OFFSET
	struct FReplicated_FName                           CharacterMovementState;                                   // 0x1720(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LastNonZeroVelocity;                                      // 0x1738(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LastNonZeroAcceleration;                                  // 0x1744(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FReplicated_EMovementDirection              LastHorizontalInput;                                      // 0x1750(0x0018) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FReplicated_EMovementDirection              LastVerticalInput;                                        // 0x1768(0x0018) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0x50];                                      // 0x1780(0x0050) MISSED OFFSET
	TArray<struct FAimPenalty>                         ActiveAimPenalties;                                       // 0x17D0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MovementBlockId;                                          // 0x17E0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x4];                                       // 0x17E4(0x0004) MISSED OFFSET
	TArray<struct FScaleDirectionParams>               ActiveScaleDirection;                                     // 0x17E8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ScaleDirectionalMovementId;                               // 0x17F8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              bMovementBlockEndOnLanding;                               // 0x17FC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FDismountBlendParams                        DismountBlendParams;                                      // 0x1800(0x0054) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                UpdateSpawnBonusHandle;                                   // 0x1854(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MovementSpeed;                                            // 0x1858(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SprintBaseSpeed;                                          // 0x185C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SprintMaxSpeed;                                           // 0x1860(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SprintStartTime;                                          // 0x1864(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SprintStartMinTime;                                       // 0x1868(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SprintTime;                                               // 0x186C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SprintDeceleration;                                       // 0x1870(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              StrafeAccelerationModifier;                               // 0x1874(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DownedMovementSpeed;                                      // 0x1878(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DownedSprintSpeed;                                        // 0x187C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsCrouchHeld;                                            // 0x1880(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsCrouchKeyHeld;                                         // 0x1881(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData18[0x2];                                       // 0x1882(0x0002) MISSED OFFSET
	float                                              CrouchStartTime;                                          // 0x1884(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastTurnTime;                                             // 0x1888(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsPossessed : 1;                                         // 0x188C(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData19[0x23];                                      // 0x188D(0x0023) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLCharacterMovement"));
		return ptr;
	}


	void WalkKeyReleased();
	void WalkKeyPressed();
	void UpdateSprint(float DeltaTime);
	void StopCrouch();
	void StartJump();
	void StartDash();
	void StartCrouch();
	void StartAutoSprint();
	void SprintTurnTick(float DeltaSeconds);
	void SprintTurnDecelerate();
	void SprintTick(float DeltaSeconds);
	void SprintStartTick(float DeltaSeconds);
	void SprintStart();
	void SprintKeyReleased();
	void SprintKeyPressed();
	void SprintFinished();
	void SprintDecelerateToSprint(float Speed);
	void SprintDecelerateTick(float DeltaSeconds);
	void SprintDecelerate();
	void SetWalkKey(bool bWalk);
	void SetSprintLocked(bool bSprintLock);
	void SetSprintKey(bool bSprint);
	void SetDownedTurnRate(bool bDowned);
	void SetDownedAutonomous();
	void SetAutoSprintKey(bool bSprint);
	void SetAutoSprint(bool bEnable);
	void SetAutorunElapsedTime(float ElapsedTime);
	void SetAltAttackWithMovement(bool bEnable);
	void ServerStartSpawnBonus(const struct FStartSpawnBonus& Params);
	void ServerSetMoveRight(bool bPressed);
	void ServerSetMoveLeft(bool bPressed);
	void ServerSetMoveBackward(bool bPressed);
	void ServerSetDowned(bool bDowned, float ClientTimeStamp);
	void ServerPlaySpawnAnimation(const struct FName& Animation, float ActorYaw, float ClientTimeStamp);
	void ServerPlayLadderAnimation(const struct FTBL_FPlayLadderAnimation& Params);
	void ServerMountLadder(float ClientTimeStamp);
	void ServerLadderDismountPressed();
	void ServerEndLadderMovement(const struct FTBL_FEndLadderMovement& Params);
	void ResumeSprintCombatState();
	void PlaySpawnAnimation_Internal(const struct FName& Animation);
	void PlaySpawnAnimation(const struct FName& Animation);
	void OnRep_ReplicatedSprintTurn();
	void OnRep_RepCurrentSpawnBoost();
	void OnRep_CharacterMovementState();
	void OnLadderAnimationEnded();
	void OnEquippedItemsChanged();
	void OnDismount(class AActor* AttachParent, EDismountType DismountType);
	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState);
	void OnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void MoveIgnoreActorRemove(class AActor* ActorToIgnore);
	void MoveIgnoreActorAdd(class AActor* ActorToIgnore);
	struct FVector MoveDirectionToVector(TEnumAsByte<EMovementDirection> Direction);
	float MoveDirectionToAngle(TEnumAsByte<EMovementDirection> Direction);
	void LimitSprintTurnRate(float DeltaTime);
	void LadderDismountReleased();
	void LadderDismountPressed();
	bool IsSprinting();
	bool IsSprintDecelerating();
	bool IsCrouchKeyHeld();
	void HandleDelaySpawnAnimation();
	float GetSprintTime();
	struct FSprintState GetSprintState();
	struct FName GetMovementState();
	float GetMovementSpeed();
	struct FName GetMovementInputName();
	struct FVector GetMovementInputDirection(bool bUseLastNonZero);
	TEnumAsByte<EMovementDirection> GetMovementDirection(bool bUseInputDirection, bool bUseLastNonZero);
	TEnumAsByte<EMovementDirection> GetLastVerticalInput();
	TEnumAsByte<EMovementDirection> GetLastHorizontalInput();
	float GetDefaultMovementSpeed();
	float GetChaseBonusPercent();
	void ForceMaxSprint();
	void EndPhysSpawn(bool bDisableRootMotion);
	void EndLadderMovement();
	void EnableCharacterCollision();
	void DownedSprintTick(float DeltaSeconds);
	void DownedSprintStart();
	void DownedSprintFinished();
	void DisableCharacterCollision();
	void ClientMountLadderFailed();
	void ClientForceLadderMovement(bool bDirectionUp);
	bool CanSprintShove();
	bool CanSprintAttack();
	bool CanSprint(bool bStartSprint);
	void BroadcastStartVault(class AVaultMarker* VaultMarker);
	void BroadcastSetCharacterCollision(bool bEnabled);
	void BroadcastPlayLadderAnimation(const struct FName& Animation);
	void BroadcastIgnoreActorWhenMoving(class AActor* ActorToIgnore, bool bShouldIgnore);
	void BroadcastDownToUpLadderAnimation();
	void ApplyKnockback(class UMovementSequence* Sequence, class AActor* Initiator);
};


// Class TBL.TBLChatWidgetStyle
// 0x0910 (0x0940 - 0x0030)
class UTBLChatWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct FTBLChatStyle                               ChatStyle;                                                // 0x0030(0x0910) (CPF_Edit, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLChatWidgetStyle"));
		return ptr;
	}

};


// Class TBL.TBLCheatManager
// 0x00C8 (0x0140 - 0x0078)
class UTBLCheatManager : public UCheatManager
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0078(0x0008) MISSED OFFSET
	TSoftClassPtr<class UClass>                        BPCheatManagerClass;                                      // 0x0080(0x0028) (CPF_Config, CPF_GlobalConfig, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       AutoAttackName;                                           // 0x00A8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AutoAttackLoopTime;                                       // 0x00B0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AutoAttackChargeTime;                                     // 0x00B4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       AutoAttackHoldName;                                       // 0x00B8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bGodMode;                                                 // 0x00C0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bInvulnerable;                                            // 0x00C1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisableStaminaDrain;                                     // 0x00C2(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUnlimitedAmmo;                                           // 0x00C3(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRandomAttack;                                            // 0x00C4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bMoveToCharacter;                                         // 0x00C5(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRunAway;                                                 // 0x00C6(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsAutoAttack;                                            // 0x00C7(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsHeldParry;                                             // 0x00C8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRandomizeLoadout;                                        // 0x00C9(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsFOVUncapped;                                           // 0x00CA(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPlayerRVOEnabled;                                        // 0x00CB(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PlayerRVOConsiderationRadius;                             // 0x00CC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AutoClimbDirection;                                       // 0x00D0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET
	TArray<struct FName>                               RandomAttacks;                                            // 0x00D8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               ParryAbilities;                                           // 0x00E8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class ATBLAIController*                            ClientAIController;                                       // 0x00F8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FString>                             ExecFileCommands;                                         // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ExecFileDelayTime;                                        // 0x0110(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x24];                                      // 0x0114(0x0024) MISSED OFFSET
	class UTBLBPCheatManager*                          BPCheatManager;                                           // 0x0138(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLCheatManager"));
		return ptr;
	}


	void UpdateVirtualGood();
	void UpdateRunAway(float DeltaTime);
	void UpdateMoveToCharacter(float DeltaTime);
	void UpdateExecFileCommands(float DeltaTime);
	void UpdateAutoAttackHold();
	void UnpauseCharacter();
	void UnpauseAI();
	void UnlimitedAmmo();
	void UncapFOV();
	void ToggleShowBothMeshes();
	void ToggleCameraAnimsAndShakes();
	void Tick(float DeltaTime);
	void TestRPCDesync();
	void TestDrawTime();
	void StopHeldParry();
	void StopExecFile();
	void StopDumpingReplication();
	void StopAllSounds();
	void StartHeldParry();
	void StartDumpingReplication();
	void SpawnAsPeasant();
	void SpamRPC(int NumCalls, int NumBytesPerCall);
	void SkipPushableToEndPoint(class UObject* PushableActor);
	void SimulateLostServerConnection();
	void ShowThirdPersonMesh();
	void ShowServerFollowMesh();
	void ShowFirstPersonMesh();
	void ShowBothMeshes();
	void SetWatchedCharacter();
	void SetStatBase(EStat Stat, float Value);
	void SetPawnRVO(class ATBLCharacter* Character, bool bEnabled);
	void SetPauseCharacter(bool bPaused);
	void SetPauseAI(bool bPaused);
	void SetHealth(float Value);
	void SetCulture(const struct FString& Culture);
	void SetAmmo(int Ammo);
	void SendToTrace(const struct FString& Command);
	void SendToAll(const struct FString& Command);
	void SendCheatToServerObj(const struct FName& CheatComand, class UObject* Obj);
	void SendCheatToServer(const struct FName& CheatComand, const struct FName& Param);
	void SaveAll(const struct FString& ClassName);
	void Revive();
	void RespawnLoadout();
	void RespawnImmediately();
	void ResetHeldParry();
	void RemoveStamina();
	void RechargeSpecialItem();
	void ReceivedCheatFromClientObj(const struct FName& CheatCommand, class UObject* Param);
	void ReceivedCheatFromClient(const struct FName& CheatCommand, const struct FName& Param);
	void RandomizeLoadout(bool bEnable);
	void PushLogs(const struct FString& SourcePath, const struct FString& DestPath);
	void PushCmdToTrace(const struct FString& Cmd);
	void PushCmd(const struct FString& Cmd);
	void PromptForRemoteDebugging();
	void ProfileGpuTopMaterials();
	void PrintStats();
	void PlayFromHere();
	void PlayerRVOEnable(float AvoidanceRadius);
	void PlayerRVODisable();
	void PingServer(const struct FString& ServerAddress);
	void PauseCharacter();
	void PauseAI();
	void OnPossess();
	void OnKilled();
	void NextLatentCommand();
	void MergeMeshes();
	void MergeMaterials();
	void ManualInterrupt();
	void LoseHelmet();
	void LoadCatapult();
	void LoadAllCustomizationAssets();
	void KillHorse();
	bool IsFOVUncapped();
	bool IsAutoAttacking();
	void Invulnerable();
	void InputAction(const struct FName& AttackName, TEnumAsByte<EInputEvent> Event);
	void IgnoreAI();
	void HorseGotoState(const struct FName& CombatState, const struct FName& HitDirection, int Variant);
	void HorseAutorun(bool bEnable);
	void HideDebugActor();
	void HideBothMeshes();
	void HeldParryLoop();
	void GoToStatePlaying();
	void GotoStateOnComponent(class UCombatStateComponent* Component, const struct FName& CombatState, const struct FName& HitDirection, int Variant);
	void GotoState(const struct FName& CombatState, const struct FName& HitDirection, int Variant);
	void GiveHorse();
	void GiveArmoredHorse();
	class ATBLCharacter* GetAnotherCharacter();
	void ForceGC();
	void FakeGameIntent(const struct FString& ActivityId);
	void Exi(const struct FString& Cmd);
	void ExecFileDelay(float Time, float Variation);
	void ExecFile(const struct FString& Filename);
	void EnableHUDPostProcess();
	void DumpReplicationCounts();
	void DumpPlayers();
	void DumpCharacters();
	void DumpCharacterReplicationCounts();
	void DrawUnits(float Distance);
	void DisableStaminaDrain();
	void DisableHUDPostProcess();
	void DestroyClientBot();
	void DestroyAllForcedMoveForTeam(int Team);
	void DebugShowLoadingScreen(const struct FString& MapName);
	void DebugHideLoadingScreen();
	void CloseBlueprintDebugMenu();
	void ClientForceGC();
	void ClientBot();
	void ClearReplicationCounts();
	void ClearCharacterRuntimeAssetCache();
	void ClearAllForceMoveToPlayer(int Team);
	void CheckLightingBuilt();
	bool BpCheat(const struct FString& Cmd);
	void BotsBecomeGods();
	void BotNearestForceMoveToPlayer(int Team);
	void BotGodsBecomeMortal();
	void BotForceMoveToPlayer(int Team, int bClearOtherForcedMoves);
	void BlueprintDebugMenu();
	void AutoRunAway(bool bEnable);
	void AutoMoveToCharacter(bool bEnable);
	void AutoClimbLadder(float Direction);
	void AutoAttackStart(const struct FName& AttackName, float ChargeTime, float LoopTime);
	void AutoAttackLoop();
	void AutoAttackHold(const struct FName& AttackName);
	void AutoAttackEx(const struct FName& AttackName, float ChargeTime, float LoopTime);
	void AutoAttackEndCharge();
	void AutoAttackClearInternal();
	void AutoAttackClear();
	void AutoAttack(const struct FName& AttackName);
	void ApplyStatBonus(EStat Stat, float Value);
	void ApplyDamage(float Damage, const struct FName& DamageType);
	void ApplyCondition(const struct FName& Condition);
	void AKStopProfilerCapture();
	void AKStartProfilerCapture(const struct FString& Filename);
	void AIObjectiveHere();
	void AddAchievementProgress();
};


// Class TBL.TBLBPCheatManager
// 0x0000 (0x0028 - 0x0028)
class UTBLBPCheatManager : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLBPCheatManager"));
		return ptr;
	}


	class ATBLPlayerController* GetOwnerPlayerController();
	class ATBLCharacter* GetOwnerCharacter();
};


// Class TBL.TBLCloudStorage
// 0x0070 (0x00C0 - 0x0050)
class UTBLCloudStorage : public UCloudStorageBase
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x0050(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLCloudStorage"));
		return ptr;
	}

};


// Class TBL.TBLBoxCollision
// 0x0000 (0x04A0 - 0x04A0)
class UTBLBoxCollision : public UBoxComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLBoxCollision"));
		return ptr;
	}

};


// Class TBL.TBLConsole
// 0x0088 (0x01B8 - 0x0130)
class UTBLConsole : public UConsole
{
public:
	struct FMulticastScriptDelegate                    DebugInputChar;                                           // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             ClientWhiteList;                                          // 0x0140(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FString>                             SuperAdminClientWhiteList;                                // 0x0150(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FString>                             SuperAdminServerWhiteList;                                // 0x0160(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FString>                             AdminClientWhiteList;                                     // 0x0170(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FString>                             AdminServerWhiteList;                                     // 0x0180(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FString>                             LimitedAdminClientWhiteList;                              // 0x0190(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FString>                             LimitedAdminServerWhiteList;                              // 0x01A0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLConsole"));
		return ptr;
	}

};


// Class TBL.TBLCrosshairInterface
// 0x0000 (0x0028 - 0x0028)
class UTBLCrosshairInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLCrosshairInterface"));
		return ptr;
	}


	void EnableCombatCondition(const struct FString& Keybinding, const struct FName& Condition, bool Enable, const struct FText& HintText);
	void CrosshairWasParried();
	void CrosshairTutorialSuccessMessage(const struct FText& CustomText);
	void CrosshairTutorialNeutralMessage(const struct FText& CustomText);
	void CrosshairTutorialFailedMessage(const struct FText& CustomText);
	void CrosshairProjectileFired();
	void CrosshairPostShuffleMessage();
	void CrosshairPostRespawnMessage(const struct FText& ClassName);
	void CrosshairOutOfCombatWarning(bool bShowMessage);
	void CrosshairLostLimbMessage();
	void CrosshairHoldingProgress(float Progress);
	void CrosshairHoldingInitiated(bool IsRangedAttack);
	void CrosshairHoldingCompleted();
	void CrosshairHoldingAborted(bool IsStateEnd, bool Force);
	void CrosshairGameplayEvent(const struct FName& Event, bool Enable, float Scaling, bool IsPositive);
	void CrosshairDamageTakenEvent(float Damage, float HitDirection);
	void CrosshairDamageEvent(const struct FName& Event, const struct FDamageTakenEvent& DamageTakenEvent, bool IsEnemy);
};


// Class TBL.TBLDebugCameraController
// 0x0008 (0x06B8 - 0x06B0)
class ATBLDebugCameraController : public ADebugCameraController
{
public:
	int                                                DisplayDebugScrollDir;                                    // 0x06B0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DisplayDebugScrollY;                                      // 0x06B4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLDebugCameraController"));
		return ptr;
	}


	void DisplayDebugScrollUp();
	void DisplayDebugScrollReleased();
	void DisplayDebugScrollDown();
};


// Class TBL.TBLDebugCameraHUD
// 0x0000 (0x0348 - 0x0348)
class ATBLDebugCameraHUD : public ADebugCameraHUD
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLDebugCameraHUD"));
		return ptr;
	}

};


// Class TBL.TBLDemoHUD
// 0x0020 (0x0128 - 0x0108)
class UTBLDemoHUD : public UWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0108(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLDemoHUD"));
		return ptr;
	}

};


// Class TBL.TBLDemoPlayerController
// 0x0028 (0x05D8 - 0x05B0)
class ATBLDemoPlayerController : public APlayerController
{
public:
	struct FMulticastScriptDelegate                    OnHideShowCursor;                                         // 0x05B0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnShowInGameMenu;                                         // 0x05C0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x05D0(0x0004) MISSED OFFSET
	bool                                               bIsFirstPerson;                                           // 0x05D4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x05D5(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLDemoPlayerController"));
		return ptr;
	}


	void ToggleHud();
	void ToggleDebugHud();
	void ToggleCamera();
	void ShowIngameMenu();
	void OnPausePlayback();
	void OnIncreasePlaybackSpeed();
	void OnDecreasePlaybackSpeed();
	bool IsPaused();
	bool IsFirstPerson();
	float GetPlaybackSpeed();
};


// Class TBL.TBLScreenManager
// 0x0120 (0x0440 - 0x0320)
class UTBLScreenManager : public UTBLUserWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0320(0x0010) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnGamepadNavigationModeChanged;                           // 0x0330(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnGamepadInputModeChanged;                                // 0x0340(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnButtonCalloutsChanged;                                  // 0x0350(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnKeyBindChanged;                                         // 0x0360(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPreviewMouseButtonDownEvent;                            // 0x0370(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, class UTBLUserWidget*>          RadioGroups;                                              // 0x0380(0x0050) (CPF_ExportObject, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FScreenStack>                        ScreenStacks;                                             // 0x03D0(0x0010) (CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UWidget*                                     ActiveCrosshair;                                          // 0x03E0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x58];                                      // 0x03E8(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLScreenManager"));
		return ptr;
	}


	void SwapNamedScreenToFront(const struct FName& ScreenName, class UOverlay* Overlay);
	void SetWidgetAsRadioGroupSelection(const struct FName& Group, class UTBLUserWidget* InSelection);
	void SetHudVisibility(bool bVisible);
	void SetActiveCrosshair(class UWidget* Crosshair);
	bool RemoveScreenFromStack(class UTBLScreenWidget* Screen, class UOverlay* Overlay, bool bPopOnly, bool bDontTellScreen);
	static void PushShowMouseCursorStack(class UObject* Object);
	void PushScreenToStack(class UTBLScreenWidget* Screen, class UOverlay* Overlay);
	void PushNamedScreenToStack(class UTBLScreenWidget* Screen, class UOverlay* Overlay, const struct FName& ScreenName);
	static void PopShowMouseCursorStack(class UObject* Object);
	void PopScreenStack(class UOverlay* Overlay);
	void OpenDebugMenu(class UBlueprintDebugMenuComponent* DebugMenuComponent);
	void GetTopScreen(class UOverlay* Overlay, struct FName* OutScreenName, class UTBLScreenWidget** OutScreen);
	EGamepadNavigationMode GetGamepadNavigationMode();
	EGamepadInputMode GetGamepadInputMove();
	class UWidget* GetActiveCrosshair();
	void ClearScreenStack(class UOverlay* Overlay);
	void BP_FadeOut(float PlaybackSpeed);
	void BP_FadeIn(float PlaybackSpeed);
};


// Class TBL.TBLDialogManager
// 0x0010 (0x0450 - 0x0440)
class UTBLDialogManager : public UTBLScreenManager
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0440(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLDialogManager"));
		return ptr;
	}


	struct FDialogHandle ShowYesNoDialog(const struct FText& Title, const struct FText& Body, const struct FScriptDelegate& YesDelegate, const struct FScriptDelegate& NoDelegate, int DialogPriority);
	struct FDialogHandle ShowOkDialog(const struct FText& Title, const struct FText& Body, const struct FScriptDelegate& OkDelegate, int DialogPriority);
	struct FDialogHandle ShowOkCancelDialog(const struct FText& Title, const struct FText& Body, const struct FScriptDelegate& OkDelegate, const struct FScriptDelegate& CancelDelegate, int DialogPriority);
	struct FDialogHandle ShowNoButtonsWorkingDialog(const struct FText& Title, const struct FText& Body, int DialogPriority);
	struct FDialogHandle ShowNoButtonsDialog(const struct FText& Title, const struct FText& Body, int DialogPriority);
	struct FDialogHandle ShowExitDialog(const struct FText& Title, const struct FText& Body, const struct FScriptDelegate& ExitDelegate, int DialogPriority);
	struct FDialogHandle ShowCancelWorkingDialog(const struct FText& Title, const struct FText& Body, const struct FScriptDelegate& CancelDelegate, int DialogPriority);
	void PushDialog(class UTBLDialogWidget* Dialog, int DialogPriority);
	class UTBLDialogWidget* OnCreateYesNoDialog(const struct FText& Title, const struct FText& Body);
	class UTBLDialogWidget* OnCreateOkDialog(const struct FText& Title, const struct FText& Body);
	class UTBLDialogWidget* OnCreateOkCancelDialog(const struct FText& Title, const struct FText& Body);
	class UTBLDialogWidget* OnCreateNoButtonsWorkingDialog(const struct FText& Title, const struct FText& Body);
	class UTBLDialogWidget* OnCreateNoButtonsDialog(const struct FText& Title, const struct FText& Body);
	class UTBLDialogWidget* OnCreateExitDialog(const struct FText& Title, const struct FText& Body);
	class UTBLDialogWidget* OnCreateCancelWorkingDialog(const struct FText& Title, const struct FText& Body);
	bool IsDialogActive(const struct FDialogHandle& InDialogHandle);
	struct FDialogHandle CloseDialog(const struct FDialogHandle& DialogHandle);
	struct FDialogHandle ChangeDialogText(const struct FDialogHandle& DialogHandle, const struct FText& Title, const struct FText& Body);
};


// Class TBL.TBLScreenWidget
// 0x0090 (0x03B0 - 0x0320)
class UTBLScreenWidget : public UTBLUserWidget
{
public:
	class UTBLScreenManager*                           ParentScreenManager;                                      // 0x0320(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       StackName;                                                // 0x0328(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	TWeakObjectPtr<class UUMGSequencePlayer>           OutroPlayer;                                              // 0x0338(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0340(0x0050) MISSED OFFSET
	bool                                               bTopmostScreen;                                           // 0x0390(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsScreenClosed;                                          // 0x0391(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWantsInputFocusOnTopmost;                                // 0x0392(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bInputUIAndGame;                                          // 0x0393(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                PlayerInputIdAtInputModeChange;                           // 0x0394(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EMouseLockMode                                     MouseLockMode;                                            // 0x0398(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHideCursorDuringCapture;                                 // 0x0399(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bModifyVisibilityOnPushAndPop;                            // 0x039A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ESlateVisibility                                   TopmostVisibilty;                                         // 0x039B(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ESlateVisibility                                   NonTopmostVisibility;                                     // 0x039C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPopWhenEscapePressed;                                    // 0x039D(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x2];                                       // 0x039E(0x0002) MISSED OFFSET
	TArray<EWeaponAbilitySlotKey>                      BlockedWeaponAbilitySlotKeys;                             // 0x03A0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLScreenWidget"));
		return ptr;
	}


	void UpdateNotifications();
	bool ShouldShowMouseCursorOnInputCapture();
	bool ShouldOverrideIsFocusable();
	void RequestPlayerInput(bool WantsInput);
	void PushScreenToParentStack(class UTBLScreenWidget* NextScreen);
	void PopOffParentStack();
	void PlayOutroAnimation(class UWidgetAnimation* InAnimation, float StartAtTime, int NumLoopsToPlay, bool bReverseExisting);
	void PlayIntroAnimation(class UWidgetAnimation* InAnimation, float StartAtTime, int NumLoopsToPlay, bool bReverseExisting);
	void OnResumedScreen();
	void OnPausedScreen();
	void OnOutroAnimationDone(bool bWasScreenClosed);
	void OnOpenedScreen();
	void OnClosedScreen();
	void FireUpdateNotifications();
	void FireDefaultButtonAction(int ButtonIndex);
	void FireButtonAction(const struct FName& ButtonID);
	bool BP_OnBlockKeyPress(EWeaponAbilitySlotKey WeaponAbilitySlotKey);
	bool BlockKeyPress(EWeaponAbilitySlotKey WeaponAbilitySlotKey);
	void AddButtonAction(const struct FName& ButtonID, int ButtonIndex);
};


// Class TBL.TBLDialogWidget
// 0x0078 (0x0428 - 0x03B0)
class UTBLDialogWidget : public UTBLScreenWidget
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x03B0(0x0050) MISSED OFFSET
	EDialogTypes                                       DialogType;                                               // 0x0400(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0401(0x0003) MISSED OFFSET
	struct FDialogHandle                               DialogHandle;                                             // 0x0404(0x0004) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0408(0x0018) MISSED OFFSET
	class ULocalPlayer*                                m_pLocalOwningPlayer;                                     // 0x0420(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLDialogWidget"));
		return ptr;
	}


	void ProcessButtonClick(EDialogButtons ButtonClicked);
	struct FDialogHandle GetDialogHandle();
	void ChangeText(const struct FText& Title, const struct FText& Body);
};


// Class TBL.TBLEditorFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UTBLEditorFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLEditorFunctionLibrary"));
		return ptr;
	}


	static bool MergeDisplayComponents(class UObject* Object);
	static bool MergeActorDisplayComponents(class AActor* Actor);
	static bool CompileBlueprint(TArray<class UObject*> ObjectList);
};


// Class TBL.TBLEngine
// 0x02C8 (0x1118 - 0x0E50)
class UTBLEngine : public UGameEngine
{
public:
	class UClass* /*UObject*/                          HorseClass;                                               // 0x0E50(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UObject*/                          WeaponFistClass;                                          // 0x0E58(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UObject*/                          CharacterCombatStatesClass;                               // 0x0E60(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x68];                                      // 0x0E68(0x0068) MISSED OFFSET
	class UWorld*                                      ServerWorld;                                              // 0x0ED0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint64_t                                           LastFrameTimestamp;                                       // 0x0ED8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                PingFrameNumber;                                          // 0x0EE0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                NetSaturatedCount;                                        // 0x0EE4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint64_t                                           NetOutBytes;                                              // 0x0EE8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	double                                             NetOutTime;                                               // 0x0EF0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           NetConnections;                                           // 0x0EF8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           NetSampleCount;                                           // 0x0EFC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	double                                             LastFrameTime;                                            // 0x0F00(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	double                                             LastNetFlushTime;                                         // 0x0F08(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           LastOutBytes;                                             // 0x0F10(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                TotalPingSamples;                                         // 0x0F14(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                TotalPingSamplesPerMinute;                                // 0x0F18(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0F1C(0x0004) MISSED OFFSET
	int64_t                                            TotalRetryReliableCount;                                  // 0x0F20(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int64_t                                            TotalRetryReliableBytes;                                  // 0x0F28(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int64_t                                            TotalRetryUnreliableCount;                                // 0x0F30(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int64_t                                            TotalRetryUnreliableBytes;                                // 0x0F38(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int64_t                                            TotalSendFailBytes;                                       // 0x0F40(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	double                                             AveragePingTime;                                          // 0x0F48(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	double                                             AverageFrameTime;                                         // 0x0F50(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	double                                             AveragePingTimePerMinute;                                 // 0x0F58(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	double                                             AverageFrameTimePerMinute;                                // 0x0F60(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                TotalFrames;                                              // 0x0F68(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                TotalFramesPerMinute;                                     // 0x0F6C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FFrameTimeBuckets                           FrameTimeBuckets;                                         // 0x0F70(0x0028) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FFrameTimeBuckets                           StatFrameTimeBuckets;                                     // 0x0F98(0x0028) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FPingTimeBuckets                            PingTimeBuckets;                                          // 0x0FC0(0x002C) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FAvailableCPUBuckets                        AvailableCpu;                                             // 0x0FEC(0x001C) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FAvailableCPUBuckets                        AvailableCpuEx;                                           // 0x1008(0x001C) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              PerMinuteTimer;                                           // 0x1024(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AvailableCpuTimer;                                        // 0x1028(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AvailableCpuRatio;                                        // 0x102C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FPerMinuteBucket>                    PerMinuteBuckets;                                         // 0x1030(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           NetInPackets;                                             // 0x1040(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           NetInPacketsLost;                                         // 0x1044(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           NetInOutOfOrderPackets;                                   // 0x1048(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           NetOutPackets;                                            // 0x104C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           NetOutPacketsLost;                                        // 0x1050(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           NetOutOutOfOrderPackets;                                  // 0x1054(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           LastInPackets;                                            // 0x1058(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           LastInPacketsLost;                                        // 0x105C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           LastInOutOfOrderPackets;                                  // 0x1060(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           LastOutPackets;                                           // 0x1064(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           LastOutPacketsLost;                                       // 0x1068(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           LastOutOutOfOrderPackets;                                 // 0x106C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           NetAutonomousMovementCorrections;                         // 0x1070(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           NetAutonomousMovementCorrectionBunches;                   // 0x1074(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           NetSimulatedMovementCorrections;                          // 0x1078(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x107C(0x0004) MISSED OFFSET
	double                                             LastAutonomousMovementCorrectionTime;                     // 0x1080(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTBLHardwareInfo                            HardwareInfo;                                             // 0x1088(0x0068) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              CPUPerfIndex;                                             // 0x10F0(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              GPUPerfIndex;                                             // 0x10F4(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SkippedServerMoves;                                       // 0x10F8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SkippedServerMoveFrames;                                  // 0x10FC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                LastSkippedServerMoveFrame;                               // 0x1100(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x14];                                      // 0x1104(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLEngine"));
		return ptr;
	}


	float GetStatMS();
	float GetStatFPS();
	float GetAvailableCPU();
};


// Class TBL.TBLFrontendGameMode
// 0x0008 (0x1188 - 0x1180)
class ATBLFrontendGameMode : public ATBLGameMode
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x1180(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLFrontendGameMode"));
		return ptr;
	}


	void PlayerRequestSpawn(class ATBLPlayerStart* PlayerStart, class APlayerController* Player, EFaction Faction, int PawnClass);
};


// Class TBL.TBLFrontendLevelScriptActor
// 0x0010 (0x0270 - 0x0260)
class ATBLFrontendLevelScriptActor : public ALevelScriptActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0260(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLFrontendLevelScriptActor"));
		return ptr;
	}


	void FireLevelEvent(const struct FName& EventName);
	void CreateLevelEvent(const struct FName& EventName);
};


// Class TBL.TBLGameInstancePerformanceCaptureActor
// 0x0000 (0x0258 - 0x0258)
class ATBLGameInstancePerformanceCaptureActor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameInstancePerformanceCaptureActor"));
		return ptr;
	}


	void Run();
};


// Class TBL.TBLGameInstance
// 0x0D30 (0x0EC8 - 0x0198)
class UTBLGameInstance : public UGameInstance
{
public:
	unsigned char                                      UnknownData00[0xD8];                                      // 0x0198(0x00D8) MISSED OFFSET
	struct FText                                       PendingChatText;                                          // 0x0270(0x0018) (CPF_BlueprintVisible, CPF_Transient, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PlayingMusicEvent;                                        // 0x0288(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                PlayingMusicEvent_PlayingID;                              // 0x0290(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0294(0x0004) MISSED OFFSET
	TArray<class UAkAudioEvent*>                       PendingStoppedMusicEvents;                                // 0x0298(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>                FallbackLoadingScreenMusicEvent;                          // 0x02A8(0x0028) (CPF_Config, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     ReportBugURL;                                             // 0x02D0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UObject*>                             AsyncLoadedObjects;                                       // 0x02E0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                ChatHistoryTrimThreshold;                                 // 0x02F0(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                ChatHistoryTrimToLength;                                  // 0x02F4(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                AbbreviatedChatHistoryTrimThreshold;                      // 0x02F8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                AbbreviatedChatHistoryTrimToLength;                       // 0x02FC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                AbbreviatedChatMaxMessages[0xF];                          // 0x0300(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      ChatBlockedMessages[0xF];                                 // 0x033C(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      AbbreviatedChatBlockedMessages[0xF];                      // 0x034B(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      AllowedClosedCaptionTypes[0x3];                           // 0x035A(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x035D(0x0003) MISSED OFFSET
	float                                              ClosedCaptionMaxDistanceSq;                               // 0x0360(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0364(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnCustomizationLoaded;                                    // 0x0368(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TMap<uint64_t, class UTexture*>                    AvatarImages;                                             // 0x0378(0x0050) (CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0xA];                                       // 0x03C8(0x000A) MISSED OFFSET
	bool                                               LightSabresLoaded;                                        // 0x03D2(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x1];                                       // 0x03D3(0x0001) MISSED OFFSET
	uint32_t                                           ShowBigNotificationOnCL;                                  // 0x03D4(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	uint32_t                                           SavedBigNotificationCL;                                   // 0x03D8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x4];                                       // 0x03DC(0x0004) MISSED OFFSET
	struct FCheckpoints                                Checkpoints;                                              // 0x03E0(0x0050) (CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x18];                                      // 0x0430(0x0018) MISSED OFFSET
	TSoftObjectPtr<class UDataTable>                   WeaponAnimSetsPtr;                                        // 0x0448(0x0028) (CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAbilityConfig>               AbilityConfigPtr;                                         // 0x0470(0x0028) (CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>                   AbilitiesDataTablePtr;                                    // 0x0498(0x0028) (CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>                   AbilitiesOverridesDataTablePtr;                           // 0x04C0(0x0028) (CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>                   AbilitiesOverrideAssetDataTablePtr;                       // 0x04E8(0x0028) (CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>                   CustomizationAnimationSetsDataTablePtr;                   // 0x0510(0x0028) (CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>                   KeyDisplayTablePtr;                                       // 0x0538(0x0028) (CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UTexture>>             KeyDisplayTextures;                                       // 0x0560(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>                   GameUpdatesTablePtr;                                      // 0x0570(0x0028) (CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0xE8];                                      // 0x0598(0x00E8) MISSED OFFSET
	struct FAsyncGlobals                               AsyncGlobals;                                             // 0x0680(0x0050) (CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x70];                                      // 0x06D0(0x0070) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnMatchmakingQueueStatisticsChanged;                      // 0x0740(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnTitleDataUpdated;                                       // 0x0750(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnTitleNewsUpdated;                                       // 0x0760(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMotdUpdated;                                            // 0x0770(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x30];                                      // 0x0780(0x0030) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnNativeSessionStatusChanged;                             // 0x07B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UTBLLiveConfig*                              LiveConfig;                                               // 0x07C0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UNetConnection*                              PendingLiveConfigConnection;                              // 0x07C8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     PendingLiveConfigUrl;                                     // 0x07D0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnRefreshProfileDisplayName;                              // 0x07E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FString                                     CachedProfileDisplayName;                                 // 0x07F0(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    StateChanged;                                             // 0x0800(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x8];                                       // 0x0810(0x0008) MISSED OFFSET
	class ATBLGameInstancePerformanceCaptureActor*     PerformanceCaptureTool;                                   // 0x0818(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UClass* /*ATBLGameInstancePerformanceCaptureActor*/ PerformanceCaptureToolClass;                              // 0x0820(0x0008) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FString                                     WelcomeScreenMap;                                         // 0x0828(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FString                                     MainMenuMap;                                              // 0x0838(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FString                                     TutorialMap;                                              // 0x0848(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData12[0x178];                                     // 0x0858(0x0178) MISSED OFFSET
	bool                                               bStartedLoadingAbilityConfig;                             // 0x09D0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bStartedLoadingCustomization;                             // 0x09D1(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData13[0xAE];                                      // 0x09D2(0x00AE) MISSED OFFSET
	TArray<struct FPremergedMesh>                      PreMergedMeshes;                                          // 0x0A80(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                CurCustPresetIdx;                                         // 0x0A90(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData14[0xC];                                       // 0x0A94(0x000C) MISSED OFFSET
	class ATBLCharacter*                               PreloadCharacter;                                         // 0x0AA0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData15[0x10];                                      // 0x0AA8(0x0010) MISSED OFFSET
	bool                                               bRegisteredWwiseCallback;                                 // 0x0AB8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData16[0x7];                                       // 0x0AB9(0x0007) MISSED OFFSET
	TArray<struct FWwiseQuery>                         PendingWwiseQueries;                                      // 0x0AC0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FWwiseQuery>                         CompleteWwiseQueries;                                     // 0x0AD0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData17[0x50];                                      // 0x0AE0(0x0050) MISSED OFFSET
	class UTBLSaveProfileObject*                       ProfileSaveInstance;                                      // 0x0B30(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class UChatWidget>>          ChatWidgets;                                              // 0x0B38(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData18[0x10];                                      // 0x0B48(0x0010) MISSED OFFSET
	TSoftClassPtr<class UClass>                        TitleScreenManagerClass;                                  // 0x0B58(0x0028) (CPF_Config, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                        MainMenuManagerClass;                                     // 0x0B80(0x0028) (CPF_Config, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                        DemoMainMenuManagerClass;                                 // 0x0BA8(0x0028) (CPF_Config, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                        PlayingMenuManagerClass;                                  // 0x0BD0(0x0028) (CPF_Config, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                        DialogManagerClass;                                       // 0x0BF8(0x0028) (CPF_Config, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UTBLDialogManager*                           DialogManager;                                            // 0x0C20(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                        DemoManagerClass;                                         // 0x0C28(0x0028) (CPF_Config, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                        DemoModeMainMenuManagerClass;                             // 0x0C50(0x0028) (CPF_Config, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass* /*UTBLScreenManager*/                PendingActiveScreenManager;                               // 0x0C78(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FString                                     PendingTravelDestination;                                 // 0x0C80(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData19[0x18];                                      // 0x0C90(0x0018) MISSED OFFSET
	bool                                               bIsPendingPartyCreate;                                    // 0x0CA8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData20[0x17];                                      // 0x0CA9(0x0017) MISSED OFFSET
	struct FDialogHandle                               TravelDialogHandle;                                       // 0x0CC0(0x0004) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FDialogHandle                               PairingChangedDialogHandle;                               // 0x0CC4(0x0004) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData21[0x10];                                      // 0x0CC8(0x0010) MISSED OFFSET
	class UBlueprintGeneratedClass* /*UObject*/        LoadingScreenConfig;                                      // 0x0CD8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData22[0x10];                                      // 0x0CE0(0x0010) MISSED OFFSET
	class UTBLMessageBus*                              MessageBus;                                               // 0x0CF0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               FirstLoadCompleted;                                       // 0x0CF8(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData23[0x177];                                     // 0x0CF9(0x0177) MISSED OFFSET
	bool                                               bShowMouseCursor;                                         // 0x0E70(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData24[0x7];                                       // 0x0E71(0x0007) MISSED OFFSET
	TArray<TWeakObjectPtr<class UObject>>              ShowMouseCursorStack;                                     // 0x0E78(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class UObject>>              ShowMouseCursorStackSuppressors;                          // 0x0E88(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData25[0x8];                                       // 0x0E98(0x0008) MISSED OFFSET
	TArray<struct FName>                               UnselectedMatchmakingQueueIds;                            // 0x0EA0(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData26[0x10];                                      // 0x0EB0(0x0010) MISSED OFFSET
	EGamepadInputMode                                  LastGamepadInputMode;                                     // 0x0EC0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData27[0x7];                                       // 0x0EC1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameInstance"));
		return ptr;
	}


	void TryLeaveNativeSession();
	void TriggerNativeSessionSettingChange(const struct FString& Value);
	void TestValidateDTLSCertificate();
	void TestUserLoginDowngraded();
	void TestRefreshDTLSCertificate();
	void TestNativeInviteUI();
	void TestHandleLoginDowngraded();
	void TestControllerDialog();
	void ShowPlatformSpecificPlayerDetails(class ATBLPlayerState* PlayerState);
	void ShowLoadingScreenDuringPostMatch();
	void ShowFreeWeekendUpsell(int LocalUserNum);
	void SetPresenceExec(const struct FString& Presence);
	void SetMatchmakingQueueSelected(const struct FName& QueueId, bool IsSelected);
	void SetFirstLoadCompleted(bool IsComplete);
	void ResetProfileData();
	void PushShowMouseCursorStackSuppressor(class UObject* Object);
	void PushShowMouseCursorStack(class UObject* Object);
	void PopShowMouseCursorStackSuppressor(class UObject* Object);
	void PopShowMouseCursorStack(class UObject* Object);
	void PollTitleDataAndNews();
	void OpenNativeInviteUI();
	void OnYesLeaveMatch();
	void OnShowLoadingScreenPostMatch();
	void OnPostMatchEndTimeChanged(float Time);
	void OnPairingChangedYes();
	void OnPairingChangedNo();
	void OnNoLeaveMatch();
	void OnCustomizationApplied(const struct FCustomizationContext& Context);
	void OnConnectControllerDlgOK();
	void ListLoadedStaticMeshWithNegativeScale();
	void LeaveNativeSession();
	bool LastJoinFailed();
	bool IsNativeSessionHost();
	bool IsNativeSessionFull();
	bool IsMatchmakingQueueSelected(const struct FName& QueueId);
	bool IsInMainMenuMap();
	bool IsFirstLoadCompleted();
	void GrantFlavorEntitlement(const struct FString& Entitlement);
	void GoToTutorialMap();
	bool GetShowMouseCursor();
	int GetNativeSessionMemberCount();
	EGamepadInputMode GetLastGamepadInputMode();
	struct FName GetCurrentState();
	void Disconnect(class UObject* WorldContextObject);
	void DebugSetNativeSessionInProgress();
	void ClickedOnMessage();
	void ClickedLeavePartyYes();
	void ClickedLeavePartyNo();
	void ClickedExitGame();
	void ClickedCancelConnect();
	void ClearShowMouseCursorStackSuppressors(bool bUpdateMouseCursorImmediately);
	bool CanUseMatchmaker();
	bool CanLeaveNativeSession();
};


// Class TBL.TBLGameModesLibrary
// 0x0000 (0x0028 - 0x0028)
class UTBLGameModesLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameModesLibrary"));
		return ptr;
	}


	static class ATBLWorldSettings* GetTBLWorldSettings(class UObject* WorldContextObject);
	static TArray<class ASpawnWave*> GetAllSpawnWavesJoinableByController(class UObject* WorldContextObject, class AController* Controller);
	static TArray<class ATBLCharacter*> GetAllOutOfCombatCharactersForFaction(class UObject* WorldContextObject, EFaction Faction);
	static void ActivateDeactivateAllSpawnSequencesForFaction(EFaction Faction, ESpawnSequenceActivateDeactivateAction Action, class UObject* WorldContextObject);
};


// Class TBL.TBLGameplayDebuggingComponent
// 0x0838 (0x0940 - 0x0108)
class UTBLGameplayDebuggingComponent : public UActorComponent
{
public:
	TArray<struct FAbilityInvocationDebugInfo>         InvocationDebugInfo;                                      // 0x0108(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FPropertyDebugInfo>                  PropertyDebugInfo;                                        // 0x0118(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FPhysicsDebugInfo>                   PhysicsDebugInfo;                                         // 0x0128(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FBonesDebugInfo>                     BonesDebugInfo;                                           // 0x0138(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               BonesDebugNames;                                          // 0x0148(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicationDebugInfo                       ReplicationDebugInfo;                                     // 0x0158(0x0020) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FDebugProjectileHit                         DebugProjectileHit;                                       // 0x0178(0x0038) (CPF_Net, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FDesyncDebugInfo                            DesyncDebugInfo;                                          // 0x01B0(0x03A0) (CPF_Net, CPF_RepNotify, CPF_NativeAccessSpecifierPublic)
	struct FDesyncDebugInfo                            ClientDesyncDebugInfo;                                    // 0x0550(0x03A0) (CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               DebugCategories;                                          // 0x08F0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UTBLComponent*>                       DebuggingComponents;                                      // 0x0900(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0910(0x0008) MISSED OFFSET
	float                                              LastTickRate;                                             // 0x0918(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x091C(0x0004) MISSED OFFSET
	class AActor*                                      ShowDebugTargetActor;                                     // 0x0920(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UTBLGameplayDebuggingComponent*              ClientDebugComponent;                                     // 0x0928(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FColor>                              DebugColors;                                              // 0x0930(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameplayDebuggingComponent"));
		return ptr;
	}


	void ServerSetDebugTarget(class AActor* DebugTarget);
	void OnRep_DesyncDebugInfo();
};


// Class TBL.TBLGameScoringInfo
// 0x0038 (0x0290 - 0x0258)
class ATBLGameScoringInfo : public AInfo
{
public:
	class UDataTable*                                  GameScoringDataTable;                                     // 0x0258(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDataTable*                                  TeamScoreFormatDataTable;                                 // 0x0260(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 LongshotCurve;                                            // 0x0268(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0270(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameScoringInfo"));
		return ptr;
	}


	void PlayerKilled(class AController* Killer, class AController* Killed, class UDamageSource* DamageSource, const struct FDeathEvent& DeathEvent, const struct FDeathDamageTakenEvent& DamageEvent);
	void PawnRevived(class APawn* RevivedPlayer, class APawn* RevivorPlayer);
	void PawnDowned(class APawn* DownedPlayer, class AActor* DamageCauser);
};


// Class TBL.TBLGameScoringComponent
// 0x0028 (0x0130 - 0x0108)
class UTBLGameScoringComponent : public UActorComponent
{
public:
	bool                                               Enabled;                                                  // 0x0108(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0109(0x0007) MISSED OFFSET
	struct FDataTableRowSelection                      ScoringRow;                                               // 0x0110(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0128(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameScoringComponent"));
		return ptr;
	}


	int GetScoringValue();
	struct FGameScoringDataTable GetScoringRow();
	void AwardScore(class ATBLPlayerState* PlayerState, EOnlineStat Stat, int ScoreValueOverride);
};


// Class TBL.TBLGameSession
// 0x0398 (0x0608 - 0x0270)
class ATBLGameSession : public AGameSession
{
public:
	unsigned char                                      UnknownData00[0x271];                                     // 0x0270(0x0271) MISSED OFFSET
	bool                                               bIsCancellingMatchmaking;                                 // 0x04E1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x6];                                       // 0x04E2(0x0006) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnIsMatchmakingChanged;                                   // 0x04E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMatchmakingCompleted;                                   // 0x04F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMatchmakingCancelled;                                   // 0x0508(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x90];                                      // 0x0518(0x0090) MISSED OFFSET
	struct FString                                     ServerPassword;                                           // 0x05A8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4C];                                      // 0x05B8(0x004C) MISSED OFFSET
	int                                                MaxNumExtraAdmins;                                        // 0x0604(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameSession"));
		return ptr;
	}


	bool StartServerListQuickMatch(const struct FServerFilterSetting& Filters);
	bool StartMatchmaking(TArray<struct FMatchmakingQueue> Queues);
	void OnServerListRefreshComplete(bool bSuccess, EServerListType SearchType);
	bool IsMatchmaking();
	bool IsBusy();
	void HandleMatchmakingComplete(const struct FName& MatchmadeSessionName, bool bSuccess);
	void HandleMatchmakingCancelled(const struct FName& MatchmadeSessionName, bool bSuccess);
	bool CanStartMatchmaking(bool bIsBackfill);
	bool CancelMatchmaking();
	bool CanCancelMatchMaking();
};


// Class TBL.TBLGameSingleton
// 0x04A0 (0x04C8 - 0x0028)
class UTBLGameSingleton : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET
	TMap<class UWorld*, class UTextureAtlasManager*>   TextureAtlasManagers;                                     // 0x0038(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPublic)
	TArray<class UObject*>                             AsyncLoadedObjects;                                       // 0x0088(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x58];                                      // 0x0098(0x0058) MISSED OFFSET
	class UCharacterCustomizationSettings*             CharacterCustomizationSettings;                           // 0x00F0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSynchronousLoad;                                         // 0x00F8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bNDAShown;                                                // 0x00F9(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0xEE];                                      // 0x00FA(0x00EE) MISSED OFFSET
	class UPlayerClassData*                            DefaultPlayerClassDataType;                               // 0x01E8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             DefaultPlayerClassDataTypeName;                           // 0x01F0(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDataTable*                                  PersonalityEmotesDataTable;                               // 0x0208(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDataTable*                                  CustomPersonalityEmotesDataTable;                         // 0x0210(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FPersonalityEmoteTableRow>           PersonalityRows;                                          // 0x0218(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FCustomPersonalityEmotesTableRow>    CustomPersonalityRows;                                    // 0x0228(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBlueprintGeneratedClass* /*UObject*/        OnlineConfigClass;                                        // 0x0238(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             CompositeMaterialName;                                    // 0x0240(0x0018) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterial*                                   CompositeMaterial;                                        // 0x0258(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             HeraldryRenderMaterialName;                               // 0x0260(0x0018) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterial*                                   HeraldryRenderMaterial;                                   // 0x0278(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UCharacterCustomization*>             CustomizationPresets;                                     // 0x0280(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UDefaultWeaponCustomization*>         DefaultWeaponsCustomizations;                             // 0x0290(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UDefaultCharacterCustomization*>      DefaultCharacterCustomizations;                           // 0x02A0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<EOnlineStat, class UProgressionSpec*>         ProgressionSpec;                                          // 0x02B0(0x0050) (CPF_NativeAccessSpecifierPublic)
	TMap<EWeaponTag, EOnlineStat>                      WeaponTagToStat;                                          // 0x0300(0x0050) (CPF_NativeAccessSpecifierPublic)
	TMap<ECharacterClass, EOnlineStat>                 CharacterClassToStat;                                     // 0x0350(0x0050) (CPF_NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             HorseClassName;                                           // 0x03A0(0x0018) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             WeaponFistClassName;                                      // 0x03B8(0x0018) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             CharacterCombatStatesClasssName;                          // 0x03D0(0x0018) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FString, int>                          WeaponActionSwitchEvents;                                 // 0x03E8(0x0050) (CPF_NativeAccessSpecifierPublic)
	TMap<struct FString, int>                          CharacterExertionSwitchEvents;                            // 0x0438(0x0050) (CPF_NativeAccessSpecifierPublic)
	TArray<class UObject*>                             CachedClassDefaultObjects;                                // 0x0488(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTextureAtlasInfo*                           TextureAtlasDataAsset;                                    // 0x0498(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                             TextureAtlasDataAssetName;                                // 0x04A0(0x0018) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UCustomizationLoadingManager*                CustomizationLoadingManager;                              // 0x04B8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x8];                                       // 0x04C0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameSingleton"));
		return ptr;
	}


	void OnLevelAdded(class ULevel* Level, class UWorld* World);
	TArray<class AActor*> GetActorsWithTag(const struct FName& Tag, class UWorld* World);
};


// Class TBL.TBLGameUpdateContentWidget
// 0x0000 (0x0320 - 0x0320)
class UTBLGameUpdateContentWidget : public UTBLUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameUpdateContentWidget"));
		return ptr;
	}

};


// Class TBL.TBLGameUpdatesLibrary
// 0x0000 (0x0028 - 0x0028)
class UTBLGameUpdatesLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameUpdatesLibrary"));
		return ptr;
	}


	static bool ShouldShowGameUpdate(const struct FGameUpdateData& GameUpdateData);
	static void SetIsGameUpdateSeen(const struct FString& UpdateVersion, class UObject* WorldContextObject, bool IsSeen);
	static int GetUnseenGameUpdatesCount(class UObject* WorldContextObject);
	static bool GetNewestGameUpdate(class UObject* WorldContextObject, bool ShouldCheckIfSeen, struct FGameUpdateData* OutGameUpdateData);
	static bool GetIsGameUpdateSeen(const struct FString& UpdateVersion, class UObject* WorldContextObject);
	static bool GetIsGameUpdateNewest(const struct FGameUpdateData& GameUpdateData, class UObject* WorldContextObject, bool ShouldCheckIfSeen);
	static bool GetIsGameUpdateActive(const struct FGameUpdateData& GameUpdateData);
	static bool GetHasUnseenGameUpdates(class UObject* WorldContextObject);
	static void GetGameUpdates(class UObject* WorldContextObject, unsigned char Count, TArray<struct FGameUpdateData>* OutGameUpdates);
	static bool GetGameUpdateData(const struct FName& UpdateVersion, class UObject* WorldContextObject, struct FGameUpdateData* OutGameUpdateData);
};


// Class TBL.GamepadLookResponseCurves
// 0x0010 (0x0040 - 0x0030)
class UGamepadLookResponseCurves : public UDataAsset
{
public:
	TArray<class UCurveFloat*>                         Curves;                                                   // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.GamepadLookResponseCurves"));
		return ptr;
	}

};


// Class TBL.CloudUserSettings
// 0x0118 (0x0140 - 0x0028)
class UCloudUserSettings : public UObject
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0028(0x0004) MISSED OFFSET
	uint32_t                                           SettingsVersion;                                          // 0x002C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	uint32_t                                           UserChangelist;                                           // 0x0030(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FOV;                                                      // 0x0034(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ECameraStyle                                       CameraStyle;                                              // 0x0038(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAutoSprintEnabled;                                       // 0x0039(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAltAttackWithMovementEnabled;                            // 0x003A(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShiftToWalkEnabled;                                      // 0x003B(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bToggleSprintEnabled;                                     // 0x003C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bBeginnerHintsEnabled;                                    // 0x003D(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAdvancedHintsEnabled;                                    // 0x003E(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSuicideAfterNewClassEnabled;                             // 0x003F(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bToggleCrouchEnabled;                                     // 0x0040(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bLoadoutDisplayOnFirstDeath;                              // 0x0041(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bChatEnabled;                                             // 0x0042(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShowPlayerVOInChat;                                      // 0x0043(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnableCombatNumbers;                                     // 0x0044(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnableDamageMultipliers;                                 // 0x0045(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnableHeadBob;                                           // 0x0046(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0047(0x0001) MISSED OFFSET
	float                                              GamepadXSensitivty;                                       // 0x0048(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadYSensitivty;                                       // 0x004C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadXFocusSensitivity;                                 // 0x0050(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadYFocusSensitivity;                                 // 0x0054(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bMouseYInverted;                                          // 0x0058(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bGamepadYInverted;                                        // 0x0059(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EGamepadLookResponseCurveStyle                     GamepadResponseCurveStyle;                                // 0x005A(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x1];                                       // 0x005B(0x0001) MISSED OFFSET
	float                                              GamepadLeftStickDeadzone;                                 // 0x005C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadRightStickDeadzone;                                // 0x0060(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadLeftTriggerDeadzone;                               // 0x0064(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GamepadRightTriggerDeadzone;                              // 0x0068(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bMeleeAimAssistEnabled;                                   // 0x006C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRangedAimAssistEnabled;                                  // 0x006D(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x2];                                       // 0x006E(0x0002) MISSED OFFSET
	float                                              AimAssistFrictionPercentage;                              // 0x0070(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EGoreLevel>                            GoreLevel;                                                // 0x0074(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDynamicCrosshairEnabled;                                 // 0x0075(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EAllyMarkerLevel>                      AllyMarkerLevel;                                          // 0x0076(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHintsEnabled;                                            // 0x0077(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EKillFeedFilter>                       KillFeedFilter;                                           // 0x0078(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	float                                              MasterVolume;                                             // 0x007C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GameVolume;                                               // 0x0080(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              VOVolume;                                                 // 0x0084(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AnnouncerVolume;                                          // 0x0088(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AmbientVolume;                                            // 0x008C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MusicMasterVolume;                                        // 0x0090(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MusicDynamicVolume;                                       // 0x0094(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MusicOutOfGameVolume;                                     // 0x0098(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ReflectionVolume;                                         // 0x009C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayAudioInBackground;                                   // 0x00A0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bVoiceChatEnabled;                                        // 0x00A1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bVoiceWithFriendsAndPartyOnly;                            // 0x00A2(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      VoiceChatActivation;                                      // 0x00A3(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              VoiceTransmitVolume;                                      // 0x00A4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              VoiceReceiveVolume;                                       // 0x00A8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MotionBlurAmount;                                         // 0x00AC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TAASharpen;                                               // 0x00B0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableCrossPlayMatchmaking;                             // 0x00B4(0x0001) (CPF_ZeroConstructor, CPF_SaveGame, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayerHasAcceptedNDA;                                    // 0x00B5(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayerHasPlayedTutorial;                                 // 0x00B6(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayerHasAcceptedPurchaseDisclaimer;                     // 0x00B7(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FDateTime                                   LastReadDeveloperMessageTime;                             // 0x00B8(0x0008) (CPF_ZeroConstructor, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FTBLCustomizationSaveSettings               CustomizationSettings;                                    // 0x00C0(0x0058) (CPF_NativeAccessSpecifierPublic)
	struct FTBLGameUpdateSettings                      GameUpdateSettings;                                       // 0x0118(0x0010) (CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bServerBrowserHideFullServers : 1;                        // 0x0128(0x0001) (CPF_SaveGame, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0129(0x0003) MISSED OFFSET
	uint32_t                                           bServerBrowserFreeSlotLimit;                              // 0x012C(0x0004) (CPF_ZeroConstructor, CPF_SaveGame, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bServerBrowserHideEmptyServers : 1;                       // 0x0130(0x0001) (CPF_SaveGame, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bServerBrowserHideHighPingServers : 1;                    // 0x0130(0x0001) (CPF_SaveGame, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               PreferMotionBlur;                                         // 0x0131(0x0001) (CPF_ZeroConstructor, CPF_SaveGame, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x2];                                       // 0x0132(0x0002) MISSED OFFSET
	float                                              AlwaysOnMusicGameVolume;                                  // 0x0134(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShuffleLoadout;                                          // 0x0138(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0139(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CloudUserSettings"));
		return ptr;
	}

};


// Class TBL.TBLGameUserSettings
// 0x0160 (0x0280 - 0x0120)
class UTBLGameUserSettings : public UGameUserSettings
{
public:
	class UTBLOptionsScreen*                           OptionsScreen;                                            // 0x0120(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCloudUserSettings*                          CloudUserSettings;                                        // 0x0128(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0130(0x0050) MISSED OFFSET
	float                                              ResolutionScaleModifier;                                  // 0x0180(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                PreferredDLSSOperatingMode;                               // 0x0184(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0188(0x0008) MISSED OFFSET
	int                                                PreferredXESSOperatingMode;                               // 0x0190(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EColorVisionDeficiency                             ColorVisionDeficiency;                                    // 0x0194(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0195(0x0003) MISSED OFFSET
	int                                                ColorVisionDeficiencyCorrectionStrength;                  // 0x0198(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0xC];                                       // 0x019C(0x000C) MISSED OFFSET
	bool                                               bDisableCrossPlayMatchmaking;                             // 0x01A8(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x01A9(0x0003) MISSED OFFSET
	float                                              GUIScale;                                                 // 0x01AC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0xC];                                       // 0x01B0(0x000C) MISSED OFFSET
	uint32_t                                           TBLVersion;                                               // 0x01BC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bConsoleEnabled;                                          // 0x01C0(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      SmoothedFrameRateRange;                                   // 0x01C1(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               EnableUpdateRateOptimizations;                            // 0x01C2(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x1];                                       // 0x01C3(0x0001) MISSED OFFSET
	float                                              MouseSensitivity;                                         // 0x01C4(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MouseFocusSensitivity;                                    // 0x01C8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHeadphonesMode;                                          // 0x01CC(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x3];                                       // 0x01CD(0x0003) MISSED OFFSET
	float                                              RagdollLifetime;                                          // 0x01D0(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRagdollEnabled;                                          // 0x01D4(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x3];                                       // 0x01D5(0x0003) MISSED OFFSET
	int                                                BloodDecalLifetime;                                       // 0x01D8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MotionBlurQuality;                                        // 0x01DC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              Gamma;                                                    // 0x01E0(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MaxFPS;                                                   // 0x01E4(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               DFAO;                                                     // 0x01E8(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAmbientFXEnabled;                                        // 0x01E9(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x2];                                       // 0x01EA(0x0002) MISSED OFFSET
	int                                                AmbientCorpseQuality;                                     // 0x01EC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EProConsoleOption                                  ProConsoleSetting;                                        // 0x01F0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EHapticsVolumeSettings                             HapticsVolumeSetting;                                     // 0x01F1(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseAdaptiveTriggers;                                     // 0x01F2(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x1];                                       // 0x01F3(0x0001) MISSED OFFSET
	int                                                PreferrredIntelVRSSetting;                                // 0x01F4(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x4];                                       // 0x01F8(0x0004) MISSED OFFSET
	unsigned char                                      PreferredFaction;                                         // 0x01FC(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData12[0x3];                                       // 0x01FD(0x0003) MISSED OFFSET
	TArray<class UCurveFloat*>                         GamepadLookResponseCurves;                                // 0x0200(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData13[0x40];                                      // 0x0210(0x0040) MISSED OFFSET
	float                                              MotionBlurAmountDefault;                                  // 0x0250(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0254(0x0004) MISSED OFFSET
	float                                              MotionBlurAmountMax;                                      // 0x0258(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData15[0x24];                                      // 0x025C(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameUserSettings"));
		return ptr;
	}


	void SetServerBrowserNumFreeSlotServers(int Num);
	void SetServerBrowserHideHighPingEnabled(bool bEnabled);
	void SetServerBrowserHideFullServers(bool bEnabled);
	void SetServerBrowserHideEmptyServersEnabled(bool bEnabled);
	void SetPreferredFaction(unsigned char InPreferredFaction);
	void SetDX12Enabled(bool Value);
	void SaveCloudUserSettingsIfDirty();
	void OnReadUserFileComplete(const struct FPlatformInterfaceDelegateResult& Result);
	bool IsServerBrowserHideHighPingEnabled();
	bool IsServerBrowserHideFullServersEnabled();
	bool IsServerBrowserHideEmptyServersEnabled();
	bool IsRagdollEnabled();
	bool IsLoadoutDisplayOnFirstDeathEnabled();
	bool IsHeadBobEnabled();
	bool IsGamepadYInverted();
	bool IsDynamicCrosshairEnabled();
	bool IsDX12Enabled();
	bool IsDamageMultipliersEnabled();
	bool IsCombatNumbersEnabled();
	bool IsAmbientFXEnabled();
	int GetServerBrowserNumFreeSlotServers();
	unsigned char GetPreferredFaction();
	class UTBLOptionsScreen* GetOptionsScreen();
	int GetMotionBlurQuality();
	float GetMasterVolume();
	TEnumAsByte<EKillFeedFilter> GetKillFeedFilter();
	TEnumAsByte<EGoreLevel> GetGoreLevel();
	bool GetEnableCrossPlayMatchmaking();
	float GetBloodDecalLifeTime();
	int GetAmbientCorpseQuality();
	TEnumAsByte<EAllyMarkerLevel> GetAllyMarkerLevel();
	bool AreHintsEnabled();
};


// Class TBL.TBLGameViewportClient
// 0x0098 (0x03C8 - 0x0330)
class UTBLGameViewportClient : public UGameViewportClient
{
public:
	bool                                               IsListeningForKeybinding;                                 // 0x0330(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableDemoDebugInfo;                                    // 0x0331(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x76];                                      // 0x0332(0x0076) MISSED OFFSET
	class ULoadingScreenPanelWidget*                   LoadingScreenPanelUserWidget;                             // 0x03A8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x18];                                      // 0x03B0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLGameViewportClient"));
		return ptr;
	}


	void FadeOutLoadingPanel(bool bIsInitialLoadingScreen);
};


// Class TBL.TBLHorseAnimInstance
// 0x0250 (0x0700 - 0x04B0)
class UTBLHorseAnimInstance : public UTBLAnimInstance
{
public:
	struct FMulticastScriptDelegate                    OnAnimNotifyStepEvent;                                    // 0x04B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	class AHorse*                                      Horse;                                                    // 0x04C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UHorseMovement*                              HorseMovement;                                            // 0x04C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsDead;                                                   // 0x04D0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HasRider;                                                 // 0x04D1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x04D2(0x0006) MISSED OFFSET
	class UTBLCharacterAnimInstance_Playable*          RiderAnimBP;                                              // 0x04D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CombatState;                                              // 0x04E0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       MovementState;                                            // 0x04E8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       PreviousMovementState;                                    // 0x04F0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentSpeed;                                             // 0x04F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentGroundSpeed;                                       // 0x04FC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MovementDirection;                                        // 0x0500(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CameraRelativeInputAngle;                                 // 0x0504(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CameraRelativeFacingAngle;                                // 0x0508(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AimDirection;                                             // 0x050C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MovementAcceleration;                                     // 0x0510(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    SlopeAngle;                                               // 0x0514(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              SlopeWeight;                                              // 0x0520(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MovementStateMaxSpeed;                                    // 0x0524(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MovementStateWeight;                                      // 0x0528(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              StrafeWeight;                                             // 0x052C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnRate;                                                 // 0x0530(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnRateAccel;                                            // 0x0534(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsLunge;                                                  // 0x0538(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0539(0x0003) MISSED OFFSET
	struct FVector2D                                   ProcessedInput;                                           // 0x053C(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnRateStopTime;                                         // 0x0544(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PreviousSpeed;                                            // 0x0548(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PreviousTurnRate;                                         // 0x054C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PreviousInputDirection;                                   // 0x0550(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0554(0x0004) MISSED OFFSET
	class UAnimMontage*                                CurrentAttackMontage;                                     // 0x0558(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimMontage*                                DismountMontage;                                          // 0x0560(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UAnimationSet*/                    PreviewAnimationSet;                                      // 0x0568(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   DeathMontages;                                            // 0x0570(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   MountUpSections;                                          // 0x05C0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   RiderCrowdControlMontage;                                 // 0x0610(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   RiderCrowdControlMontage1P;                               // 0x0660(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	float                                              TurnRateInterpSpeed;                                      // 0x06B0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnRateAccelInterpSpeed;                                 // 0x06B4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnRateStopDelay;                                        // 0x06B8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x06BC(0x0004) MISSED OFFSET
	TArray<struct FName>                               AttackCombatStates;                                       // 0x06C0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               AnimationSetBase;                                         // 0x06D0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x28];                                      // 0x06D8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLHorseAnimInstance"));
		return ptr;
	}


	void UpdateFootStepSounds(float DeltaSeconds, bool bHidden);
	void StopDismountAnimation();
	void PlayMountAnimation(const struct FName& AnimationName);
	void PlayLandedAnimation();
	void PlayDismountAnimation(const struct FName& AnimationName);
	void OnStartAttack();
	void OnSignificanceChanged(ECharacterSignificanceLevel InSignificance);
	void OnRiderCombatStateEvent(class AActor* Actor, const struct FName& EventName, const struct FAttackInfo& EventAttackInfo);
	void OnRiderCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void OnPostDamage(const struct FDamageTakenEvent& DamageEvent, const struct FPostDamageEventInfo& PostDamageInfo);
	void OnMovementActionStarted(const struct FName& MovementName, const struct FRotator& Direction);
	void OnMovementActionFinished(const struct FName& MovementName);
	void OnMounted(class ATBLCharacter* Driver);
	void OnKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnKickNoDriver();
	void OnInterpToMountLocation(const struct FName& AnimationName, class ATBLCharacter* Character);
	void OnDismounted(class ATBLCharacter* Driver, EDismountType DismountType);
	void OnCrowdControlNoDamage(class AActor* OwningActor, const struct FName& InCombatState, const struct FCrowdControlParams& CrowdControlParams);
	void OnCrowdControl(const struct FName& InCombatState, const struct FAnimDamageParams& DamageEvent, ECrowdControlVariant CrowdControlVariant);
	void OnCombatStateEvent(class AActor* Actor, const struct FName& EventName, const struct FAttackInfo& EventAttackInfo);
	void OnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void OnAnimationSetChanged(class UClass* /*UAnimationSet*/ AnimationSet);
	bool IsPlayingMountAnimation();
	struct FVector GetHorseMomentumBasedScale(class AActor* InitiatorActor, const struct FName& AbilityName, class UClass* /*AInventoryItem*/ InventoryItemClass);
	void EventOnWantsToGallop(bool bWantsToGallop);
	void EventOnStartDismount(const struct FName& Direction);
	void EventOnStartAttack(const struct FName& InAbilityName, const struct FName& InCombatState, const struct FName& InComboState, class UAttackType* InAttackType);
	void EventOnStagger(const struct FAnimDamageParams& DamageEvent);
	void EventOnRiderCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void EventOnMovementStateChanged(const struct FName& InMovementState, const struct FName& InPreviousMovementState);
	void EventOnMovementDirectionChanged();
	void EventOnMovementActionStarted(const struct FName& MovementName, const struct FRotator& Direction);
	void EventOnMounted(const struct FName& Direction);
	void EventOnKnockdown(const struct FAnimDamageParams& DamageEvent);
	void EventOnKilled();
	void EventOnInterrupt(const struct FAnimDamageParams& DamageEvent);
	void EventOnHorseToWorldImpact(const struct FHitResult& Hit, EHorseImpactLocation ImpactLocation, EHorseToWorldImpactType ImpactType, const struct FName& ImpactCombatState, float ImpactSpeed);
	void EventOnHorseToHorseImpact(class AHorse* TargetHorse, EHorseImpactLocation ImpactLocation, EHorseToHorseImpactType ImpactType, const struct FName& ImpactCombatState, float ImpactSpeed);
	void EventOnHorseToCharacterImpact(class ATBLCharacter* TargetCharacter, EHorseImpactLocation ImpactLocation, EHorseToCharacterImpactType ImpactType, const struct FName& ImpactCombatState, float ImpactSpeed);
	void EventOnHorseBump(class AActor* OtherActor, const struct FName& Direction, float Angle, float BumpVelocity, bool bRearImpact);
	void EventOnDismounted(EDismountType DismountType);
	void EventOnCombatStateChanged(class AActor* Actor, const struct FName& PreviousState, const struct FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState);
	void EventDamageNoInterrupt(const struct FAnimDamageParams& DamageEvent);
	void AnimNotify_DeathAnim_End();
};


// Class TBL.TBLHUD
// 0x05B0 (0x08F8 - 0x0348)
class ATBLHUD : public AHUD
{
public:
	bool                                               bEnableCrosshair;                                         // 0x0348(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnableProjectileControl;                                 // 0x0349(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDrawHudMarkers;                                          // 0x034A(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x5];                                       // 0x034B(0x0005) MISSED OFFSET
	class UTexture*                                    DragHUDTexture;                                           // 0x0350(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ProjectileControlRadius;                                  // 0x0358(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector2D                                   MouseDelta;                                               // 0x035C(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0364(0x0004) MISSED OFFSET
	TArray<struct FAbilityDrawInfo>                    AbilityDrawInfos;                                         // 0x0368(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FAbilityDescriptionInfo>             AbilityDescriptionInfos;                                  // 0x0378(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FEffectDrawInfo>                     EffectDrawInfos;                                          // 0x0388(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CrosshairChargingPercentage;                              // 0x0398(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAbilityHasValidTarget;                                   // 0x039C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2B];                                      // 0x039D(0x002B) MISSED OFFSET
	TArray<struct FImportantGameMsg>                   ImportantGameMessageQueue;                                // 0x03C8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                NextImportantMessageId;                                   // 0x03D8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector2D                                   CrosshairOffset;                                          // 0x03DC(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03E4(0x0004) MISSED OFFSET
	class AActor*                                      ActorUnderCrosshair;                                      // 0x03E8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxActorUnderCrosshairDistance;                           // 0x03F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableHud;                                              // 0x03F4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableFriendlyIFFHudMarker;                             // 0x03F5(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x2];                                       // 0x03F6(0x0002) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnBroadcastObjectiveMessage;                              // 0x03F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBroadcastCrosshairMessage;                              // 0x0408(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBroadcastActorUnderCrosshairChanged;                    // 0x0418(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              TimeToDelayShowingPostGame;                               // 0x0428(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x4];                                       // 0x042C(0x0004) MISSED OFFSET
	struct FMulticastScriptDelegate                    DrawDebug;                                                // 0x0430(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x28];                                      // 0x0440(0x0028) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnBroadcastSpecialSpawnEventCreated;                      // 0x0468(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	float                                              TimeLengthOfObjectiveMessages;                            // 0x0478(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeLengthOfCrosshairMessages;                            // 0x047C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMaterialInterface*                          HudMarkerDetailsMaterial;                                 // 0x0480(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMaterialInterface*                          HudMarkerCrossHairMaterial;                               // 0x0488(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    RadialVOMID;                                              // 0x0490(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FVector2D>                           RadialAngles;                                             // 0x0498(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RadialMouseSensitivity;                                   // 0x04A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RadialCentreRadiusSizeSquared;                            // 0x04AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   HudMarkerFullSize;                                        // 0x04B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   HudMarkerReducedSize;                                     // 0x04B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 HudMarkerScaleCurve;                                      // 0x04C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HudMarkerOpacity;                                         // 0x04C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HudMarkerReducedOpacity;                                  // 0x04CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HudMarkerReductionStart;                                  // 0x04D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HudMarkerReductionEnd;                                    // 0x04D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HudMarkerDetailsOpacity;                                  // 0x04D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HudMarkerDetailsFadeStart;                                // 0x04DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HudMarkerDetailsFadeEnd;                                  // 0x04E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HudMarkerTextOffsetPixels;                                // 0x04E4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HudMarkerMaxDistance;                                     // 0x04E8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HudMarkerMinimumScale;                                    // 0x04EC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLinearColor                                HudMarkerFontColor;                                       // 0x04F0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FSlateFontInfo                              HudMarkerFontInfo;                                        // 0x0500(0x0058) (CPF_Edit, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HudMarkerScreenRadius;                                    // 0x0558(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsHudMarkerFontOutlined;                                 // 0x055C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x3];                                       // 0x055D(0x0003) MISSED OFFSET
	struct FLinearColor                                HudMarkerFontOutlineColor;                                // 0x0560(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsHudMarkerFontShadowed;                                 // 0x0570(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0571(0x0003) MISSED OFFSET
	struct FLinearColor                                HudMarkerFontShadowColor;                                 // 0x0574(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   HudMarkerFontShadowOffset;                                // 0x0584(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   HudMarkerDetailsFullSize;                                 // 0x058C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HudMarkerDetailsOffsetPixels;                             // 0x0594(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bClampPlayerMarkersToScreen;                              // 0x0598(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0599(0x0007) MISSED OFFSET
	class UMaterialInterface*                          FriendlyIFFHudMarkerMaterial;                             // 0x05A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   IFFHudMarkerFullSize;                                     // 0x05A8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   IFFHudMarkerReducedSize;                                  // 0x05B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   FriendlyHealthFullSize;                                   // 0x05B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FriendlyMarkerMaxDistance;                                // 0x05C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              EnemyMarkerMaxDistance;                                   // 0x05C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MaxPlayerNameCharsToRender;                               // 0x05C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              EnemyNameplateMaxDistance;                                // 0x05CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseTeamColorForHealthBar;                                // 0x05D0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x3];                                       // 0x05D1(0x0003) MISSED OFFSET
	struct FLinearColor                                HealthBarFillColor;                                       // 0x05D4(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLinearColor                                HealthBarEmptyColor;                                      // 0x05E4(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLinearColor                                FriendlyMarkerColor;                                      // 0x05F4(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLinearColor                                EnemyMarkerColor;                                         // 0x0604(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              IFFHudMarkerOpacity;                                      // 0x0614(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              IFFHudMarkerReducedOpacity;                               // 0x0618(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     IFFOffset;                                                // 0x061C(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       IFFBoneName;                                              // 0x0628(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PlayerNameOffsetPixels;                                   // 0x0630(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseTeamColorForIffMarkerAndNameplate;                    // 0x0634(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0635(0x0003) MISSED OFFSET
	TMap<EFaction, struct FLinearColor>                FontColorsByFaction;                                      // 0x0638(0x0050) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EFaction, struct FLinearColor>                FontOutlineColorsByFaction;                               // 0x0688(0x0050) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FLinearColor                                FriendlyNameFontColor;                                    // 0x06D8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLinearColor                                EnemyNameFontColor;                                       // 0x06E8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FSlateFontInfo                              PlayerNameFontInfo;                                       // 0x06F8(0x0058) (CPF_Edit, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsPlayerNameFontOutlined;                                // 0x0750(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x3];                                       // 0x0751(0x0003) MISSED OFFSET
	struct FLinearColor                                FriendlyNameFontOutlineColor;                             // 0x0754(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLinearColor                                EnemyNameFontOutlineColor;                                // 0x0764(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsPlayerNameFontShadowed;                                // 0x0774(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0775(0x0003) MISSED OFFSET
	struct FLinearColor                                PlayerNameFontShadowColor;                                // 0x0778(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   PlayerNameFontShadowOffset;                               // 0x0788(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   DistanceFactorMultiplier;                                 // 0x0790(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   OffscreenPlayerFakeSize;                                  // 0x0798(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PlayerNameDistFadeMin;                                    // 0x07A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PlayerNameDistFadeMax;                                    // 0x07A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisplayFriendlyHealth;                                   // 0x07A8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisablePlayerNamePlates;                                 // 0x07A9(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bOnlyShowNamesOnTeammates;                                // 0x07AA(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bOnlyShowMarkersOnVisiblePawns;                           // 0x07AB(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NonVisiblePawnMarkerOpacity;                              // 0x07AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FCombatHudMessage                           CurrentCombatHudMessage;                                  // 0x07B0(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x70];                                      // 0x07C0(0x0070) MISSED OFFSET
	class UFont*                                       BigFont;                                                  // 0x0830(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UFont*                                       NormalFont;                                               // 0x0838(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData15[0x50];                                      // 0x0840(0x0050) MISSED OFFSET
	int                                                HudMarkerPoolSize;                                        // 0x0890(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData16[0x4];                                       // 0x0894(0x0004) MISSED OFFSET
	TArray<class UMaterialInstanceDynamic*>            UnusedPlayerMIDs;                                         // 0x0898(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstanceDynamic*>            AllMarkerMIDs;                                            // 0x08A8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData17[0x14];                                      // 0x08B8(0x0014) MISSED OFFSET
	struct FVector2D                                   CacheCanvasSize;                                          // 0x08CC(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              CacheMouseSesnitivity;                                    // 0x08D4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                DrawHudFlags;                                             // 0x08D8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              RadialVOGamepadDeadzone;                                  // 0x08DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bAllowGamepadDeselect;                                    // 0x08E0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData18[0x3];                                       // 0x08E1(0x0003) MISSED OFFSET
	float                                              GamepadDeadstickDeselectDelay;                            // 0x08E4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector2D                                   LastValidGamepadAxis;                                     // 0x08E8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData19[0x8];                                       // 0x08F0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLHUD"));
		return ptr;
	}


	void ShowTeamSelectScreen(bool bGameStart);
	void ShowLoadoutScreenFirstTime();
	void ShowLoadoutScreen();
	void ShowIngameMenu();
	void ShowHint(const struct FText& HintToShow, const struct FText& HintTitle, const struct FName& HintTableRowName);
	void ShowHideRadialEmote(bool Show);
	void SetShowDebugTargetActor(class AActor* Actor);
	void SetRadialVOMaterial(class UMaterialInstanceDynamic* inRadialVOMID);
	void SetMiniMapVisibility(bool Visible);
	void RequestGuiBackground(bool bImmediate);
	void ReleaseGuiBackgroundRequest();
	void PS4TouchpadPressed();
	void OnPossessedPawn(class APawn* NewPawn);
	void NotifyPossessedPawn(class APawn* NewPawn);
	void InGameMenuReleased();
	void InGameMenuPressed();
	class AActor* GetShowDebugTargetActor();
	void GetRadialVOMouseAngle(int* ButtonIndex, bool* RadialDeselected, struct FVector2D* MousePositionByCanvas);
	bool GetImportantMessage(struct FImportantGameMsg* ImportantMessageOut);
	struct FVector2D GetCrosshairPositionInViewport();
	void GamepadShowEmoteWheel();
	void GamepadHideEmoteWheel();
	void ForceClearHint();
	void DrawMaterialSimpleWithTriangles(class UMaterialInterface* Material, float ScreenX, float ScreenY, float ScreenW, float ScreenH);
	void DrawHUD();
	void ClearHint();
};


// Class TBL.TBLKeymapWidget
// 0x0010 (0x03C0 - 0x03B0)
class UTBLKeymapWidget : public UTBLScreenWidget
{
public:
	struct FMulticastScriptDelegate                    OnClosedDelegate;                                         // 0x03B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLKeymapWidget"));
		return ptr;
	}

};


// Class TBL.TBLKeymapWidgetInterface
// 0x0000 (0x0028 - 0x0028)
class UTBLKeymapWidgetInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLKeymapWidgetInterface"));
		return ptr;
	}


	void ToggleKeymap();
	class UTBLKeymapWidget* GetKeymapWidget();
};


// Class TBL.TBLLevelScriptActor
// 0x0000 (0x0260 - 0x0260)
class ATBLLevelScriptActor : public ALevelScriptActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLLevelScriptActor"));
		return ptr;
	}


	void OnWarmupComplete();
	void OnMatchStateChanged(const struct FName& NewState);
	void GameStateSetup();
};


// Class TBL.TBLLiveConfig
// 0x00B0 (0x00D8 - 0x0028)
class UTBLLiveConfig : public UObject
{
public:
	struct FMulticastScriptDelegate                    OnLiveConfigLoaded;                                       // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	struct FString                                     CachedSerializedJson;                                     // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FString                                     UrlDownloadedFrom;                                        // 0x0048(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UDataTable*                                  DefaultAbilitiesOverride;                                 // 0x0058(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UDataTable*                                  LiveAbilitiesOverride;                                    // 0x0060(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FSoftObjectPath>                     StatsTables;                                              // 0x0068(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UDataTable*>                          DefaultStatsTables;                                       // 0x0078(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<class UDataTable*, class UDataTable*>         LiveStatsTables;                                          // 0x0088(0x0050) (CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLLiveConfig"));
		return ptr;
	}

};


// Class TBL.TBLLoadingThrobberContainer
// 0x0010 (0x0118 - 0x0108)
class UTBLLoadingThrobberContainer : public UWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLLoadingThrobberContainer"));
		return ptr;
	}

};


// Class TBL.TBLLocalMessage
// 0x0000 (0x0028 - 0x0028)
class UTBLLocalMessage : public ULocalMessage
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLLocalMessage"));
		return ptr;
	}


	static void UnpackData(int Data, unsigned char* Byte, int* Value);
	static int PackData(unsigned char Byte, int Value);
	void OnMessageReceived(class APlayerController* Receiver, int Data, class APlayerState* PlayerStateA, class APlayerState* PlayerStateB, class UObject* Object);
	static void BroadcastPrivateLocalMessage(class APlayerController* PlayerController, class UClass* /*ULocalMessage*/ MessageClass, int Data, class APlayerState* PlayerStateA, class APlayerState* PlayerStateB, class UObject* Object);
	static void BroadcastLocalMessage(class UObject* WorldContextObject, class UClass* /*ULocalMessage*/ MessageClass, int Data, class APlayerState* PlayerStateA, class APlayerState* PlayerStateB, class UObject* Object);
};


// Class TBL.TBLLocalMessageGameplayEvent
// 0x0000 (0x0028 - 0x0028)
class UTBLLocalMessageGameplayEvent : public UTBLLocalMessage
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLLocalMessageGameplayEvent"));
		return ptr;
	}

};


// Class TBL.CloudBlockRecentPlayers
// 0x00A8 (0x00D0 - 0x0028)
class UCloudBlockRecentPlayers : public UObject
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0028(0x0004) MISSED OFFSET
	int                                                UserChangelist;                                           // 0x002C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSet<struct FBlockPlayerEntry>                     Blocks;                                                   // 0x0030(0x0050) (CPF_NativeAccessSpecifierPublic)
	TSet<struct FRecentPlayerEntry>                    Recents;                                                  // 0x0080(0x0050) (CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CloudBlockRecentPlayers"));
		return ptr;
	}

};


// Class TBL.TBLLocalPlayer
// 0x04D0 (0x0738 - 0x0268)
class UTBLLocalPlayer : public ULocalPlayer
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0268(0x0050) MISSED OFFSET
	class UCloudBlockRecentPlayers*                    CloudBlockRecentPlayers;                                  // 0x02B8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x02C0(0x0008) MISSED OFFSET
	struct FString                                     MostRecentServerPassword;                                 // 0x02C8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x1A8];                                     // 0x02D8(0x01A8) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnFriendsListsUpdated;                                    // 0x0480(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnFriendsUpdated;                                         // 0x0490(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnTitleBroadcastReceived;                                 // 0x04A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnFriendStatusUpdated;                                    // 0x04B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyInvitesReceived;                                   // 0x04C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyInvitesChanged;                                    // 0x04D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyInviteSent;                                        // 0x04E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyInviteAccept;                                      // 0x04F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyInviteResponseReceived;                            // 0x0500(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyJoinedQueue;                                       // 0x0510(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyLeftQueue;                                         // 0x0520(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyMemberJoin;                                        // 0x0530(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyMemberLeave;                                       // 0x0540(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyMemberKick;                                        // 0x0550(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyMemberRemove;                                      // 0x0560(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyLeaderChange;                                      // 0x0570(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyDisband;                                           // 0x0580(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyLeave;                                             // 0x0590(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyInviteSendResult;                                  // 0x05A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnPartyCreatedResult;                                     // 0x05B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UTBLScreenManager*                           ActiveScreenManager;                                      // 0x05C0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x170];                                     // 0x05C8(0x0170) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLLocalPlayer"));
		return ptr;
	}


	void YesPartyCrossplayJoinListGame();
	void YesPartyCrossplayJoin();
	void WhatBuild();
	void SendPartyInvitationToPlayerIdExec(const struct FString& PlayerId);
	void RemoveBlock(const struct FString& PlayerId, const struct FString& PlayerName);
	void RejectPartyInvitationFromPlayer(const struct FString& PlayerId);
	void PartyKickExec(const struct FString& PlayerId);
	void OnReadUserFileComplete(const struct FPlatformInterfaceDelegateResult& Result);
	void OnEnumerateCloudFilesComplete(const struct FPlatformInterfaceDelegateResult& Result);
	void NoPartyCrossplayJoin();
	void ListRecents();
	void ListPartyInvitationsExec();
	void ListBlocks();
	void LeavePartyExec();
	void JoinPartyExec(const struct FString& PartyId);
	bool IsPartyLeader();
	bool IsInParty();
	bool IsBlocked(const struct FString& PlayerId, const struct FString& PlayerName);
	int GetPartyMemberCount();
	void GetPartyLeaderExec();
	struct FBlueprintOnlineUser GetOnlineUser(const struct FString& ID);
	bool GetIsPartyInMatchmakingQueue();
	ESlateInputMode GetCurrentSlateInputMode();
	void CreateAndSendPartyInvitationToPlayerId(const struct FString& PlayerId);
	void CopyInfo();
	void AddRecent(const struct FString& PlayerId, const struct FString& PlayerName);
	void AddBlock(const struct FString& PlayerId, const struct FString& PlayerName);
	void AcceptPartyInvitationFromPlayerExec(const struct FString& PlayerName);
};


// Class TBL.TBLMatchesSubsystem
// 0x0088 (0x00B8 - 0x0030)
class UTBLMatchesSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData00[0x88];                                      // 0x0030(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLMatchesSubsystem"));
		return ptr;
	}


	void OnPS5MatchResponsiblePlayerUpdated(const struct FUniqueNetIdRepl& Player);
	void OnPS5MatchIdChanged(const struct FString& MatchID);
	void OnPreLoadMap(const struct FString& MapName);
	void OnPostLoadMap(class UWorld* LoadedWorld);
	void OnMatchStateChanged(const struct FName& NewMatchState);
	void OnGameStateSetEvent(class AGameStateBase* GameState);
	void MatchUpdate();
};


// Class TBL.TBLMaterialButtonWidget
// 0x0050 (0x0298 - 0x0248)
class UTBLMaterialButtonWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0248(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLMaterialButtonWidget"));
		return ptr;
	}


	void SetStartingInterpProgress(float Value);
	void PlayButtonAnimation(const struct FTBLButtonAnimation_deprecated& InAnimation, bool ReverseAnim);
	void OnUpdateMaterial(const struct FName& MaterialParamName, float InProgress);
};


// Class TBL.TBLMenuItemWidgetStyle
// 0x01A0 (0x01D0 - 0x0030)
class UTBLMenuItemWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct FTBLMenuItemStyle                           MenuItemStyle;                                            // 0x0030(0x01A0) (CPF_Edit, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLMenuItemWidgetStyle"));
		return ptr;
	}

};


// Class TBL.TBLMessageBus
// 0x0018 (0x0040 - 0x0028)
class UTBLMessageBus : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLMessageBus"));
		return ptr;
	}

};


// Class TBL.TBLNavLink
// 0x0008 (0x02B0 - 0x02A8)
class ATBLNavLink : public ANavLinkProxy
{
public:
	TEnumAsByte<ETBLLinkBehavior>                      LinkBehaviorLeftToRight;                                  // 0x02A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<ETBLLinkBehavior>                      LinkBehaviorRightToLeft;                                  // 0x02A9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x02AA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLNavLink"));
		return ptr;
	}

};


// Class TBL.TBLNavModifierComponent
// 0x0010 (0x01B0 - 0x01A0)
class UTBLNavModifierComponent : public UNavModifierComponent
{
public:
	struct FVector                                     NavModifierOffset;                                        // 0x01A0(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01AC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLNavModifierComponent"));
		return ptr;
	}

};


// Class TBL.ObjectAnchor
// 0x0010 (0x0268 - 0x0258)
class AObjectAnchor : public AActor
{
public:
	TArray<class UObject*>                             AnchoredObjects;                                          // 0x0258(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.ObjectAnchor"));
		return ptr;
	}

};


// Class TBL.TBLOnlineLibrary
// 0x0000 (0x0028 - 0x0028)
class UTBLOnlineLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLOnlineLibrary"));
		return ptr;
	}


	static void ViewProfileFromBlueprintOnlineUser(const struct FBlueprintOnlineUser& User);
	static void TBLJoinGameSession(const struct FBlueprintSessionResult& SessionResult, const struct FString& Password, class UObject* WorldContextObject);
	static void SetMuteStateForRemotePlayer(bool VoiceChatEnabled, class ATBLPlayerController* LocalController, class ATBLPlayerState* NewPlayer);
	static struct FString SessionInfoToDebugString(const struct FBlueprintSessionResult& Result);
	static void RemoveFriendFromBlueprintOnlineUser(class ATBLPlayerController* InController, const struct FBlueprintOnlineUser& User);
	static void RemoveBlockFromBlueprintOnlineUser(class UTBLLocalPlayer* InPlayer, const struct FBlueprintOnlineUser& User);
	static void OpenPartyInviteDialog();
	static bool LocalUserHasLicenseToApp(int AppId);
	static void LeaveParty(class UTBLLocalPlayer* InPlayer);
	static void KickPlayer(class UTBLLocalPlayer* InPlayer, const struct FBlueprintOnlineUser& User);
	static void JoinGame(const struct FBlueprintOnlineUser& User, class ATBLPlayerController* LocalController);
	static bool IsUserMyself(const struct FBlueprintOnlineUser& User);
	static bool IsTutorialServer();
	static bool IsPlayerTalking(const struct FString& PlayerId, class UObject* WorldContextObject);
	static bool IsPasswordProtectedServerBySessionResult(const struct FBlueprintSessionResult& Result);
	static bool IsPartyLeader(const struct FBlueprintOnlineUser& User);
	static bool IsOfficialServerBySessionResult(const struct FBlueprintSessionResult& Result);
	static bool IsLocalPlayerPartyLeader();
	static bool IsInMyParty(class UTBLLocalPlayer* InPlayer, const struct FBlueprintOnlineUser& User);
	static bool IsInMatchmadeGame();
	static bool IsInAParty(const struct FBlueprintOnlineUser& User);
	static bool IsGameJoinable();
	static bool IsAppOwnershipTemporary();
	static bool IsAdminBP(class APlayerController* Controller);
	static void InviteUserToParty(class UTBLLocalPlayer* InPlayer, const struct FBlueprintOnlineUser& User);
	static void InviteUserToGame(const struct FBlueprintOnlineUser& User);
	static class ATBLGameSession* GetTBLGameSession(class UObject* WorldContextObject);
	static class UTBLGameInstance* GetTBLGameInstance(class UObject* WorldContextObject);
	static void GetTalkingPlayers(class UObject* WorldContextObject, TArray<class ATBLPlayerState*>* OutPlayerStates);
	static bool GetStatRangeIntFromLevel(int InLevel, EOnlineStat OnlineStat, int* Start, int* End);
	static bool GetStatRangeIntFromExperience(int InExperience, EOnlineStat OnlineStat, int* Level, int* PreviousLevelExperience, int* NextLevelExperience);
	static bool GetStatRangeInt(class ATBLPlayerController* InController, EOnlineStat OnlineStat, int* Level, int* PreviousLevelExperience, int* NextLevelExperience);
	static bool GetStatRangeFromPlayerState(class ATBLPlayerState* PlayerState, EOnlineStat OnlineStat, int* Level, int* PreviousLevelExperience, int* NextLevelExperience);
	static bool GetStatOriginalInt(class ATBLPlayerController* InController, EOnlineStat Stat, int* returnVal);
	static bool GetStatOriginalFloat(class ATBLPlayerController* InController, EOnlineStat Stat, float* returnVal);
	static bool GetStatInt(class ATBLPlayerController* InController, EOnlineStat Stat, int* returnVal);
	static bool GetStatFloat(class ATBLPlayerController* InController, EOnlineStat Stat, float* returnVal);
	static struct FString GetSessionSettingsValue(const struct FBlueprintSessionResult& Result, const struct FName& Key);
	static void GetSessionSettingsKeys(const struct FBlueprintSessionResult& Result, TArray<struct FName>* OutSettingKeys);
	static void GetSessionSettingsAsStrings(const struct FName& SessionName, TArray<struct FString>* Keys, TArray<struct FString>* Values);
	static void GetPartyMembers(TArray<struct FBlueprintOnlineUser>* OutPartyMembers);
	static int GetPartyMemberCount();
	static int GetNumBots(const struct FBlueprintSessionResult& Result);
	static struct FString GetMapName(const struct FBlueprintSessionResult& Result);
	static struct FString GetLocalPlayerId();
	static void GetListOfCurrentSessions(TArray<struct FName>* CurrentSessions);
	static bool GetFriendById(const struct FString& FriendId, struct FBlueprintOnlineUser* OutBlueprintUser);
	static struct FString GetDebugStringForSessionSettingsKey(const struct FName& Key);
	static class UTexture* GetAvatarImageFromPlayerState(class APlayerState* PlayerState, ESteamAvatarSize Size);
	static class UTexture* GetAvatarImageFromOnlineUser(const struct FBlueprintOnlineUser& User, ESteamAvatarSize Size);
	static bool CheckAppOwnership();
	static bool CanSendPartyInvites();
	static bool CanJoinGame(const struct FBlueprintOnlineUser& User);
	static void BroadcastLocalizedObjectiveMessage(const struct FObjectiveMessage& ObjectiveMessage, EFaction ReceivingFaction, class UObject* WorldContextObject);
	static void BroadcastLocalizedChat(const struct FText& Msg, TEnumAsByte<EChatType> Type, EFaction ReceivingFaction, class UObject* WorldContextObject);
	static void BroadcastGameModeMessages(TArray<struct FGameModeMessageTable> GameModeMessages, class UObject* WorldContextObject);
	static bool AreWePartyHost();
	static void AddFriendFromBlueprintOnlineUser(class ATBLPlayerController* InController, const struct FBlueprintOnlineUser& User);
	static void AddBlockFromBlueprintOnlineUser(class UTBLLocalPlayer* InPlayer, const struct FBlueprintOnlineUser& User);
	static void ActivateGameOverlayToWebPage(const struct FString& URL);
	static void AcceptPartyInviteFromPlayerName(class UTBLLocalPlayer* InPlayer, const struct FString& InviteeName);
	static void AcceptPartyInviteFromPlayer(class UTBLLocalPlayer* InPlayer, const struct FBlueprintOnlineUser& User);
};


// Class TBL.TBLOptionsScreen
// 0x00D8 (0x0100 - 0x0028)
class UTBLOptionsScreen : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET
	TArray<class UOptionsScreenCategory*>              Categories;                                               // 0x0050(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UOptionsScreenProp_ComboBox*                 ResolutionsComboBox;                                      // 0x0060(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UOptionsScreenProp_ComboBox*                 WindowModeComboBox;                                       // 0x0068(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UOptionsScreenProp_ComboBox*                 DLSSComboBox;                                             // 0x0070(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UOptionsScreenProp_ComboBox*                 XESSComboBox;                                             // 0x0078(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UOptionsScreenProp_ComboBox*                 IntelVRSComboBox;                                         // 0x0080(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x38];                                      // 0x0088(0x0038) MISSED OFFSET
	class UOptionsScreenProp_CheckBox*                 CrossplayCheckbox;                                        // 0x00C0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x38];                                      // 0x00C8(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLOptionsScreen"));
		return ptr;
	}


	void UserRevertedResolution();
	void UserDeclinedCrossplayChange();
	void UserConfirmedResolution();
	void UserConfirmedCrossplayChange();
	void SetOverallScalabilityLevelWithAuto(int Value);
	void SaveAll();
	void ResetAll();
	void OnGameUserSettingsUINeedsUpdate();
	void OnGameExit();
	int GetOverallScalabilityLevelWithAuto();
	void ApplyAll();
};


// Class TBL.OptionsScreenProperty
// 0x0048 (0x0070 - 0x0028)
class UOptionsScreenProperty : public UObject
{
public:
	struct FMulticastScriptDelegate                    CurrentValueChanged;                                      // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FText                                       Name;                                                     // 0x0038(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FText                                       Description;                                              // 0x0050(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	bool                                               ApplyImmediately;                                         // 0x0068(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ApplyOnlyImmediately;                                     // 0x0069(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x006A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OptionsScreenProperty"));
		return ptr;
	}


	void ResetToDefault();
	void Reset();
	bool IsDefaultValue();
	void Apply();
};


// Class TBL.OptionsScreenProp_CheckBox
// 0x0038 (0x00A8 - 0x0070)
class UOptionsScreenProp_CheckBox : public UOptionsScreenProperty
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0070(0x0030) MISSED OFFSET
	bool                                               CurrentValue;                                             // 0x00A0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OptionsScreenProp_CheckBox"));
		return ptr;
	}


	void SetCurrentValue(bool In);
	bool GetCurrentValue();
};


// Class TBL.OptionsScreenProp_ComboBox
// 0x0048 (0x00B8 - 0x0070)
class UOptionsScreenProp_ComboBox : public UOptionsScreenProperty
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0070(0x0030) MISSED OFFSET
	int                                                CurrentValue;                                             // 0x00A0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	TArray<struct FText>                               Options;                                                  // 0x00A8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OptionsScreenProp_ComboBox"));
		return ptr;
	}


	void SetCurrentValue(int In);
	int GetCurrentValue();
};


// Class TBL.OptionsScreenProp_Slider
// 0x0090 (0x0100 - 0x0070)
class UOptionsScreenProp_Slider : public UOptionsScreenProperty
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0070(0x0030) MISSED OFFSET
	float                                              CurrentValue;                                             // 0x00A0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              Min;                                                      // 0x00A4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              Max;                                                      // 0x00A8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              StepSize;                                                 // 0x00AC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MinFractionalDigits;                                      // 0x00B0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MaxFractionalDigits;                                      // 0x00B4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentValueFudgeFactor;                                  // 0x00B8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET
	struct FText                                       TextForMin;                                               // 0x00C0(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FText                                       TextForMax;                                               // 0x00D8(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	bool                                               DelaySliderSetter;                                        // 0x00F0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	float                                              MinDisplayTextRange;                                      // 0x00F4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxDisplayTextRange;                                      // 0x00F8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OptionsScreenProp_Slider"));
		return ptr;
	}


	void SetCurrentValue(float In);
	struct FText GetValueText(float Value);
	float GetCurrentValue();
};


// Class TBL.OptionsScreenProp_Slider_Toggle
// 0x0020 (0x0120 - 0x0100)
class UOptionsScreenProp_Slider_Toggle : public UOptionsScreenProp_Slider
{
public:
	float                                              ToggleValue;                                              // 0x0100(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ToggleReturn;                                             // 0x0104(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FText                                       TextOverrideForToggle;                                    // 0x0108(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OptionsScreenProp_Slider_Toggle"));
		return ptr;
	}

};


// Class TBL.OptionsScreenProp_Keybind
// 0x0050 (0x00C0 - 0x0070)
class UOptionsScreenProp_Keybind : public UOptionsScreenProperty
{
public:
	struct FName                                       ActionName;                                               // 0x0070(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FText                                       KeyboardKeyText;                                          // 0x0078(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FText                                       GamepadKeyText;                                           // 0x0090(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	bool                                               IsAxisBinding;                                            // 0x00A8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	float                                              AxisScale;                                                // 0x00AC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsConsoleKey;                                             // 0x00B0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
	class UOptionsScreenCategory*                      ParentCategory;                                           // 0x00B8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OptionsScreenProp_Keybind"));
		return ptr;
	}

};


// Class TBL.OptionsScreenSubCategory
// 0x0030 (0x0058 - 0x0028)
class UOptionsScreenSubCategory : public UObject
{
public:
	struct FText                                       Title;                                                    // 0x0028(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	bool                                               IsKeybindingSubCategory;                                  // 0x0040(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	TArray<class UOptionsScreenProperty*>              Properties;                                               // 0x0048(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OptionsScreenSubCategory"));
		return ptr;
	}


	void ResetAll();
	void ApplyAll();
};


// Class TBL.OptionsScreenCategory
// 0x0048 (0x0070 - 0x0028)
class UOptionsScreenCategory : public UObject
{
public:
	struct FText                                       Title;                                                    // 0x0028(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	TArray<class UOptionsScreenSubCategory*>           Subcategories;                                            // 0x0040(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0050(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.OptionsScreenCategory"));
		return ptr;
	}


	void SetToDefaults();
	void ResetAll();
	void ApplyAll();
};


// Class TBL.TBLOverviewScreen
// 0x0000 (0x0248 - 0x0248)
class UTBLOverviewScreen : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLOverviewScreen"));
		return ptr;
	}


	void BP_ShowLoadout(bool bReset);
};


// Class TBL.TBLPainVolume
// 0x0030 (0x0288 - 0x0258)
class ATBLPainVolume : public AActor
{
public:
	class USceneComponent*                             DefaultSceneComponent;                                    // 0x0258(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBoxComponent*                               CaptureBox;                                               // 0x0260(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DamagePerSecondToApplyOnTimeExpire;                       // 0x0268(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x026C(0x0004) MISSED OFFSET
	TArray<class ATBLCharacter*>                       CharactersInPainVolume;                                   // 0x0270(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FTimerHandle                                PainTimer;                                                // 0x0280(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPainVolume"));
		return ptr;
	}


	void EndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void BeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
};


// Class TBL.TBLParticleSystemComponent
// 0x0000 (0x06E0 - 0x06E0)
class UTBLParticleSystemComponent : public UParticleSystemComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLParticleSystemComponent"));
		return ptr;
	}

};


// Class TBL.TBLPathFollowingComponent
// 0x0078 (0x0368 - 0x02F0)
class UTBLPathFollowingComponent : public UCrowdFollowingComponent
{
public:
	struct FVector                                     NavLinkStart;                                             // 0x02F0(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     NavLinkTarget;                                            // 0x02FC(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bNavLinkWantsToJump;                                      // 0x0308(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCannotCompletePath;                                      // 0x0309(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x030A(0x0002) MISSED OFFSET
	struct FVector                                     CurrentPathSegmentStart;                                  // 0x030C(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     CurrentPathSegmentTarget;                                 // 0x0318(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                       LastKnownBlockingActor;                                   // 0x0324(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BlockStartTime;                                           // 0x032C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTimerHandle                                BlockingActorExpiredTimer;                                // 0x0330(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PathBlockFailDuration;                                    // 0x0338(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x033C(0x0004) MISSED OFFSET
	struct FTimerHandle                                PathBlockTimer;                                           // 0x0340(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPawnFellWhilePerformingBlockedMove;                      // 0x0348(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0349(0x0003) MISSED OFFSET
	struct FAIRequestID                                NavLinkMoveRequestID;                                     // 0x034C(0x0004) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     NavLinkMoveDestination;                                   // 0x0350(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDeferredPathUpdate;                                      // 0x035C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPathInvalidatedDuringDefer;                              // 0x035D(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0xA];                                       // 0x035E(0x000A) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPathFollowingComponent"));
		return ptr;
	}


	void OnPathBlocked();
	void OnFinishedBlockedMovementResponse();
	void OnBlockingActorExpired();
};


// Class TBL.TBLPlayerCameraManager
// 0x0720 (0x2EA0 - 0x2780)
class ATBLPlayerCameraManager : public APlayerCameraManager
{
public:
	class UCameraModifier_Zoom*                        CameraZoomMod;                                            // 0x2780(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCameraModifier_Offset*                      CameraOffsetMod;                                          // 0x2788(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCameraModifier_CancelRotation*              CameraCancelRotationMod;                                  // 0x2790(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCameraModifier_DeathCam*                    CameraDeathMod;                                           // 0x2798(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCameraModifier_DeathCam1P*                  CameraDeathMod_1P;                                        // 0x27A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCameraModifier_BlendInRotation*             CameraBlendInRotation;                                    // 0x27A8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsFirstPerson;                                           // 0x27B0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableCameraAnims;                                      // 0x27B1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0xE];                                       // 0x27B2(0x000E) MISSED OFFSET
	struct FLastSpectatorPOV                           LastSpectatorPOV;                                         // 0x27C0(0x05E0) (CPF_NativeAccessSpecifierPublic)
	class UPostProcessComponent*                       CharacterStatesPostProcessComponent;                      // 0x2DA0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UPostProcessComponent*                       OutOfCombatPostProcessComponent;                          // 0x2DA8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*UCameraModifier_TurnLimit*/        CameraTurnLimitModClass;                                  // 0x2DB0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass* /*UCameraModifier_HorizontalLock*/   CameraHorizontalLockModClass;                             // 0x2DB8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass* /*UCameraModifier_VerticalLock*/     CameraVerticalLockModClass;                               // 0x2DC0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass* /*UCameraModifier_DeathCam*/         CameraDeathModClass;                                      // 0x2DC8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass* /*UCameraModifier_DeathCam1P*/       CameraDeathModClass_1P;                                   // 0x2DD0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CameraModifierId;                                         // 0x2DD8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x2DDC(0x0004) MISSED OFFSET
	TMap<int, class UCameraModifier_TurnLock*>         CameraModifiers;                                          // 0x2DE0(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<class UClass* /*UObject*/, struct FPropertyModifiers> CameraShakePropertyModifiers;                             // 0x2E30(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bLoopCameraShake;                                         // 0x2E80(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x2E81(0x0007) MISSED OFFSET
	class UCameraModifier_ArrowCam*                    ArrowCam;                                                 // 0x2E88(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCameraModifier_SpawnFadeOut*                SpawnFadeOut;                                             // 0x2E90(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCameraModifier_FollowAnimation*             FollowAnimation;                                          // 0x2E98(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPlayerCameraManager"));
		return ptr;
	}


	void ToggleSpectatorCamera();
	bool ShouldDoSpawnFadeOut();
	bool IsSpawnFadeOutEnabled();
	class AActor* GetActualViewTarget();
	class UCameraComponent* GetActiveCameraComponent();
	void EnableSpawnFadeOut(float Duration);
	void EnableDeathCam_1P(class AActor* Killed);
	void EnableDeathCam(class ATBLCharacter* KilledCharacter);
	void DisableSpawnFadeOut();
	void DisableDeathCam(bool bImmediate);
};


// Class TBL.CloudViewedItems
// 0x0018 (0x0040 - 0x0028)
class UCloudViewedItems : public UObject
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0028(0x0004) MISSED OFFSET
	int                                                UserChangelist;                                           // 0x002C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FPrimaryAssetId>                     ViewedItems;                                              // 0x0030(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CloudViewedItems"));
		return ptr;
	}

};


// Class TBL.FlavorStats
// 0x00F8 (0x0120 - 0x0028)
class UFlavorStats : public UObject
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0028(0x0004) MISSED OFFSET
	int                                                UserChangelist;                                           // 0x002C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0030(0x0050) MISSED OFFSET
	TMap<struct FString, int>                          FlavorStats;                                              // 0x0080(0x0050) (CPF_NativeAccessSpecifierPublic)
	TMap<struct FString, double>                       AchievementProgressEx;                                    // 0x00D0(0x0050) (CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.FlavorStats"));
		return ptr;
	}

};


// Class TBL.CloudMutedPlayers
// 0x0058 (0x0080 - 0x0028)
class UCloudMutedPlayers : public UObject
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0028(0x0004) MISSED OFFSET
	int                                                UserChangelist;                                           // 0x002C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSet<struct FMutedPlayerEntry>                     Mutes;                                                    // 0x0030(0x0050) (CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CloudMutedPlayers"));
		return ptr;
	}

};


// Class TBL.TBLPlayerControllerInterface
// 0x0000 (0x0028 - 0x0028)
class UTBLPlayerControllerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPlayerControllerInterface"));
		return ptr;
	}

};


// Class TBL.TBLPlayerInput
// 0x00E0 (0x0488 - 0x03A8)
class UTBLPlayerInput : public UPlayerInput
{
public:
	EInputActionMode                                   InputActionMode;                                          // 0x03A8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03A9(0x0007) MISSED OFFSET
	struct FMulticastScriptDelegate                    KeybindsResetDelegate;                                    // 0x03B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnIsKeyInUseDialogYesClicked;                             // 0x03C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnIsKeyInUseDialogNoClicked;                              // 0x03D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UDataTable*                                  KeybindDataTable;                                         // 0x03E0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDataTable*                                  KeybindAxisDataTable;                                     // 0x03E8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FInputActionKeyMapping>              DefaultActionMappings;                                    // 0x03F0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FInputAxisKeyMapping>                DefaultAxisMappings;                                      // 0x0400(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x78];                                      // 0x0410(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPlayerInput"));
		return ptr;
	}


	void SetGamepadRYSens(float Sensitivity);
	void SetGamepadRXSens(float Sensitivity);
	void SetConsoleKey(const struct FKey& Key);
	void SetAxisBinding(const struct FName& AxisName, const struct FKey& Key, float Scale, bool bBypassDialog);
	void SetActionBinding(const struct FName& ActionName, const struct FKey& Key, bool bIsShiftPressed, bool bIsCtrlPressed, bool bIsAltPressed, bool bBypassDialog);
	void ResetConsoleKey();
	void ResetAxisBinding(const struct FName& AxisName);
	void ResetAllBindings();
	void ResetActionBinding(const struct FName& ActionName);
	void OnIsKeyInUse_Yes();
	void OnIsKeyInUse_No();
	void KeybindsReset__DelegateSignature();
	bool IsShiftPressed();
	void IsKeyInUseDialogClosed__DelegateSignature();
	bool IsKeybindingDefault(const struct FName& KeybindingName, bool ActionBinding, bool AxisBinding);
	bool IsCtrlPressed();
	bool IsAltPressed();
	void InvertGamepad();
	void GetKeysForConsole(TArray<struct FKey>* ConsoleKeys);
	void GetKeysForAxis(const struct FName& AxisName, TArray<struct FInputAxisKeyMapping>* Bindings);
	void GetKeysForAction(const struct FName& ActionName, TArray<struct FInputActionKeyMapping>* Bindings);
	void GetDefaultKeysForAxis(const struct FName& AxisName, TArray<struct FInputAxisKeyMapping>* Bindings);
	void GetDefaultKeysForAction(const struct FName& ActionName, TArray<struct FInputActionKeyMapping>* Bindings);
	TArray<struct FName> GetAllAxisKeyNames();
	TArray<struct FInputAxisKeyMapping> GetAllAxisKeyMappings();
	TArray<struct FName> GetAllActionKeyNames();
	TArray<struct FInputActionKeyMapping> GetAllActionKeyMappings();
	void ClearConsoleKey();
	void ClearAxisBinding(const struct FName& AxisName, bool ClearMouseKeyboardBinding, bool ClearGamepadBinding);
	void ClearActionBinding(const struct FName& ActionName, bool ClearMouseKeyboardBinding, bool ClearGamepadBinding);
};


// Class TBL.TBLPlayerStateInterface
// 0x0000 (0x0028 - 0x0028)
class UTBLPlayerStateInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPlayerStateInterface"));
		return ptr;
	}

};


// Class TBL.TBLProfanityFilter
// 0x0000 (0x0028 - 0x0028)
class UTBLProfanityFilter : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLProfanityFilter"));
		return ptr;
	}


	static struct FString Apply(const struct FString& Input);
};


// Class TBL.TBLProjectileMovementComponent
// 0x0220 (0x0450 - 0x0230)
class UTBLProjectileMovementComponent : public UProjectileMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0230(0x0010) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnDisabled;                                               // 0x0240(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMovementStarted;                                        // 0x0250(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnBlockingHit;                                            // 0x0260(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnFakeClientBlockingHit;                                  // 0x0270(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnMovementFinished;                                       // 0x0280(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    FakeProjectileUpdate;                                     // 0x0290(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    InitialRotation;                                          // 0x02A0(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    AngularVelocity;                                          // 0x02AC(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bFixedSubstepOnServer;                                    // 0x02B8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x02B9(0x0003) MISSED OFFSET
	float                                              ProjectileStartTime;                                      // 0x02BC(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AccumulatedTickTime;                                      // 0x02C0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWasTickedThisFrame;                                      // 0x02C4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x02C5(0x0003) MISSED OFFSET
	struct FVector                                     InitiatorLocationOnSpawn;                                 // 0x02C8(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    InitiatorRotationOnSpawn;                                 // 0x02D4(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              Drag;                                                     // 0x02E0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DrawStrengthModifier;                                     // 0x02E4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DistanceTravelled;                                        // 0x02E8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FacingEnemyMaxAngle;                                      // 0x02EC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FacingTeammateMaxAngle;                                   // 0x02F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FacingOtherMaxAngle;                                      // 0x02F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FacingTargetTime;                                         // 0x02F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bParryImmediately;                                        // 0x02FC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bParryImmediatelyTeammates;                               // 0x02FD(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDoNotCollideWithProjectiles;                             // 0x02FE(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDoNotCollideWithEnemies;                                 // 0x02FF(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDoNotCollideWithTeammates;                               // 0x0300(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShouldPenetrateCharacters;                               // 0x0301(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0302(0x0002) MISSED OFFSET
	int                                                AllowedNumPenetrations;                                   // 0x0304(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PenetrationDamageModifier;                                // 0x0308(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x4];                                       // 0x030C(0x0004) MISSED OFFSET
	TArray<struct FName>                               DoNotCollideWithTaggedActors;                             // 0x0310(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              InitialNonCollisionTime;                                  // 0x0320(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseProjectileControlComponent;                           // 0x0324(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0325(0x0003) MISSED OFFSET
	TWeakObjectPtr<class UProjectileCollision>         CollisionHandler;                                         // 0x0328(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AActor>>               CollisionIgnoreActors;                                    // 0x0330(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FHitActorInfo>                       HitActors;                                                // 0x0340(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FHitResult                                  LastHitResult;                                            // 0x0350(0x0088) (CPF_Edit, CPF_BlueprintVisible, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	bool                                               bWasLastHitBlocked;                                       // 0x03D8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x7];                                       // 0x03D9(0x0007) MISSED OFFSET
	TArray<struct FHitActorInfo>                       OverlappedParryActors;                                    // 0x03E0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFakeClient;                                              // 0x03F0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFakeClientSubStep;                                       // 0x03F1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFakeClientOffset;                                        // 0x03F2(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFakeClientDestroyed;                                     // 0x03F3(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     FakeClientSubStepLocation;                                // 0x03F4(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     FakeClientSubStepVelocity;                                // 0x0400(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FakeClientSubStepDistanceTravelled;                       // 0x040C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTBLProjectileMovementComponent*             FakeClientProjectile;                                     // 0x0410(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTBLProjectileMovementComponent*             FakeClientTarget;                                         // 0x0418(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TornOffLifeSpan;                                          // 0x0420(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWaitForAbilities;                                        // 0x0424(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnableDragging;                                          // 0x0425(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x2];                                       // 0x0426(0x0002) MISSED OFFSET
	struct FVector                                     HitVelocity;                                              // 0x0428(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     BounceVelocity;                                           // 0x0434(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x9];                                       // 0x0440(0x0009) MISSED OFFSET
	bool                                               bDelayedKill;                                             // 0x0449(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x6];                                       // 0x044A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLProjectileMovementComponent"));
		return ptr;
	}


	void StopOnBlockingHit(const struct FHitResult& Hit);
	void RemoveIgnoredCollisionActor(class AActor* ActorToRemove);
	void OnTornOff();
	void OnKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnBounce(const struct FHitResult& Hit);
	void OnBlocked(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	bool IsFakeClientProjectile();
	void EventHit(const struct FHitResult& Hit);
	void EventBlocked(const struct FHitResult& Hit);
	void DisableAndDestroy(float LifeSpan);
	void CleanupAbilityActorsInternal(class AController* Controller);
	void CleanupAbilityActors();
};


// Class TBL.TBLPS5HapticsAnimNotify
// 0x0030 (0x0068 - 0x0038)
class UTBLPS5HapticsAnimNotify : public UAnimNotify
{
public:
	ETBLPS5HapticType                                  PS5HapticType;                                            // 0x0038(0x0001) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UTBLPS5HapticsContainer>      PS5HapticsEffect;                                         // 0x0040(0x0028) (CPF_Edit, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPS5HapticsAnimNotify"));
		return ptr;
	}

};


// Class TBL.TBLPS5HapticsManager
// 0x0080 (0x00B0 - 0x0030)
class UTBLPS5HapticsManager : public UGameInstanceSubsystem
{
public:
	class UObjectLibrary*                              PS5HapticsLibrary;                                        // 0x0030(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<struct FString, class UObject*>               PS5HapticsLookupMap;                                      // 0x0038(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0088(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPS5HapticsManager"));
		return ptr;
	}


	void SetVolumeSetting(EHapticsVolumeSettings NewSetting);
	void SetIsUsingAdaptiveTriggers(bool UsingAdaptiveTrigger, class ATBLPlayerController* PlayerController);
	bool IsUsingAdaptiveTriggers();
	EHapticsVolumeSettings GetVolumeSetting();
};


// Class TBL.TBLPS5HapticsContainer
// 0x0018 (0x0048 - 0x0030)
class UTBLPS5HapticsContainer : public UDataAsset
{
public:
	class USoundWave*                                  PadRumbleWAV;                                             // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ETBLPS5TriggerMode                                 TriggerMode;                                              // 0x0038(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ETBLPS5TriggerMask                                 TriggerToEffect;                                          // 0x0039(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      TriggerStartPosition;                                     // 0x003A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      TriggerEndPosition;                                       // 0x003B(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      TriggerStrength;                                          // 0x003C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      TriggerVibrationActivationPosition;                       // 0x003D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      TriggerVibrationFrequency;                                // 0x003E(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      TriggerVibrationAmplitude;                                // 0x003F(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      TriggerResistancePosition;                                // 0x0040(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      TriggerResistanceStrength;                                // 0x0041(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPS5HapticsContainer"));
		return ptr;
	}

};


// Class TBL.TBLPS5BlockingHaptics
// 0x0060 (0x00A8 - 0x0048)
class UTBLPS5BlockingHaptics : public UTBLPS5HapticsContainer
{
public:
	class UCurveFloat*                                 BlockingStrength;                                         // 0x0048(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      MaxTriggerResistanceStrength;                             // 0x0050(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	TArray<class UDamageSource*>                       SharpDamageTypes;                                         // 0x0058(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UDamageSource*>                       BluntDamageTypes;                                         // 0x0068(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  ShieldLightHit;                                           // 0x0078(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  ShieldHeavyHit;                                           // 0x0080(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  SharpWeaponLightHit;                                      // 0x0088(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  SharpWeaponHeavyHit;                                      // 0x0090(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  BluntWeaponLightHit;                                      // 0x0098(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  BluntWeaponHeavyHit;                                      // 0x00A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPS5BlockingHaptics"));
		return ptr;
	}


	void UpdateResistanceBasedOnStamina(class AActor* Actor, EStat StatType, const struct FStatEntry& Stat, float DeltaValue);
};


// Class TBL.TBLPS5DamageHaptics
// 0x0268 (0x02B0 - 0x0048)
class UTBLPS5DamageHaptics : public UTBLPS5HapticsContainer
{
public:
	TArray<class UDamageSource*>                       SharpDamageTypes;                                         // 0x0048(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UDamageSource*>                       BluntDamageTypes;                                         // 0x0058(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UDamageSource*>                       ExplosiveDamageTypes;                                     // 0x0068(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UDamageSource*                               RangeDamageType;                                          // 0x0078(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<ETBLPS5DamageDirection, class USoundWave*>    SharpWeaponLightHit;                                      // 0x0080(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	TMap<ETBLPS5DamageDirection, class USoundWave*>    SharpWeaponHeavyHit;                                      // 0x00D0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	TMap<ETBLPS5DamageDirection, class USoundWave*>    BluntWeaponLightHit;                                      // 0x0120(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	TMap<ETBLPS5DamageDirection, class USoundWave*>    BluntWeaponHeavyHit;                                      // 0x0170(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	TMap<ETBLPS5DamageDirection, class USoundWave*>    RangedWeaponLightHit;                                     // 0x01C0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	TMap<ETBLPS5DamageDirection, class USoundWave*>    RangedWeaponHeavyHit;                                     // 0x0210(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  CatapultDamageEffect;                                     // 0x0260(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UDamageSource*                               FallDamageType;                                           // 0x0268(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  FallDamageEffect;                                         // 0x0270(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  ExplosiveDamageEffect;                                    // 0x0278(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UDamageSource*                               NonDOTFireDamage;                                         // 0x0280(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  FireDamageEffectStart;                                    // 0x0288(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  FireDamageEffectLooping;                                  // 0x0290(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  PlayerAttackHitEffect;                                    // 0x0298(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  PlayerAttackBlockedEffect;                                // 0x02A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  PlayerAttackEnvironmentHitEffect;                         // 0x02A8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPS5DamageHaptics"));
		return ptr;
	}

};


// Class TBL.TBLPS5RangedWeaponHaptics
// 0x0038 (0x0080 - 0x0048)
class UTBLPS5RangedWeaponHaptics : public UTBLPS5HapticsContainer
{
public:
	class UCurveFloat*                                 VibrationStrengthFromStamina;                             // 0x0048(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      MaxTriggerAmplitudeStrength;                              // 0x0050(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	class USoundWave*                                  BowReleasedEffect;                                        // 0x0058(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      BowFireTriggerFrequency;                                  // 0x0060(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      BowFireTriggerAmplitude;                                  // 0x0061(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0062(0x0006) MISSED OFFSET
	class USoundWave*                                  CrossbowFireEffect;                                       // 0x0068(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  CrossbowReloadEffect;                                     // 0x0070(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              CrossbowReloadDelay;                                      // 0x0078(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPS5RangedWeaponHaptics"));
		return ptr;
	}


	void UpdateVibrationBasedOnStamina(class AActor* Actor, EStat StatType, const struct FStatEntry& Stat, float DeltaValue);
};


// Class TBL.TBLPS5GeneralHaptics
// 0x0020 (0x0068 - 0x0048)
class UTBLPS5GeneralHaptics : public UTBLPS5HapticsContainer
{
public:
	class USoundWave*                                  StartingSprintEffect;                                     // 0x0048(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  MaximumSprintEffect;                                      // 0x0050(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  LowHealthEffect;                                          // 0x0058(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              HealthPercentToPlay;                                      // 0x0060(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPS5GeneralHaptics"));
		return ptr;
	}


	void PlayLowHealthEffect(class AActor* Actor, EStat StatType, const struct FStatEntry& Stat, float DeltaValue);
};


// Class TBL.TBLPS5SiegeEngineHaptics
// 0x0030 (0x0078 - 0x0048)
class UTBLPS5SiegeEngineHaptics : public UTBLPS5HapticsContainer
{
public:
	class USoundWave*                                  BallistaBoltFired;                                        // 0x0048(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  BallistaBoltReload;                                       // 0x0050(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  CatapultReload;                                           // 0x0058(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  CatapultFiring;                                           // 0x0060(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  BatteringRamCharge;                                       // 0x0068(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USoundWave*                                  BatteringRamReleased;                                     // 0x0070(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLPS5SiegeEngineHaptics"));
		return ptr;
	}

};


// Class TBL.TBLReplicationGraphSettings
// 0x00A0 (0x00D8 - 0x0038)
class UTBLReplicationGraphSettings : public UDeveloperSettings
{
public:
	TMap<EClassSpatialNodeMapping, struct FTBLReplicationGraphSpatialNodeSettings> SpatialNodeSettings;                                      // 0x0038(0x0050) (CPF_Edit, CPF_Config, CPF_GlobalConfig, CPF_NativeAccessSpecifierPublic)
	TMap<TSoftClassPtr<class UClass>, struct FClassReplicationGraphSettings> ClassReplicationGraphSettings;                            // 0x0088(0x0050) (CPF_Edit, CPF_Config, CPF_GlobalConfig, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLReplicationGraphSettings"));
		return ptr;
	}

};


// Class TBL.TBLReplicationGraph
// 0x0450 (0x08F0 - 0x04A0)
class UTBLReplicationGraph : public UReplicationGraph
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04A0(0x0008) MISSED OFFSET
	TArray<class UClass* /*UObject*/>                  NonSpatializedChildClasses;                               // 0x04A8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*UObject*/>                  AlwaysRelevantClasses;                                    // 0x04B8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UReplicationGraphNode_GridSpatialization2D*  RootGridNodes[0x6];                                       // 0x04C8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UReplicationGraphNode_ActorListFrequencyBuckets* AlwaysRelevantNode;                                       // 0x04F8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UReplicationGraphNode_ActorListFrequencyBuckets* SlowAlwaysRelevantNode;                                   // 0x0500(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSet<class AActor*>                                AlwaysRelevantActors;                                     // 0x0508(0x0050) (CPF_NativeAccessSpecifierPublic)
	TSet<class AActor*>                                SlowAlwaysRelevantActors;                                 // 0x0558(0x0050) (CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x148];                                     // 0x05A8(0x0148) MISSED OFFSET
	TSet<class UClass* /*UObject*/>                    ExplicitlySetClasses;                                     // 0x06F0(0x0050) (CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x1B0];                                     // 0x0740(0x01B0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLReplicationGraph"));
		return ptr;
	}

};


// Class TBL.TBLReplicationGraphNode_AlwaysRelevant_ForConnection
// 0x0240 (0x0290 - 0x0050)
class UTBLReplicationGraphNode_AlwaysRelevant_ForConnection : public UReplicationGraphNode
{
public:
	class AActor*                                      GameplayDebugger;                                         // 0x0050(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x228];                                     // 0x0058(0x0228) MISSED OFFSET
	class AActor*                                      LastPawn;                                                 // 0x0280(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0288(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLReplicationGraphNode_AlwaysRelevant_ForConnection"));
		return ptr;
	}

};


// Class TBL.WidgetDecorator
// 0x0008 (0x0030 - 0x0028)
class UWidgetDecorator : public UObject
{
public:
	bool                                               bReveal;                                                  // 0x0028(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                RevealedIndex;                                            // 0x002C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.WidgetDecorator"));
		return ptr;
	}

};


// Class TBL.DebugCanvasTriangles
// 0x0010 (0x0040 - 0x0030)
class UDebugCanvasTriangles : public UDataAsset
{
public:
	TArray<struct FCanvasUVTri>                        DebugTriangles;                                           // 0x0030(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.DebugCanvasTriangles"));
		return ptr;
	}

};


// Class TBL.TBLTextureCacheBuilder
// 0x00A0 (0x0120 - 0x0080)
class UTBLTextureCacheBuilder : public URuntimeAssetCacheBuilder_ObjectBase
{
public:
	class UTextureRenderTarget2D*                      RenderTargetForTextureType;                               // 0x0080(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                      RenderTargetTemp;                                         // 0x0088(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                      RenderTargetForHeraldry;                                  // 0x0090(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTexture2D*                                  Texture;                                                  // 0x0098(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x80];                                      // 0x00A0(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLTextureCacheBuilder"));
		return ptr;
	}

};


// Class TBL.TBLSafeZone
// 0x0000 (0x0138 - 0x0138)
class UTBLSafeZone : public USafeZone
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLSafeZone"));
		return ptr;
	}

};


// Class TBL.TBLSaveProfileObject
// 0x0220 (0x0248 - 0x0028)
class UTBLSaveProfileObject : public USaveGame
{
public:
	struct FTBLConsoleSaveSettings                     ConsoleUserSettings;                                      // 0x0028(0x00A4) (CPF_SaveGame, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
	TMap<struct FString, int>                          FlavorStats;                                              // 0x00D0(0x0050) (CPF_SaveGame, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0120(0x0050) MISSED OFFSET
	bool                                               bHasAgreedToTOS;                                          // 0x0170(0x0001) (CPF_ZeroConstructor, CPF_SaveGame, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFirstLoadCompleted;                                      // 0x0171(0x0001) (CPF_ZeroConstructor, CPF_SaveGame, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayerHasAcceptedNDA;                                    // 0x0172(0x0001) (CPF_ZeroConstructor, CPF_SaveGame, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayerHasPlayedTutorial;                                 // 0x0173(0x0001) (CPF_ZeroConstructor, CPF_SaveGame, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayerHasAcceptedPurchaseDisclaimer;                     // 0x0174(0x0001) (CPF_ZeroConstructor, CPF_SaveGame, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0175(0x0003) MISSED OFFSET
	struct FDateTime                                   LastReadDeveloperMessageTime;                             // 0x0178(0x0008) (CPF_ZeroConstructor, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FTBLCustomizationSaveSettings               CustomizationSettings;                                    // 0x0180(0x0058) (CPF_SaveGame, CPF_NativeAccessSpecifierPublic)
	struct FTBLGameUpdateSettings                      GameUpdateSettings;                                       // 0x01D8(0x0010) (CPF_SaveGame, CPF_NativeAccessSpecifierPublic)
	TArray<struct FPrimaryAssetId>                     ViewedItems;                                              // 0x01E8(0x0010) (CPF_ZeroConstructor, CPF_SaveGame, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FString, double>                       AchievementProgress;                                      // 0x01F8(0x0050) (CPF_SaveGame, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLSaveProfileObject"));
		return ptr;
	}

};


// Class TBL.TBLScalabilitySettings
// 0x0020 (0x0128 - 0x0108)
class UTBLScalabilitySettings : public UWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0108(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLScalabilitySettings"));
		return ptr;
	}

};


// Class TBL.TBLScrollBarStyleDataAsset
// 0x04D0 (0x0500 - 0x0030)
class UTBLScrollBarStyleDataAsset : public UPrimaryDataAsset
{
public:
	struct FScrollBarStyle                             Style;                                                    // 0x0030(0x04D0) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLScrollBarStyleDataAsset"));
		return ptr;
	}

};


// Class TBL.TBLScrollBox
// 0x0008 (0x0888 - 0x0880)
class UTBLScrollBox : public UScrollBox
{
public:
	class UTBLScrollBarStyleDataAsset*                 ScrollBarStyle;                                           // 0x0880(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLScrollBox"));
		return ptr;
	}

};


// Class TBL.TBLSignificanceManager
// 0x0040 (0x0160 - 0x0120)
class UTBLSignificanceManager : public USignificanceManager
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0120(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLSignificanceManager"));
		return ptr;
	}

};


// Class TBL.TBLSlackUtility
// 0x0000 (0x0028 - 0x0028)
class UTBLSlackUtility : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLSlackUtility"));
		return ptr;
	}


	static void SendSlackMessage(const struct FSlackMessage& Message);
};


// Class TBL.TBLSocialScreen
// 0x0008 (0x03B8 - 0x03B0)
class UTBLSocialScreen : public UTBLScreenWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLSocialScreen"));
		return ptr;
	}


	void OnAttemptedNavigationFailed(EUINavigation NavigationType);
};


// Class TBL.TBLSocialSubScreen
// 0x0010 (0x0258 - 0x0248)
class UTBLSocialSubScreen : public UUserWidget
{
public:
	float                                              ListRefreshInterval;                                      // 0x0248(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xC];                                       // 0x024C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLSocialSubScreen"));
		return ptr;
	}


	void RefreshLists();
	void OnRefreshLists();
	void OnOpened();
	void OnClosed();
	void FocusOnEntry();
	void FocusOnEntries();
};


// Class TBL.TBLSpectatorPawn
// 0x00D0 (0x04A8 - 0x03D8)
class ATBLSpectatorPawn : public ASpectatorPawn
{
public:
	class UCameraComponent*                            Camera;                                                   // 0x03D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSpectatorCameraConfig                      DefaultCamera;                                            // 0x03E0(0x0020) (CPF_Config, CPF_GlobalConfig, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FSpectatorCameraConfig>              SmoothCameras;                                            // 0x0400(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FSpectatorCamInfo>                   SpectatorCameras;                                         // 0x0410(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class ATBLCharacter*                               FollowCharacter;                                          // 0x0420(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class APlayerState*                                FollowPlayerState;                                        // 0x0428(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ZoomDistance;                                             // 0x0430(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ZoomMin;                                                  // 0x0434(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ZoomMax;                                                  // 0x0438(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ZoomDir;                                                  // 0x043C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ZoomStartTime;                                            // 0x0440(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0444(0x0004) MISSED OFFSET
	TArray<struct FSmoothSpectatorTurn>                SmoothTurn;                                               // 0x0448(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InitialMaxSpeed;                                          // 0x0458(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TurnMaxSpeed;                                             // 0x045C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TurnAcceleration;                                         // 0x0460(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TurnDeceleration;                                         // 0x0464(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TurnChangeDirBoost;                                       // 0x0468(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSpectatorSpeedUp;                                        // 0x046C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSpectatorSpeedDown;                                      // 0x046D(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSpectatorRightStickSensitivityIncrease;                  // 0x046E(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSpectatorRightStickSensitivityDecrease;                  // 0x046F(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsGhost;                                                 // 0x0470(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bResetIdleTime;                                           // 0x0471(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0472(0x0002) MISSED OFFSET
	float                                              LastResetIdleTime;                                        // 0x0474(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ResetIdleRate;                                            // 0x0478(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                DisplayDebugScrollDir;                                    // 0x047C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DisplayDebugScrollY;                                      // 0x0480(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDidAutoSpectatorFollow;                                  // 0x0484(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseCachedViewRotation;                                   // 0x0485(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSpectatorRollHeld;                                       // 0x0486(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0487(0x0001) MISSED OFFSET
	struct FRotator                                    CachedViewRotation;                                       // 0x0488(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x14];                                      // 0x0494(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLSpectatorPawn"));
		return ptr;
	}


	void UpdateOnCinematicStateChanged(const struct FGameplayTag& PreviousStateTag, class UCinematicState* PreviousState, const struct FGameplayTag& NewStateTag, class UCinematicState* NewState);
	void SpectatorFollow(const struct FString& PlayerName);
	void SpectatorCam(int CameraNum);
	void ProcessTurnAndLookInputRate(TEnumAsByte<EAxis> Axis, float Rate);
	void ProcessTurnAndLookInput(TEnumAsByte<EAxis> Axis, float Value);
	void PreviousCharacter();
	void NextCharacter();
	void LockSpectatorTranslationAxis(const struct FName& AxisName, bool Blocked);
	bool IsGhost();
	void GhostOff();
	void Ghost();
	void FreeCam();
	void EnableSmoothCameraMode(int CameraNum);
	void DisplayDebugScrollUp();
	void DisplayDebugScrollReleased();
	void DisplayDebugScrollDown();
	void ClearSpectatorCams();
	void AddTurnAcceleration(float Val, int Axis);
};


// Class TBL.TBLStoreWidget
// 0x0000 (0x03B0 - 0x03B0)
class UTBLStoreWidget : public UTBLScreenWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLStoreWidget"));
		return ptr;
	}


	void OnStoreScreenOpen();
	void BuildStoreOffersListing(int Listing, TArray<struct FStoreOfferItem> OfferIds);
	void BuildStoreOffers(TArray<struct FStoreOfferItem> OfferIds);
	void BuildAddOnOffers(TArray<struct FStoreOfferItem> OfferIds);
};


// Class TBL.TBLSystemLibrary
// 0x0000 (0x0028 - 0x0028)
class UTBLSystemLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLSystemLibrary"));
		return ptr;
	}


	static bool WasRecentlyRenderedOnScreen(class AActor* InActor, float InTolerance);
	static void UpdateActorsTags(class AActor* Actor, TArray<struct FName> Tags, class UObject* WorldContextObject);
	static void TBLSetEquippedItemsOnFire(class AActor* Actor, float Amount, class UDamageSource* DamageSource);
	static void TBLApplyDamage(class AActor* DamagedActor, float Amount, class UDamageSource* DamageSource, class AActor* DamageCauser, class AInventoryItem* InventoryItem, bool bOverrideImpactPoint, const struct FVector& ImpactPointOverride, class AActor* DamageInstigator, bool CheckForValidDamageSource);
	static void StopSoundById(int PlayingID);
	static TArray<class ATBLTeam*> SortTeamArrayByTickets(TArray<class ATBLTeam*> Teams);
	static TArray<class ATBLTeam*> SortTeamArrayByScore(TArray<class ATBLTeam*> Teams);
	static TArray<class ATBLPlayerState*> SortPlayerStateArrayByRecentlyJoined(TArray<class ATBLPlayerState*> PlayerStates);
	static TArray<class ATBLPlayerState*> SortPlayerStateArrayByPlayerScoreNoMatchBonus(TArray<class ATBLPlayerState*> PlayerStates);
	static TArray<class ATBLPlayerState*> SortPlayerStateArrayByPlayerScore(TArray<class ATBLPlayerState*> PlayerStates);
	static TArray<class ATBLPlayerState*> SortPlayerStateArrayByPlayerKills(TArray<class ATBLPlayerState*> PlayerStates);
	static TArray<struct FGameModeMessage> SortGameModeMessagesByPriority(TArray<struct FGameModeMessage> GameModeMessages);
	static void SortActorArray(TArray<class AActor*> InActors, const struct FScriptDelegate& SortDelegate, class UObject* BoolContainer, const struct FName& BoolPropertyName, TArray<class AActor*>* OutActors);
	static bool ShouldUsePIEJoinGameFlow(class UObject* WorldContextObject);
	static bool ShouldUseOpenLoadout(class UObject* WorldContextObject);
	static bool ShouldUseLegacyFXSoundFunction(class UObject* WorldContextObject);
	static void SetupCubeBrushInConstructionScript(class AVolume* Volume);
	static void SetupBlueprintVolumeSubclassBrushInConstructionScript(class AVolume* Volume);
	static void SetShowBigNotification(class UObject* WorldContextObject);
	static struct FTimerHandle SetNonResettingTimer(class UObject* WorldContextObject, float Time, bool Looping, const struct FScriptDelegate& Event);
	static void SetNDASigned(bool NDASigned, class UObject* WorldContextObject);
	static void SetComponentsEnabled(class AActor* Actor, int ComponentFlags, bool bEnabled);
	static void SetAlwaysOnMusicManagerState(class UObject* WorldContextObject, EAlwaysOnMusicState NewState);
	static void SetActorComponentCanAffectNavigation(class UActorComponent* Component, bool bCanAffectNavigation);
	static struct FTBL_FReplicatedDateTime ReplicatedDateTime(const struct FDateTime& ReplDateTime);
	static void RenameComponentToStableName(class UActorComponent* Component, const struct FString& NamePrefix, int ComponentId);
	static void RemoveTagFromAllActors(const struct FName& Tag, class UObject* WorldContextObject);
	static void RemoveTagFromActor(class AActor* Actor, const struct FName& Tag, class UObject* WorldContextObject);
	static void RemovePlayersWhoAreDeadFromPlayerStateArray(TArray<class ATBLPlayerState*>* PlayerStates);
	static void RemovePlayersInPartiesFromPlayerStateArray(TArray<class ATBLPlayerState*>* PlayerStates);
	static struct FString RemovePiePrefixFromMapName(const struct FString& MapNameString);
	static class UAkComponent* PlaySoundOnActorWithParams(class UAkAudioEvent* SoundEvent, class AActor* Actor, const struct FName& AttachSocket, TArray<struct FSoundSwitchEntry> Switches, TArray<struct FSoundRTPCEntry> RtpcValues, bool bPrintEvents);
	static class UAkComponent* PlaySoundOnActor(class UAkAudioEvent* SoundEvent, class AActor* Actor, const struct FName& AttachSocket, bool bPrintEvents);
	static int PlaySoundAtLocationWithParams(class UAkAudioEvent* SoundEvent, const struct FVector& Location, const struct FRotator& Rotation, TArray<struct FSoundStateEntry> States, TArray<struct FSoundRTPCEntry> RtpcValues, class UObject* WorldContextObject, bool bPrintEvents);
	static int PlaySoundAtLocation(class UAkAudioEvent* SoundEvent, const struct FVector& Location, const struct FRotator& Rotation, class UObject* WorldContextObject, bool bPrintEvents);
	static void PlayDemo(const struct FString& DemoName, class UObject* WorldContextObject);
	static void MarkReplicationDirty(const TScriptInterface<class UReplicatedSubobjectInterface>& ReplicatedSubobject);
	static struct FTBL_FGoreEvent MakeGoreEvent(const struct FName& InBoneName, EHeadGoreAction InHeadGoreAction, ELimbGoreAction InLimbGoreAction, const struct FVector& InImpulse, bool bInSpawnedItem, bool bKillingBlow);
	static struct FDamageTakenEvent MakeDamageTakenEvent(float InDamage, class UDamageSource* InDamageSource, class AActor* InDamageCauser, class AActor* InDamageTaker, class AActor* InDamageInstigator, bool InbKillingBlow, bool InbSuicide, bool InbEnteredKillVolume, const struct FHitResult& InHitResult, class UAbilitySpec* InAbilitySpec, const struct FVector_NetQuantizeNormal& InHitDirection, const struct FName& InDamageTakerCombatState, class AInventoryItem* InInventoryItem, class AActor* InProjectile, const struct FName& InAttackName);
	static class UObject* LoadSoftObjectSynchronously(TSoftObjectPtr<class UObject> SoftObjectRef, class UObject* WorldContextObject);
	static class UClass* /*UObject*/ LoadSoftClassSynchronously(TSoftClassPtr<class UClass> SoftClassRef, class UObject* WorldContextObject);
	static TScriptInterface<class UStageInterface> LevelBlueprintGetFirstStage(class UObject* WorldContextObject);
	static void LevelBlueprintEvent(class UObject* WorldContextObject, const struct FName& EventName);
	static bool IsWindowsOSSInitialized();
	bool IsValidUser(const struct FBlueprintOnlineUser& InUser);
	static bool IsValidClassID(TSoftClassPtr<class UClass> ClassID);
	static bool IsTutorial(class UObject* WorldContextObject);
	static bool IsThrownImpactSoundDebugEnabled(class UObject* WorldContextObject);
	static bool IsSteamInitialized();
	static bool IsSpecificTeamFaction(EFaction Faction);
	static bool IsSoundEnabled(class UObject* WorldContextObject);
	static bool IsSimulatingInEditor();
	static bool IsRunningAutomatedTesting(class UObject* WorldContextObject);
	static bool IsRangedWeapon(class AInventoryItem* Weapon);
	static bool IsRangedOrThrownAttack(const struct FName& AttackName);
	static bool IsPartOfFaction(EFaction Target, EFaction Other);
	static bool IsOfficialServer();
	static bool IsNonSpecificTeamFaction(EFaction Faction);
	static bool IsMergedMesh(class ACharacter* Character);
	static bool IsMergedMaterial(class ACharacter* Character);
	static bool IsFirstMainMenuLoad();
	static bool IsDemoMode(class UObject* WorldContextObject);
	static bool IsDefendingFaction(class UObject* WorldContextObject, EFaction Faction);
	static bool IsControllerMounted(class AController* Controller, class UClass* /*ASiegeEngine*/ SiegeEngineClass);
	static bool IsBot(class AActor* Actor);
	static bool IsAutomationTesting();
	static bool IsAttackingFaction(class UObject* WorldContextObject, EFaction Faction);
	static void InterpolateVectorOverTime(class UObject* WorldContextObject, const struct FVector& StartValue, const struct FVector& EndValue, float Duration, bool bEaseOut, bool bEaseIn, float EasingExp, class UCurveFloat* Curve, const struct FScriptDelegate& UpdateDelegate, TEnumAsByte<EInterpolateOverTimeAction> InterpolateAction, const struct FLatentActionInfo& LatentInfo, bool bCallUpdatesParams);
	static void InterpolateFloatOverTime(class UObject* WorldContextObject, float StartValue, float EndValue, float Duration, bool bEaseOut, bool bEaseIn, float EasingExp, class UCurveFloat* Curve, const struct FScriptDelegate& UpdateDelegate, TEnumAsByte<EInterpolateOverTimeAction> InterpolateAction, const struct FLatentActionInfo& LatentInfo, bool bCallUpdatesParams);
	static bool HasRole(class AActor* Actor, int Role);
	static bool HasActorBegunPlay(class AActor* Actor);
	static TEnumAsByte<ETBLWorldType> GetWorldType(class UObject* WorldContextObject);
	static struct FString GetUnlocalizedGameModeFromMapString(const struct FString& MapNameString);
	static int GetTotalPlayerCount(class UObject* WorldContextObject);
	static class UFont* GetTinyFont();
	static float GetTimeSeconds(class AActor* Actor);
	static struct FText GetTextFromNamespace(const struct FString& Namespace, const struct FString& Key);
	static TArray<class ATBLTeam*> GetTeamsFromFactions(class UObject* WorldContextObject, TArray<EFaction> Factions);
	static class ATBLTeam* GetTeamFromFaction(class UObject* WorldContextObject, EFaction Faction);
	static class ATBLLevelScriptActor* GetTBLLevelScriptActor(class UObject* WorldContextObject, bool* bIsValid);
	static class UTBLGameUserSettings* GetTBLGameUserSettings();
	static class ATBLGameState* GetTBLGameState(class UObject* WorldContextObject);
	static class ATBLGameMode* GetTBLGameMode(class UObject* WorldContextObject);
	static class ATBLCharacter* GetTBLCharacterFromController(class AController* Controller);
	static class ATBLCharacter* GetTBLCharacter(class APawn* Pawn);
	static class UStatsComponent* GetStatsComponent(class AActor* Actor);
	static class UStaticMeshComponent* GetStaticMeshComponent(class AActor* Actor);
	static class UFont* GetSmallFont();
	static bool GetShowBigNotification(class UObject* WorldContextObject);
	static float GetServerTimeoutTime(class UObject* WorldContextObject);
	static struct FVector GetScreenPositionForLocation(class APlayerController* PlayerController, const struct FVector& Location);
	static struct FVector GetScreenPositionForActor(class APlayerController* PlayerController, class AActor* Actor, const struct FVector& RelativeLocation, bool bUseActorBoundsOrigin);
	static TArray<struct FGameModeMessageTable> GetScoredStageGameModeMessageRows(class UDataTable* GameModeMessageDataTable, int StageNum, int NewScore, int LastScore);
	static class AActor* GetPossessorActor(class AActor* Actor);
	static TArray<class ATBLPlayerState*> GetPlayerStatesFromFaction(class UObject* WorldContextObject, EFaction Faction);
	static TArray<class ATBLPlayerState*> GetPlayerStates(class UObject* WorldContextObject);
	static class ATBLPlayerState* GetPlayerStateFromUniqueNetId(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UniqueId);
	static TArray<class AController*> GetPlayersFromFactions(class UObject* WorldContextObject, TArray<EFaction> Factions, bool AllowBots, bool AllowNPCs);
	static struct FString GetPlayerDebugName(class APlayerState* PlayerState);
	static struct FactionNumbers GetPlayerCountsFromFaction(class UObject* WorldContextObject, EFaction Faction);
	static TArray<struct FPersonalityEmoteTableRow> GetPersonalityEmotes();
	static class ATBLTeam* GetOppositeTeam(class UObject* WorldContextObject, class ATBLTeam* Team);
	static EFaction GetOppositeFaction(class UObject* WorldContextObject, EFaction Faction);
	static int GetOnlineStatWeaponTakedowns(class ATBLPlayerState* State, EWeaponTag WeaponTag);
	static int GetOnlineStatWeaponKills(class ATBLPlayerState* PlayerState, EWeaponTag Weapon);
	static int GetOnlineStatWeaponDeaths(class ATBLPlayerState* PlayerState, EWeaponTag Weapon);
	static int GetOnlineStatSubClassTakedowns(class ATBLPlayerState* PlayerState, ECharacterClass CharacterClass);
	static int GetOnlineStatSubClassPlaytime(class ATBLPlayerState* PlayerState, ECharacterClass CharacterClass);
	static int GetOnlineStatSubClassKills(class ATBLPlayerState* PlayerState, ECharacterClass CharacterClass);
	static int GetOnlineStatSubClassDeaths(class ATBLPlayerState* PlayerState, ECharacterClass CharacterClass);
	static EOnlineStat GetOnlineStatFromWeaponTag(EWeaponTag WeaponTag);
	static EOnlineStat GetOnlineStatFromCharacterClass(ECharacterClass CharacterClass);
	static int GetOnlineStatCommendations(class ATBLPlayerState* PlayerState);
	static int GetOnlineStatBattlecries(class ATBLPlayerState* PlayerState);
	static struct FText GetObjectiveScoreTextFromEnum(TEnumAsByte<EObjectivePointCategory> ObjPointCat);
	static int GetNumPlayers(class UObject* WorldContextObject, bool IncludeBots, bool IncludeNPCs);
	static struct FTeamDisplayInfo GetNeutralTeamDisplayInfo(class UObject* WorldContextObject);
	static struct FVector GetNegativeMaxFloatVector();
	static float GetNegativeMaxFloat();
	static bool GetNDASigned(class UObject* WorldContextObject);
	static struct FText GetNameFromCharacterClass(class UClass* /*ATBLCharacter*/ CharacterClass);
	static class UMovementModifierComponent* GetMovementModifierComponent(class AActor* Actor);
	static class UMovementComponent* GetMovementComponent(class AActor* Actor);
	static int GetMaxPlayersForServer(class UObject* WorldContextObject);
	static float GetMaxFloat();
	static class UTBLMapSummary* GetMapSummary(class UObject* WorldContextObject, const struct FString& MapFileNameWithOptions, bool bCheckGameInstance);
	static struct FString GetMapNameString(class UObject* WorldContextObject);
	static struct FText GetLocalizedWeaponTagText(EWeaponTag WeaponTag);
	static struct FText GetLocalizedTextFromItemUnlock(TEnumAsByte<EOnlineItemUnlockType> ItemUnlockType);
	static struct FText GetLocalizedMapName(const struct FString& MapNameString, struct FString* MapNameKey);
	static struct FText GetLocalizedItemLevelTypeText(EOnlineStat ItemLevelType);
	static struct FText GetLocalizedGameModeTypeText(TEnumAsByte<EGameModeType> GamemodeType);
	static bool GetLocalizedGameModeFromMapString(const struct FString& MapNameString, struct FText* LongForm, struct FText* ShortForm);
	static struct FText GetLocalizedCharacterClassText(ECharacterClass CharacterClass);
	static class ULoadoutSelection* GetLoadoutSelectionDefaultObj(class UClass* /*ULoadoutSelection*/ LoadoutSelectionClass);
	static class ALevelScriptActor* GetLevelScriptActor(class UObject* WorldContextObject);
	static float GetLastServerReceivePacketTime(class UObject* WorldContextObject);
	static class AActor* GetKilledActor(const struct FDeathDamageTakenEvent& Event);
	static struct FText GetInventorySlotTextFromEnum(EInventorySlot InventorySlotType);
	static class UTexture2D* GetIconFromCharacterClass(class UClass* /*ATBLCharacter*/ CharacterClass);
	static struct FName GetHitDirectionName(class AActor* HitActor, const struct FVector& HitDirection);
	static struct FString GetGameModeNameString(class UObject* WorldContextObject);
	static TArray<struct FGameModeMessageTable> GetGameModeMessageRows(class UDataTable* GameModeMessageDataTable, TArray<struct FString> EventTags);
	static struct FString GetFullBuildVersionString();
	static struct FString GetFriendUserId(const struct FBlueprintOnlineUser& InFriend);
	static struct FString GetFriendDisplayName(const struct FBlueprintOnlineUser& InFriend);
	static void GetDisplayInfoFromCharacterClass(class UClass* /*ATBLCharacter*/ CharacterClass, struct FCharacterDisplayInfo* DisplayInfo);
	static class UTBLDialogManager* GetDialogManager(class UObject* WorldContextObject);
	static int GetDemoTeam(class UObject* WorldContextObject);
	static struct FString GetDemoServer(class UObject* WorldContextObject);
	static struct FString GetDemoPlayerName(class UObject* WorldContextObject);
	static EFaction GetDefendingFaction(class UObject* WorldContextObject);
	static class UObject* GetDefaultObjectFromStringReference(const struct FSoftObjectPath& StringReference);
	static class AInventoryItem* GetDefaultInventoryItemObject(class UClass* /*AInventoryItem*/ InventoryItemClass);
	static class ATBLCharacter* GetDefaultCharacterFromCharacterClass(class UClass* /*ATBLCharacter*/ CharacterClass);
	static struct FDateTime GetDateTime(const struct FTBL_FReplicatedDateTime& ReplDateTime);
	static struct FName GetDamageSourceName(class UDamageSource* DamageSource);
	static class UTexture* GetDamageSourceIconTexture(class UDamageSource* DamageSource);
	static struct FText GetDamageSourceDisplayName(class UDamageSource* DamageSource);
	static TArray<struct FCustomPersonalityEmotesTableRow> GetCustomPersonalityEmotes();
	static bool GetCustomPersonalityEmoteOverride(const struct FPersonalityEmoteTableRow& Emote, TEnumAsByte<EAudioPersonalityType> PersonalityType, struct FPersonalityEmoteTableRow* OutRow);
	static class UCustomizationComponent* GetCustomizationComponent(class AActor* Actor);
	static struct FString GetCurrentServerNameString(class UObject* WorldContextObject);
	static ECrowdControlDirection GetCrowdControlDirection(const struct FName& Direction);
	static TArray<class AController*> GetControllersFromFaction(class UObject* WorldContextObject, EFaction Faction);
	static class UContextVOManager* GetContextVoObject(class UObject* WorldContextObject);
	static class UConditionsComponent* GetConditionsComponent(class AActor* Actor);
	static struct FString GetClassPathName(class UClass* /*UObject*/ InClass);
	static class UClass* /*ATBLCharacter*/ GetCharacterSubclassForPrimaryWeapon(class UClass* /*ATBLCharacter*/ CharacterClass, class UClass* /*AInventoryItem*/ PrimaryWeapon);
	static TArray<class UClass* /*ATBLCharacter*/> GetCharacterSubclasses(class UClass* /*ATBLCharacter*/ ParentClass);
	static TArray<class ATBLCharacter*> GetCharactersFromFactions(class UObject* WorldContextObject, TArray<EFaction> Factions, bool AllowBots, bool AllowNPCs);
	static TEnumAsByte<EAudioClassType> GetCharacterClassType(class AActor* Actor);
	static class UClass* /*ATBLCharacter*/ GetCharacterClassFromSubclass(class UClass* /*ATBLCharacter*/ Subclass);
	static struct FString GetBuildNumber();
	static EBuildFinality GetBuildFinality();
	static EFaction GetAttackingFaction(class UObject* WorldContextObject);
	static TArray<class AActor*> GetAttachedActors(class AActor* Actor);
	static class AAlwaysOnMusicManager* GetAlwaysOnMusicManager(class UObject* WorldContextObject);
	static void GetAllTeamsPlayersWithExclusion(class UObject* WorldContextObject, TArray<EFaction> ExcludeFactions, TArray<class ATBLTeam*>* IncludedTeams, TArray<class AController*>* IncludedPlayers);
	static TArray<struct FString> GetAllNames(ENameType NameType);
	static void GetAllMapNames_EditorOnly(TArray<struct FString>* MapNames);
	static TArray<struct FString> GetAllFrontendMovieURLs();
	static TArray<class UActorComponent*> GetAllComponentsFromClass(class UClass* /*AActor*/ ActorClass);
	static TArray<class ATBLCharacter*> GetAllCharactersFromFaction(class UObject* WorldContextObject, EFaction Faction);
	static void GetAllActorsWithTag(class UObject* WorldContextObject, const struct FName& Tag, TArray<class AActor*>* OutActors);
	static TArray<class AActor*> GetAllActorsWithComponentsWithExclusions(TArray<class UClass* /*UActorComponent*/> ComponentClasses, TArray<class UClass* /*UActorComponent*/> ExcludeComponentClasses, TArray<class UClass* /*AActor*/> OptionalActorClasses, class UObject* WorldContextObject);
	static TArray<class AActor*> GetAllActorsWithComponents(TArray<class UClass* /*UActorComponent*/> ComponentClasses, class UObject* WorldContextObject);
	static class ATBLTeam* GetActorTeam(class AActor* Actor);
	static void GetActorsWithTagClassSpecifier(const struct FName& Tag, class UClass* /*AActor*/ ActorClass, class UObject* WorldContextObject, TArray<class AActor*>* OutActors);
	static TArray<class AActor*> GetActorsWithTag(const struct FName& Tag, class UObject* WorldContextObject);
	static void GetActorMaterials(class AActor* Actor, TArray<class UPrimitiveComponent*>* OutComponents, TArray<class UMaterialInstanceDynamic*>* OutMaterials);
	static EFaction GetActorFaction(class AActor* Actor);
	static class AInventoryItem* GetActorEquippedWeaponByState(class AActor* Actor, EEquippedState EquippedState);
	static class AInventoryItem* GetActorEquippedWeapon(class AActor* Actor);
	static class UActorComponent* GetActorComponentWithTag(class AActor* Actor, const struct FName& Tag);
	static class UActorComponent* GetActorComponent(class AActor* Actor, class UClass* /*UActorComponent*/ Class);
	static class AInventoryItem* GetActorAttackingWeapon(class AActor* Actor);
	static struct FText GetActionBindingTextForInventorySlot(EInventoryItemSlot InventoryItemSlot, class UObject* WorldContextObject, struct FInputActionKeyMapping* ActionMapping);
	static bool GetAbilityConfigLoaded(class UObject* WorldContextObject);
	static class UAbilityConfig* GetAbilityConfig(class UObject* WorldContextObject);
	static class UAbilitiesComponent* GetAbilitiesComponent(class AActor* Actor);
	static struct FString GenerateRandomName(ENameType NameType);
	static struct FString GenerateHashName(const struct FString& StringToHash, ENameType NameType);
	static struct FLinearColor GammaCorrectLinearColor(const struct FLinearColor& LinCol, float Gamma);
	static void FrameDelay(class UObject* WorldContextObject, int NumFramesToDelay, const struct FLatentActionInfo& LatentInfo);
	static TArray<struct FGameModeMessage> FormatGameModeMessages(TArray<struct FGameModeMessageTable> Messages);
	static void ForceUpdateChildTransforms(class USceneComponent* Component);
	static void ForcePlayersDropCarryable(class UObject* WorldContextObject, EFaction Faction, class UClass* /*AInventoryItem*/ InventoryType);
	static void ForcePlayerDropCarryable(class ATBLCharacter* Character, class UClass* /*AInventoryItem*/ InventoryType);
	static class UClass* /*UObject*/ FindBlueprintClass(const struct FString& BlueprintName, class UClass* /*UObject*/ ParentClass);
	static void EndProfilerStat(const struct FProfilerStat& ProfilerStat);
	static void DumpPlayers(class UWorld* World);
	static void DoKeyEvent(class AActor* Actor, const struct FName& ActionName, TEnumAsByte<EInputEvent> KeyEvent);
	static void DoKeyAxis(class AActor* Actor, const struct FName& ActionName, float AxisValue);
	static bool DoesActorHaveInventoryItem(class AActor* Actor, class UClass* /*AInventoryItem*/ InventoryItem, bool bCanBeChildOf);
	static void DisableComponentsOnServer(class AActor* Actor, int DisableFlags);
	static void DisableComponentsOnBotClient(class AActor* Actor);
	static void DestroyActorComponent(class UActorComponent* Component);
	static class UStatsComponent* CreateStatsComponent(class AActor* Actor);
	static class AActor* CreateSoundActor(class AActor* ReferenceActor, const struct FVector& OffsetLocation);
	static void ClearCharacterRuntimeAssetCache();
	static bool CanCharacterSubclassUsePrimaryWeapon(class UClass* /*ATBLCharacter*/ CharacterSubclass, class UClass* /*AInventoryItem*/ PrimaryWeapon);
	static void CancelAllLatentActionsForObject(class UObject* Object);
	static void BreakCanvasIcon(const struct FCanvasIcon& Icon, class UTexture** Texture, float* U, float* V, float* UL, float* VL);
	static bool BlueprintOnlineUserEquals(const struct FBlueprintOnlineUser& A, const struct FBlueprintOnlineUser& B);
	static void BeginProfilerStat(const struct FProfilerStat& ProfilerStat);
	static void AwardScoreToPlayers(class UObject* WorldContextObject, TArray<class ATBLPlayerState*> PlayerStates, const struct FName& RowName, EOnlineStat Stat);
	static void AwardOverrideScoreToPlayer(const struct FName& RowName, int Score, class ATBLPlayerState* Player, class ATBLPlayerState* OtherPlayer);
	static class USceneComponent* AttachComponentFromSCS(class UClass* /*UObject*/ Class, class AActor* TargetActor, class USceneComponent* TargetComponent, const struct FName& ComponentName);
	static void AtlasCharacterTextures(class ACharacter* Character);
	static bool AreHardwarePlatformsFromTheSameFirstParty(EHardwarePlatform A, EHardwarePlatform B);
	static bool AddTagsToActor(class AActor* Actor, TArray<struct FName> Tags, class UObject* WorldContextObject);
	static void AddClosedCaptionLine(const struct FText& OriginString, const struct FText& ChatString, class AActor* OriginatingActor, EClosedCaptionType Type, class UObject* WorldContextObject, bool IgnoreDistance);
};


// Class TBL.TBLTeam
// 0x0108 (0x0360 - 0x0258)
class ATBLTeam : public AInfo
{
public:
	EFaction                                           Faction;                                                  // 0x0258(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0259(0x0003) MISSED OFFSET
	int                                                MaxNumPlayers;                                            // 0x025C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FTeamDisplayInfo                            DisplayInfo;                                              // 0x0260(0x0080) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*ATBLCharacter*/>            PawnClasses;                                              // 0x02E0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*ATBLCharacter*/>            PawnSubclasses;                                           // 0x02F0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsTeamAttacking;                                         // 0x0300(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsTeamDefending;                                         // 0x0301(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0302(0x0002) MISSED OFFSET
	float                                              Tickets;                                                  // 0x0304(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxTickets;                                               // 0x0308(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TiebreakScore;                                            // 0x030C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              Kills;                                                    // 0x0310(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                RoundsWon;                                                // 0x0314(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FRoundResult>                        RoundResults;                                             // 0x0318(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              Score;                                                    // 0x0328(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x34];                                      // 0x032C(0x0034) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLTeam"));
		return ptr;
	}


	void SwapWithTeam(class ATBLTeam* Other);
	void SetTiebreakScore(float SecondaryScore);
	void SetTeamTickets(float NewTickets);
	void SetTeamScore(const struct FTeamScoreEvent& ScoreEvent);
	void SetTeamMaxTickets(float MaxNumTickets);
	void IncrementKills(int Delta);
	float GetTeamScore();
	void CommitRoundResult(bool bWonRound);
	void BroadcastLocalizedChat(const struct FText& Msg, TEnumAsByte<EChatType> Type);
	void BroadcastChat(class AActor* Sender, const struct FString& Msg, TEnumAsByte<EChatType> Type);
};


// Class TBL.TBLTeamPlayerStart
// 0x0050 (0x02E0 - 0x0290)
class ATBLTeamPlayerStart : public ATBLPlayerStart
{
public:
	TSet<EFaction>                                     Factions;                                                 // 0x0290(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLTeamPlayerStart"));
		return ptr;
	}


	void AddRemoveFaction(EFaction Faction, ETeamPlayerStartAction Action);
};


// Class TBL.TBLTextBlock
// 0x0198 (0x0820 - 0x0688)
class UTBLTextBlock : public URichTextBlock
{
public:
	struct FSlateColor                                 ColorAndOpacity;                                          // 0x0688(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                  // 0x06B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptDelegate                             GetKeybindingWidgetDelegateEvent;                         // 0x06C0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x20];                                      // 0x06D0(0x0020) MISSED OFFSET
	struct FSlateFontInfo                              Font;                                                     // 0x06F0(0x0058) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLinearColor                                Color;                                                    // 0x0748(0x0010) (CPF_ZeroConstructor, CPF_Deprecated, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UWidgetDecorator*>                    KeyBindingDecorators;                                     // 0x0758(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UDataTable*                                  EmbeddedWidgetsTable;                                     // 0x0768(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FString, class UClass* /*UUserWidget*/> RunNameToWidgetClass;                                     // 0x0770(0x0050) (CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   ShadowOffset;                                             // 0x07C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLinearColor                                ShadowColorAndOpacity;                                    // 0x07C8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptDelegate                             ShadowColorAndOpacityDelegate;                            // 0x07D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   IconSize;                                                 // 0x07E8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FString                                     ElementRegexPattern;                                      // 0x07F0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FString                                     AttributeRegexPattern;                                    // 0x0800(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bOverrideDefaultTextStyle;                                // 0x0810(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0811(0x0007) MISSED OFFSET
	class UClass* /*UObject*/                          DefaultEmbeddedKeyBindingClass;                           // 0x0818(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLTextBlock"));
		return ptr;
	}


	void SetWrapTextAt(float InWrapTextAt);
	void SetShadowOffset(const struct FVector2D& InShadowOffset);
	void SetShadowColorAndOpacity(const struct FLinearColor& InShadowColorAndOpacity);
	void SetFontSize(int Size);
	void SetFont(const struct FSlateFontInfo& InFontInfo);
	void SetColorAndOpacity(const struct FSlateColor& InColorAndOpacity);
};


// Class TBL.TextureAtlasManager
// 0x01D0 (0x01F8 - 0x0028)
class UTextureAtlasManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET
	TArray<class UTexture2D*>                          BuiltTextures;                                            // 0x0040(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                      RenderTargetForTextureType;                               // 0x0050(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                      RenderTargetTemp;                                         // 0x0058(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                      RenderTargetForHeraldry;                                  // 0x0060(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHeraldryRenderTargetInitialized;                         // 0x0068(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	class UMaterialInstanceDynamic*                    HeraldryRenderMID;                                        // 0x0070(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    OriginalHelmetMID;                                        // 0x0078(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UObject*>                             ReferencedObjects;                                        // 0x0080(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               RuntimeMorphTargets;                                      // 0x0090(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UTBLTextureCacheBuilder*                     CacheBuilder;                                             // 0x00A0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x48];                                      // 0x00A8(0x0048) MISSED OFFSET
	TArray<class USkeletalMeshComponent*>              SkeletalMeshComponents;                                   // 0x00F0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class USkeletalMesh*>                       SourceMeshList;                                           // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<class USkeletalMesh*, double>                 LoadedSourceMeshList;                                     // 0x0110(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class USkeletalMesh>>        LoadingSourceMeshList;                                    // 0x0160(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0170(0x0008) MISSED OFFSET
	TArray<class USkeletalMeshComponent*>              SourceComponentList;                                      // 0x0178(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<struct FName, float>                          CompositeMorphTargets;                                    // 0x0188(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	class USkeletalMesh*                               CompositeMesh;                                            // 0x01D8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x18];                                      // 0x01E0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TextureAtlasManager"));
		return ptr;
	}


	void OnAssetCacheComplete(class URuntimeAssetCacheBuilder_ObjectBase* CachedAssetBuilder, bool Success);
};


// Class TBL.TBLTitleDataLibrary
// 0x0000 (0x0028 - 0x0028)
class UTBLTitleDataLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLTitleDataLibrary"));
		return ptr;
	}


	static bool IsTrialModeEnabled();
	static bool IsTrialModeClient();
	static bool IsStoreEnabled();
	static bool IsServerBrowserEnabled();
	static bool IsQuickMatchEnabled();
	static bool IsMatchmakingEnabled();
	static bool IsGameEnabled();
	static bool HasTitleNews();
	static bool HasTitleData();
	static bool HasMotd();
	static TArray<struct FTitleNews> GetTitleNews();
	static TMap<struct FString, struct FString> GetTitleData();
	static struct FName GetSpecialEventName();
	static struct FString GetQuickplayQueueName();
	static struct FMotd GetMotd();
	static bool GetMatchmakingQueue(const struct FName& ID, struct FMatchmakingQueue* Queue);
	static bool GetHostedMatchmakingQueue(struct FMatchmakingQueue* OutQueue);
	static void GetAllMatchmakingQueues(TArray<struct FMatchmakingQueue>* Queues);
};


// Class TBL.TBLTitleScreen
// 0x00A0 (0x0450 - 0x03B0)
class UTBLTitleScreen : public UTBLScreenWidget
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x03B0(0x0004) MISSED OFFSET
	bool                                               bSavedHasAgreedToTOS;                                     // 0x03B4(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x1];                                       // 0x03B5(0x0001) MISSED OFFSET
	ETitleScreenMode                                   State;                                                    // 0x03B6(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x1];                                       // 0x03B7(0x0001) MISSED OFFSET
	struct FText                                       ErrorMessageTitle;                                        // 0x03B8(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       ErrorMessageBody;                                         // 0x03D0(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x8];                                       // 0x03E8(0x0008) MISSED OFFSET
	struct FString                                     EGSDevAuth_Address;                                       // 0x03F0(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FString                                     EGSDevAuth_Client;                                        // 0x0400(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FDateTime                                   MaintenanceCurrentTime;                                   // 0x0410(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FDateTime                                   MaintenanceEndTime;                                       // 0x0418(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x30];                                      // 0x0420(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLTitleScreen"));
		return ptr;
	}


	bool ShouldUsePCStyleWelcomeScreen();
	bool ShouldShowEgsDevLoginCredentials();
	void RetryMaintenance();
	void OnUserPressedStart(int ControllerIndex);
	void OnUserPressedOfflineMode(int ControllerIndex);
	void OnUserPressedLogin(int ControllerIndex, const struct FString& InEGSDevAuth_Address, const struct FString& InEGSDevAuth_Client);
	void OnUserLoginDowngraded();
	void OnTOSDeclined();
	void OnTOSAgreed();
	void OnPlayTutorialDeclined();
	void OnPlayTutorialAccepted();
	void OnMaintenanceDataLoaded();
	void Logout();
	void K2_OnStateChanged(ETitleScreenMode NewState);
};


// Class TBL.CharacterCustomizationSettings
// 0x0010 (0x0038 - 0x0028)
class UCharacterCustomizationSettings : public UObject
{
public:
	TArray<struct FSwatchSelectionsByClass>            CustomizationSwatches;                                    // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.CharacterCustomizationSettings"));
		return ptr;
	}

};


// Class TBL.TBLUMGSequencePlayer
// 0x0028 (0x0808 - 0x07E0)
class UTBLUMGSequencePlayer : public UUMGSequencePlayer
{
public:
	bool                                               bIsPlayingAdvancedAnimation;                              // 0x07E0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x27];                                      // 0x07E1(0x0027) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLUMGSequencePlayer"));
		return ptr;
	}

};


// Class TBL.TBLUtilityLibrary
// 0x0000 (0x0028 - 0x0028)
class UTBLUtilityLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLUtilityLibrary"));
		return ptr;
	}


	static void SetEnabledRenderMainScene(class UObject* WorldContextObject, bool bShouldRenderMainScene);
	static void SetAudioEnemyRTPC(class UAkComponent* AkComponent, class AActor* Initiator);
	static void SaveCustomizationSettings();
	static void RecursiveSetVisibility(class UPrimitiveComponent* Root, bool bOwnerNoSee, bool bOnlyOwnerSee);
	static int RandomWeightedIntegerFromStream(TArray<float> Weights, const struct FRandomStream& InStream);
	static void LogWithCallstacks(const struct FString& Message);
	static void LoadCinematicSublevel(class UObject* WorldContextObject, const struct FName& LevelName, bool bMakeVisibleAfterLoad, bool bShouldBlockOnLoad, const struct FLatentActionInfo& LatentInfo);
	static TEnumAsByte<ESonyAppType> GetSonyPlatformRegion();
	static TArray<struct FSwatchSelectionsByClass> GetSavedCustomizationSettings();
	static TEnumAsByte<EPlatformType> GetPlatformType();
	static void GetMatchingChildComponentsByName(class USceneComponent* RootComponent, const struct FString& MatchName, TArray<class USceneComponent*>* OutMatches);
	static float GetClosestPointOnCollision(class AActor* Actor, const struct FVector& Point, TEnumAsByte<ECollisionChannel> CollisionChannel, struct FVector* ClosestPointOnCollision);
	static float GetAzimuth(const struct FVector& Direction, const struct FVector& Forward);
	static struct FName FindClosestSocket(class USceneComponent* Component, const struct FVector& Location, const struct FString& SocketSubstring);
};


// Class TBL.TBLWeaponAnimInstance
// 0x00F0 (0x05A0 - 0x04B0)
class UTBLWeaponAnimInstance : public UTBLAnimInstance
{
public:
	bool                                               Is3p;                                                     // 0x04B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsAddedToInventory;                                       // 0x04B1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsEquipped;                                               // 0x04B2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsCarryable;                                              // 0x04B3(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       AttackName;                                               // 0x04B4(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CombatState;                                              // 0x04BC(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsLoaded;                                                 // 0x04C4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04C5(0x0003) MISSED OFFSET
	struct FName                                       PreviousCombatState;                                      // 0x04C8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               AnimationSetBase;                                         // 0x04D0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               AnimationSetBase1P;                                       // 0x04D8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimationSet*                               AnimationSetBase3P;                                       // 0x04E0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               ReloadStates;                                             // 0x04E8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   IdlePoses;                                                // 0x04F8(0x0050) (CPF_NativeAccessSpecifierPublic)
	struct FName                                       MontageStartingSection;                                   // 0x0548(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0550(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLWeaponAnimInstance"));
		return ptr;
	}


	void StartWeaponAnimation();
	void OnDropped(class AInventoryItem* Item, class ATBLCharacter* Character, const struct FTransform& Transform);
	void OnAttackMontageSectionChanged(class UAnimMontage* Montage, int NextSection);
	void OnAnimationSetChanged(const struct FName& AnimSetName, const struct FAnimationSetDataTable& AnimInfo, class AInventoryItem* InInventoryItem);
	void EventOnCombatStateChanged(const struct FName& PreviousState, const struct FName& NewState);
	void EndWeaponAnimation();
	void AnimNotify_ShowArrow();
};


// Class TBL.TBLWebWidget
// 0x00F0 (0x01F8 - 0x0108)
class UTBLWebWidget : public UWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0108(0x0020) MISSED OFFSET
	bool                                               ShowControls;                                             // 0x0128(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ShowAddressBar;                                           // 0x0129(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x6];                                       // 0x012A(0x0006) MISSED OFFSET
	struct FString                                     InitialURL;                                               // 0x0130(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ShowErrorMessage;                                         // 0x0140(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               SupportsTransparency;                                     // 0x0141(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               SupportsThumbMouseButtonNavigation;                       // 0x0142(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ShowInitialThrobber;                                      // 0x0143(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FColor                                      BackgroundColor;                                          // 0x0144(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptDelegate                             OnLoadCompletedEvent;                                     // 0x0148(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptDelegate                             OnSourceParsedEvent;                                      // 0x0158(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0168(0x0020) MISSED OFFSET
	struct FScriptDelegate                             OnTitleChanged;                                           // 0x0188(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptDelegate                             OnUrlChanged;                                             // 0x0198(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptDelegate                             OnBeforeNavigationEvent;                                  // 0x01A8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptDelegate                             OnLoadUrlEvent;                                           // 0x01B8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x30];                                      // 0x01C8(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLWebWidget"));
		return ptr;
	}


	void InitializeWidget();
	struct FString GetButtonText(int ButtonIndex);
	void ClickedButton(int ButtonIndex);
	void BrowseToUrl(const struct FString& URL);
};


// Class TBL.TBLMapSummary
// 0x0038 (0x0060 - 0x0028)
class UTBLMapSummary : public UObject
{
public:
	struct FText                                       MapName;                                                  // 0x0028(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FText                                       MapDescription;                                           // 0x0040(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	EFaction                                           AttackingFaction;                                         // 0x0058(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EGameModeType>                         GamemodeType;                                             // 0x0059(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x005A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLMapSummary"));
		return ptr;
	}

};


// Class TBL.TBLWorldSettings
// 0x0348 (0x0720 - 0x03D8)
class ATBLWorldSettings : public AWorldSettings
{
public:
	class UTBLMapSummary*                              MapSummary;                                               // 0x03D8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FText                                       MapName;                                                  // 0x03E0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	struct FText                                       MapDescription;                                           // 0x03F8(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)
	EFaction                                           AttackingFaction;                                         // 0x0410(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EFaction                                           DefendingFaction;                                         // 0x0411(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               UseNewStageIdNumbers;                                     // 0x0412(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EGameModeType>                         GamemodeType;                                             // 0x0413(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0414(0x0004) MISSED OFFSET
	class UTBLGameModeSettings*                        GameModeSettings;                                         // 0x0418(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDataTable*                                  GameModeMessageTable;                                     // 0x0420(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FStageEndingConfig                          StageEndingConfig;                                        // 0x0428(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_AssetRegistrySearchable, CPF_NativeAccessSpecifierPublic)
	struct FStageEndingConfig                          TenosiaCompatibleStageEndingConfig;                       // 0x0448(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_AssetRegistrySearchable, CPF_NativeAccessSpecifierPublic)
	float                                              DefaultContextVoFrequencyPerMin;                          // 0x0468(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                DefaultContextVoNumPlayers;                               // 0x046C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ASpawner*                                    AttackerInitialSpawn;                                     // 0x0470(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ASpawner*                                    DefenderInitialSpawn;                                     // 0x0478(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALevelSequenceActor>          PrologueSequence;                                         // 0x0480(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALevelSequenceActor>          WaitingForPlayersSequence;                                // 0x04A8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALevelSequenceActor>          PreparingMatchSequence;                                   // 0x04D0(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALevelSequenceActor>          AttackerWarmupSequence;                                   // 0x04F8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALevelSequenceActor>          DefenderWarmupSequence;                                   // 0x0520(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALevelSequenceActor>          VictoryPodiumSequence;                                    // 0x0548(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<TSoftObjectPtr<class ASpawner>, struct FString> SpawnerSequenceBindingPrefixes;                           // 0x0570(0x0050) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALevelSequenceActor>          AgathaVictorySequence;                                    // 0x05C0(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALevelSequenceActor>          AgathaDefeatSequence;                                     // 0x05E8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALevelSequenceActor>          MasonVictorySequence;                                     // 0x0610(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALevelSequenceActor>          MasonDefeatSequence;                                      // 0x0638(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALevelSequenceActor>          EpilogueSequence;                                         // 0x0660(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALevelSequenceActor>          BlueSequence;                                             // 0x0688(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALevelSequenceActor>          RedSequence;                                              // 0x06B0(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       PodiumSublevel;                                           // 0x06D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PodiumTime;                                               // 0x06E0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x06E4(0x0004) MISSED OFFSET
	TArray<struct FSpecialEventLevelEntry>             SpecialEventStreamingLevels;                              // 0x06E8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       DefaultSpecialEventLevel;                                 // 0x06F8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       StatsOverrideRowName;                                     // 0x0700(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               BlockLoadoutSelectionInClassSelectScreen;                 // 0x0708(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0709(0x0007) MISSED OFFSET
	class UClass* /*ATBLActor*/                        AlwaysOnMusicManagerClass;                                // 0x0710(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bBotsShouldAlwaysCheckFloor;                              // 0x0718(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0719(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLWorldSettings"));
		return ptr;
	}


	TMap<class ASpawner*, struct FString> GetSpawnerSequenceBindingPrefixes();
};


// Class TBL.XCloudSizeBox
// 0x0008 (0x0160 - 0x0158)
class UXCloudSizeBox : public USizeBox
{
public:
	EXCloudWidgetBehavior                              WidgetBehavior;                                           // 0x0158(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0159(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.XCloudSizeBox"));
		return ptr;
	}

};


// Class TBL.TBLXCloudManager
// 0x0018 (0x0048 - 0x0030)
class UTBLXCloudManager : public UGameInstanceSubsystem
{
public:
	struct FMulticastScriptDelegate                    OnGameStreamingStateChanged;                              // 0x0030(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TBLXCloudManager"));
		return ptr;
	}


	void UnbindWidget(class UWidget* Widget, EXCloudWidgetBehavior WidgetType);
	static void SetUIScalingFactor(float ScaleFactor, class UObject* WorldContextObject);
	static void SetMaxScalingPhysicalDimensions(const struct FIntPoint& MaxDimensions, class UObject* WorldContextObject);
	static bool IsStreamingToDevice(class UObject* WorldContextObject);
	static bool IsDeviceSmallEnoughToScaleBP(class UObject* WorldContextObject);
	void BindWidget(class UWidget* Widget, EXCloudWidgetBehavior WidgetType);
};


// Class TBL.TDMLTSGameMode
// 0x0018 (0x1260 - 0x1248)
class ATDMLTSGameMode : public ALTSGameMode
{
public:
	class ULTSTDMGameModeSettings*                     LTSTDMGameModeSettings;                                   // 0x1248(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x10];                                      // 0x1250(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TDMLTSGameMode"));
		return ptr;
	}


	void PostWarmupGivePlayersControl();
	void OnReachedEndTime();
};


// Class TBL.LTSTDMGameModeSettings
// 0x0038 (0x01E0 - 0x01A8)
class ULTSTDMGameModeSettings : public ULTSGameModeSettings
{
public:
	int                                                TicketsPerTeam;                                           // 0x01A8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01AC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 TicketsNumPlayersBonus;                                   // 0x01B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MatchTimeSeconds;                                         // 0x01B8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01BC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 MatchTimeNumPlayersBonus;                                 // 0x01C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FTDMRout>                            AutomaticRouts;                                           // 0x01C8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAutoStartAllSequences;                                   // 0x01D8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAutoStopSequencesOnTicketless;                           // 0x01D9(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x6];                                       // 0x01DA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.LTSTDMGameModeSettings"));
		return ptr;
	}

};


// Class TBL.TeamCapturePointComponent
// 0x03D8 (0x04E0 - 0x0108)
class UTeamCapturePointComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0108(0x0018) MISSED OFFSET
	struct FTeamCapturePointComponentProperties        TeamCapturePointComponentProperties;                      // 0x0120(0x0068) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_FTeamCapturePointComponentProperties ReplicatedTeamCapturePointComponentProperties;            // 0x0188(0x0078) (CPF_Net, CPF_RepNotify, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    PlayersInCaptureVolumeChanged;                            // 0x0200(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    CaptureStateChanged;                                      // 0x0210(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnOwningTeamHasChanged;                                   // 0x0220(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnControllingTeamHasChanged;                              // 0x0230(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnProgressChanged;                                        // 0x0240(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Float                           Progress;                                                 // 0x0250(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicatedArray_ATBLCharacterPtr           PlayersInCaptureVolume;                                   // 0x0268(0x0020) (CPF_Net, CPF_RepNotify, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_ECapturePointState              CurrentCaptureState;                                      // 0x0288(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_ECapturePointState              PreviousCaptureState;                                     // 0x02A0(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_ATBLTeamPtr                     OwningTeam;                                               // 0x02B8(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_ATBLTeamPtr                     ControllingTeam;                                          // 0x02D0(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_ATBLTeamPtr                     ProgressGainedByTeam;                                     // 0x02E8(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Bool                            bIsImmune;                                                // 0x0300(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    TickEventFire;                                            // 0x0318(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FObjectiveStatusDisplayComponentStruct      ObjectiveStatusDisplay;                                   // 0x0328(0x0030) (CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	struct FDisplayComponentControls                   DisplayComponentControls;                                 // 0x0358(0x0005) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x15];                                      // 0x035D(0x0015) MISSED OFFSET
	bool                                               bDefenderCanGetScore;                                     // 0x0372(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x6D];                                      // 0x0373(0x006D) MISSED OFFSET
	TArray<class AActor*>                              OtherOverlapActors;                                       // 0x03E0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAwardCaptureInterval;                                    // 0x03F0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x03F1(0x0003) MISSED OFFSET
	float                                              CaptureIntervalScoreInterval;                             // 0x03F4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FDataTableRowSelection                      CaptureIntervalScoreEvent;                                // 0x03F8(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bAwardScoreWhenCaptured;                                  // 0x0410(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x1F];                                      // 0x0411(0x001F) MISSED OFFSET
	TMap<uint32_t, TWeakObjectPtr<class ATBLCharacter>> CharacterIDMap;                                           // 0x0430(0x0050) (CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x50];                                      // 0x0480(0x0050) MISSED OFFSET
	TArray<class UPrimitiveComponent*>                 OverlapComponents;                                        // 0x04D0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TeamCapturePointComponent"));
		return ptr;
	}


	void SetTeamCapturePointProperties(const struct FTeamCapturePointComponentProperties& Props);
	void SetIsDefendingTeamAllowedToGainScore(bool Enabled);
	void SetCaptureState(TEnumAsByte<ETeamCapturePointComponentState> NewState);
	void ResetCapturePoint();
	void RefreshActorsInCaptureZone();
	bool PlayerSatisfiesCaptureRequirments(class ATBLCharacter* Player);
	void OnTrackedCharacterKilled(const struct FDeathDamageTakenEvent& DamageEvent);
	void OnTrackedCharacterDestroyed(class AActor* DestroyedActor);
	void OnRep_Properties();
	void OnRep_Progress();
	void OnRep_PlayersInTeamCapturePoint();
	void OnRep_OwningTeamChanged();
	void OnRep_ControllingTeamChanged();
	void OnRep_CaptureState();
	void OnDeactivated(class UActorComponent* Component);
	void OnActivated(class UActorComponent* Component, bool bReset);
	class ATBLTeam* GetProgressGainedByTeam();
	int GetPlayerNumbersForFaction(EFaction Faction);
	class ATBLTeam* GetOwningTeam();
	bool GetIsImmune();
	class ATBLTeam* GetControllingTeam(bool* IsTie);
	void EndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void DeactivateTeamCapturePoint();
	void BeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void ActivateTeamCapturePoint();
};


// Class TBL.TeamOwnershipComponent
// 0x0040 (0x0148 - 0x0108)
class UTeamOwnershipComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	struct FReplicated_EFaction                        OwnerFaction;                                             // 0x0118(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	EFaction                                           DefaultFaction;                                           // 0x0130(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0131(0x0007) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnOwnershipChanged;                                       // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TeamOwnershipComponent"));
		return ptr;
	}


	void SetOwnerTeam(class ATBLTeam* Team);
	void SetOwnerFaction(EFaction Faction);
	void SetFaction(EFaction Faction);
	void OnRep_OwnerFaction();
	class ATBLTeam* GetOwnerTeam();
	EFaction GetFaction();
};


// Class TBL.UtilityAI_TargetGenerator
// 0x0008 (0x0030 - 0x0028)
class UUtilityAI_TargetGenerator : public UObject
{
public:
	EUtilityAI_TargetType                              Type;                                                     // 0x0028(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.UtilityAI_TargetGenerator"));
		return ptr;
	}


	bool IsValidTarget(const struct FUtilityAI_Context& Context);
	TArray<class UObject*> GetTargetObjects(const struct FUtilityAI_Context& C);
	TArray<struct FVector> GetTargetLocations(const struct FUtilityAI_Context& C);
	void GetTargetHybridLocations(const struct FUtilityAI_Context& C, TArray<struct FUtilityAITargetHybrid>* Locations);
	TArray<class AActor*> GetTargetActors(const struct FUtilityAI_Context& C);
};


// Class TBL.TG_ActorsWithAITag
// 0x0008 (0x0038 - 0x0030)
class UTG_ActorsWithAITag : public UUtilityAI_TargetGenerator
{
public:
	struct FGameplayTag                                Tag;                                                      // 0x0030(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_ActorsWithAITag"));
		return ptr;
	}

};


// Class TBL.TG_ActorsWithTag
// 0x0008 (0x0038 - 0x0030)
class UTG_ActorsWithTag : public UUtilityAI_TargetGenerator
{
public:
	struct FName                                       Tag;                                                      // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_ActorsWithTag"));
		return ptr;
	}

};


// Class TBL.TG_BlackboardValue
// 0x0008 (0x0038 - 0x0030)
class UTG_BlackboardValue : public UUtilityAI_TargetGenerator
{
public:
	struct FName                                       KeyName;                                                  // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_BlackboardValue"));
		return ptr;
	}

};


// Class TBL.TG_CharactersWithinRangeOfMe
// 0x0010 (0x0040 - 0x0030)
class UTG_CharactersWithinRangeOfMe : public UUtilityAI_TargetGenerator
{
public:
	EUtilityAI_EnemyOrFriendly                         RelevantFaction;                                          // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              Radius;                                                   // 0x0034(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisregardDownedPlayers;                                  // 0x0038(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_CharactersWithinRangeOfMe"));
		return ptr;
	}

};


// Class TBL.TG_DestinationVolume_WithAITag
// 0x0010 (0x0040 - 0x0030)
class UTG_DestinationVolume_WithAITag : public UUtilityAI_TargetGenerator
{
public:
	struct FGameplayTag                                Tag;                                                      // 0x0030(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                GridDistance;                                             // 0x0038(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_DestinationVolume_WithAITag"));
		return ptr;
	}

};


// Class TBL.TG_InsideCombatZone
// 0x0000 (0x0030 - 0x0030)
class UTG_InsideCombatZone : public UUtilityAI_TargetGenerator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_InsideCombatZone"));
		return ptr;
	}

};


// Class TBL.TG_LoadableActorsWithAITag
// 0x0000 (0x0038 - 0x0038)
class UTG_LoadableActorsWithAITag : public UTG_ActorsWithAITag
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_LoadableActorsWithAITag"));
		return ptr;
	}

};


// Class TBL.TG_MountableSiegeEngineWithAITag
// 0x0000 (0x0038 - 0x0038)
class UTG_MountableSiegeEngineWithAITag : public UTG_ActorsWithAITag
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_MountableSiegeEngineWithAITag"));
		return ptr;
	}

};


// Class TBL.TG_OwnCharacter
// 0x0000 (0x0030 - 0x0030)
class UTG_OwnCharacter : public UUtilityAI_TargetGenerator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_OwnCharacter"));
		return ptr;
	}

};


// Class TBL.TG_OwnLocation
// 0x0000 (0x0030 - 0x0030)
class UTG_OwnLocation : public UUtilityAI_TargetGenerator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_OwnLocation"));
		return ptr;
	}

};


// Class TBL.TG_PerceivedCharacters
// 0x0008 (0x0038 - 0x0030)
class UTG_PerceivedCharacters : public UUtilityAI_TargetGenerator
{
public:
	EUtilityAI_EnemyOrFriendly                         RelevantFaction;                                          // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisregardDownedPlayers;                                  // 0x0031(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCheckAllowedDamagingFaction;                             // 0x0032(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0033(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_PerceivedCharacters"));
		return ptr;
	}

};


// Class TBL.TG_PointsOnGrid
// 0x0010 (0x0040 - 0x0030)
class UTG_PointsOnGrid : public UUtilityAI_TargetGenerator
{
public:
	float                                              GridSize;                                                 // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SpaceBetween;                                             // 0x0034(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EPointsOnGridTrace                                 TraceType;                                                // 0x0038(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_PointsOnGrid"));
		return ptr;
	}


	TArray<struct FVector> GetLocationsAroundTarget(const struct FUtilityAI_Context& C);
};


// Class TBL.TG_PointsAroundActorsWithAITag
// 0x0008 (0x0048 - 0x0040)
class UTG_PointsAroundActorsWithAITag : public UTG_PointsOnGrid
{
public:
	struct FGameplayTag                                Tag;                                                      // 0x0040(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_PointsAroundActorsWithAITag"));
		return ptr;
	}

};


// Class TBL.TG_PointsAroundMe
// 0x0000 (0x0040 - 0x0040)
class UTG_PointsAroundMe : public UTG_PointsOnGrid
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_PointsAroundMe"));
		return ptr;
	}

};


// Class TBL.TG_PointsBesideActorsWithAITag
// 0x0010 (0x0050 - 0x0040)
class UTG_PointsBesideActorsWithAITag : public UTG_PointsOnGrid
{
public:
	struct FGameplayTag                                Tag;                                                      // 0x0040(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                NumberOfPoints;                                           // 0x0048(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ActorRadiusBoost;                                         // 0x004C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_PointsBesideActorsWithAITag"));
		return ptr;
	}

};


// Class TBL.TG_PointsWithinActorBounds
// 0x0010 (0x0040 - 0x0030)
class UTG_PointsWithinActorBounds : public UUtilityAI_TargetGenerator
{
public:
	struct FGameplayTag                                Tag;                                                      // 0x0030(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              GenerationDensity;                                        // 0x0038(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_PointsWithinActorBounds"));
		return ptr;
	}

};


// Class TBL.TG_RallyPoints
// 0x0008 (0x0038 - 0x0030)
class UTG_RallyPoints : public UUtilityAI_TargetGenerator
{
public:
	struct FGameplayTag                                Tag;                                                      // 0x0030(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_RallyPoints"));
		return ptr;
	}

};


// Class TBL.TG_ThrowPointForActorWithAITag
// 0x0000 (0x0050 - 0x0050)
class UTG_ThrowPointForActorWithAITag : public UTG_PointsBesideActorsWithAITag
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TG_ThrowPointForActorWithAITag"));
		return ptr;
	}

};


// Class TBL.Transition
// 0x0008 (0x0260 - 0x0258)
class ATransition : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0258(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.Transition"));
		return ptr;
	}

};


// Class TBL.TrapEventInterface
// 0x0000 (0x0028 - 0x0028)
class UTrapEventInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TrapEventInterface"));
		return ptr;
	}


	void HandleTrapEvent(ETrapEventResult Result, class ATBLCharacter* TargetCharacter);
};


// Class TBL.TutorialGameMode
// 0x0010 (0x1190 - 0x1180)
class ATutorialGameMode : public ATBLGameMode
{
public:
	class AActor*                                      OverridePlayerStart;                                      // 0x1180(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass* /*ULoadoutSelection*/                OverrideLoadout;                                          // 0x1188(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.TutorialGameMode"));
		return ptr;
	}


	void SetPlayerStart(class AActor* Actor);
	void SetLoadout(class UClass* /*ULoadoutSelection*/ Loadout);
};


// Class TBL.UIBlueprintLibrary
// 0x0050 (0x0078 - 0x0028)
class UUIBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:
	TMap<EFaction, class UClass* /*ATBLTeam*/>         FactionMap;                                               // 0x0028(0x0050) (CPF_Transient, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.UIBlueprintLibrary"));
		return ptr;
	}


	static void UnregisterDisplayComponent(const TScriptInterface<class UDisplayComponentInterface>& DisplayComponent);
	static void StopListeningForKeybindings();
	static bool ShouldDisableWorkInProgressFeatures();
	static void SetInputActionMode(class APlayerController* InPlayerController, EInputActionMode InInputActionMode);
	static void SendGlobalGameNotification(EGlobalGameNotificationCategory Category, const struct FText& Title, const struct FText& Body, const struct FName& Subcategory, class UObject* Data, class UObject* WorldContextObject);
	static struct FEventReply RouteOnKeyUpToWidget(class UWidget* Widget, const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	static struct FEventReply RouteOnKeyDownToWidget(class UWidget* Widget, const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	static struct FEventReply RouteOnKeyCharToWidget(class UWidget* Widget, const struct FGeometry& MyGeometry, const struct FCharacterEvent& InCharEvent);
	static struct FEventReply RouteOnAnalogValueChanged(class UWidget* Widget, const struct FGeometry& MyGeometry, const struct FAnalogInputEvent& InAnalogInputEvent);
	static void ResetAllAnimations(class UUserWidget* Widget);
	static void RegisterDisplayComponent(const TScriptInterface<class UDisplayComponentInterface>& DisplayComponent);
	static struct FLinearColor RandomLinearColorFromHsluv(float h_min, float h_max, float s_min, float s_max, float l_min, float l_max);
	static void ListenForKeybindings();
	static struct FLinearColor LinearColorFromHsluv(float H, float S, float L);
	static struct FText Key_GetShortDisplayName(const struct FKey& Key);
	static struct FName Key_GetFName(const struct FKey& Key);
	static bool IsHandled(const struct FEventReply& EventReply);
	static class ATBLPlayerController* GetOwningTBLPlayerController(class UObject* Target);
	static class UTBLLocalPlayer* GetOwningTBLLocalPlayer(class UObject* Target);
	static EUINavigation GetNavigationDirectionFromKey(const struct FKeyEvent& InKeyEvent, bool* bInvalid);
	static EUINavigation GetNavigationDirectionFromAnalog(const struct FAnalogInputEvent& InAnalogEvent, bool* bInvalid);
	static struct FText GetKeyTextFromActionBindingName(const struct FString& ActionName, bool bLongDisplayName, EGamepadInputMode InputMode, class UObject* WorldContextObject, struct FInputActionKeyMapping* ActionMappingOut);
	static struct FKey GetKeyFromButtonCallout(const struct FButtonCallout& Callout, class UWidget* WorldContextObject);
	static struct FKey GetKeyFromAxisBindingName(const struct FString& ActionName, class UObject* WorldContextObject);
	static struct FKey GetKeyFromActionBindingName(const struct FString& ActionName, class UObject* WorldContextObject);
	static struct FKeyDisplayInfo GetKeyDisplayInfoFromTable(const struct FKey& Key, class UDataTable* Table);
	static struct FKey GetGamepadBackButton();
	static struct FKey GetGamepadAcceptButton();
	static TArray<EFaction> GetFactionOrder(EFaction A, EFaction B);
	static struct FText GetFactionName(EFaction Faction);
	static struct FLinearColor GetFactionColor(EFaction Faction, ETeamUIColorType ColorType);
	static TArray<struct FButtonCallout> GetButtonCallouts(class UWidget* Target);
	static void GetAllMapNames(const struct FString& MapPath, TArray<struct FName>* OutAssetNames);
	static void GetAllKeysFromActionBindingName(const struct FString& ActionName, class UObject* WorldContextObject, TArray<struct FKey>* NonGamePad, TArray<struct FKey>* Gamepad);
	static class UTBLScreenManager* GetActiveScreenManagerImpure(class UObject* WorldContextObject);
	static class UTBLScreenManager* GetActiveScreenManager(class UObject* WorldContextObject);
	static struct FInputActionKeyMapping GetActionBindingFromName(const struct FName& ActionName, class UObject* WorldContextObject);
	static void FocusOnBestWidgetOrChild(class UWidget* Widget);
	static void AttemptThrottledOnKilledUIActions(EFrameThrottleBranch* Branches);
	static class UHudMarkerDisplayComponent* AddHudMarkerComponentToActor(class AActor* Actor, EFaction VisibleToFaction, class UClass* /*UHudMarkerDisplayComponent*/ Class, bool bReplicates);
};


// Class TBL.UseItem
// 0x0000 (0x0178 - 0x0178)
class UUseItem : public UAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.UseItem"));
		return ptr;
	}

};


// Class TBL.UserFeedbackAndBugReportsLibrary
// 0x0000 (0x0028 - 0x0028)
class UUserFeedbackAndBugReportsLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.UserFeedbackAndBugReportsLibrary"));
		return ptr;
	}


	static void SubmitUserFeedback(class UObject* WorldContextObject, const struct FUserFeedback& Report, bool bIncludeHardwareInfo);
	static struct FString GetUserHashedID();
	static struct FString GetHardwareInformation();
	static struct FString GetGameInfo(class UWorld* World);
};


// Class TBL.UtilityAI_Behavior
// 0x0050 (0x0078 - 0x0028)
class UUtilityAI_Behavior : public UObject
{
public:
	int                                                Weight;                                                   // 0x0028(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TargetSwitchInertiaPenalty;                               // 0x002C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BehaviorScoreInteria;                                     // 0x0030(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BehaviorActiveActionMultiplier;                           // 0x0034(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LastOrCurrentDuration;                                    // 0x0038(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LastTimeTicked;                                           // 0x003C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FUtilityAI_Consideration>            Considerations;                                           // 0x0040(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UUtilityAI_Action*                           Action;                                                   // 0x0050(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UUtilityAI_TargetGenerator*                  TargetGenerator;                                          // 0x0058(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FDisengageParams                            DisengageParams;                                          // 0x0060(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FName                                       InteriaGroup;                                             // 0x006C(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.UtilityAI_Behavior"));
		return ptr;
	}

};


// Class TBL.UtilityAI_BehaviorSet
// 0x0010 (0x0038 - 0x0028)
class UUtilityAI_BehaviorSet : public UObject
{
public:
	TArray<class UClass* /*UUtilityAI_Behavior*/>      Behaviors;                                                // 0x0028(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.UtilityAI_BehaviorSet"));
		return ptr;
	}

};


// Class TBL.UtilityAI_BlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UUtilityAI_BlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.UtilityAI_BlueprintLibrary"));
		return ptr;
	}


	static EUtilityAI_TargetType GetTargetType(const struct FUtilityAI_Context& C);
	static class UObject* GetTargetObject(const struct FUtilityAI_Context& C);
	static struct FVector GetTargetLocation(const struct FUtilityAI_Context& C);
	static class AActor* GetTargetActor(const struct FUtilityAI_Context& C);
	static class ATBLCharacter* GetOwnerCharacter(const struct FUtilityAI_Context& C);
	static struct FVector GetMoveTargetLocation(const struct FUtilityAI_Context& C);
};


// Class TBL.UtilityAI_DecisionMaker
// 0x0200 (0x0308 - 0x0108)
class UUtilityAI_DecisionMaker : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	TArray<class UClass* /*UUtilityAI_BehaviorSet*/>   BehaviorSets;                                             // 0x0118(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UUtilityAI_Behavior*>                 Behaviors;                                                // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<class UClass* /*UUtilityAI_Behavior*/, class UUtilityAI_Behavior*> BehaviorsByClass;                                         // 0x0138(0x0050) (CPF_NativeAccessSpecifierPublic)
	struct FUtilityAI_Decision                         LastDecision;                                             // 0x0188(0x0038) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FUtilityAI_Decision                         DecisionPendingDisengage;                                 // 0x01C0(0x0038) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	TMap<class UClass* /*UUtilityAI_Behavior*/, float> LastTimeBehaviorChosen;                                   // 0x01F8(0x0050) (CPF_NativeAccessSpecifierPublic)
	EStaggeredUpdateCategory                           UpdateCategory;                                           // 0x0248(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0249(0x0007) MISSED OFFSET
	class UBlackboardData*                             BlackboardAsset;                                          // 0x0250(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsCombatDecisionMaker;                                   // 0x0258(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHasInitialized;                                          // 0x0259(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x6];                                       // 0x025A(0x0006) MISSED OFFSET
	TArray<struct FUtilityAI_Decision>                 LastDecisions;                                            // 0x0260(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0270(0x0008) MISSED OFFSET
	struct FBehaviorSetOverride                        ForcedBehaviorSet;                                        // 0x0278(0x0040) (CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSet<struct FBehaviorSetOverride>                  BehaviorOverrides;                                        // 0x02B8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.UtilityAI_DecisionMaker"));
		return ptr;
	}

};


// Class TBL.UtilityAI_CombatDecisionMaker
// 0x0160 (0x0468 - 0x0308)
class UUtilityAI_CombatDecisionMaker : public UUtilityAI_DecisionMaker
{
public:
	struct FCombatEventBehaviors                       Blocked_BehaviorSet;                                      // 0x0308(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FCombatEventBehaviors                       Thwacked_BehaviorSet;                                     // 0x0320(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FCombatEventBehaviors                       ParrySuccess_BehaviorSet;                                 // 0x0338(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FTimerHandle                                HandleParryTimer;                                         // 0x0350(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FCombatEventBehaviors                       Recovery_BehaviorSet;                                     // 0x0358(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FCombatEventBehaviors                       DamageCaused_BehaviorSet;                                 // 0x0370(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FCombatEventBehaviors                       IncomingAttack_BehaviorSet;                               // 0x0388(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FCombatEventBehaviors                       IncomingShove_BehaviorSet;                                // 0x03A0(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FCombatEventBehaviors                       IncomingCombatStateChange_BehaviorSet;                    // 0x03B8(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x38];                                      // 0x03D0(0x0038) MISSED OFFSET
	bool                                               bShouldRecieveAllCombatStateChanges;                      // 0x0408(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0409(0x0007) MISSED OFFSET
	struct FTimerHandle                                HandleAttackTimer;                                        // 0x0410(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FCombatEventBehaviors                       EnemyBlockedMyHit_BehaviorSet;                            // 0x0418(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FCombatEventBehaviors                       EnemyEnteredCC_BehaviorSet;                               // 0x0430(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FCombatEventBehaviors                       TookDamage_BehaviorSet;                                   // 0x0448(0x0018) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	class ATBLCharacter*                               OverrideDecisionActor;                                    // 0x0460(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.UtilityAI_CombatDecisionMaker"));
		return ptr;
	}


	struct FIncomingAttackInfo GetIncomingAttackInfo();
};


// Class TBL.VaultMarker
// 0x0068 (0x02C0 - 0x0258)
class AVaultMarker : public AActor
{
public:
	class UInteractableComponent*                      Interactable;                                             // 0x0258(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxVaultAngle;                                            // 0x0260(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxVaultDist;                                             // 0x0264(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<EVaultType, struct FName>                     MontageSection;                                           // 0x0268(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	EVaultType                                         VaultType;                                                // 0x02B8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bBothDirections;                                          // 0x02B9(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x02BA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.VaultMarker"));
		return ptr;
	}


	void UsePressed(class APawn* Pawn, class UInteractableComponent* InteractableComponent);
	bool CanVault(class APawn* Pawn);
};


// Class TBL.VelocityCurveMovement
// 0x0040 (0x0090 - 0x0050)
class UVelocityCurveMovement : public UMovementAction
{
public:
	class UCurveVector*                                Curve;                                                    // 0x0050(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              StrengthX;                                                // 0x0058(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              StrengthY;                                                // 0x005C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              Duration;                                                 // 0x0060(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              BlendInTime;                                              // 0x0064(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FPercentOfInitialVelocityToKeep             PercentOfInitialVelocityToKeep;                           // 0x0068(0x000C) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bDoNotGoBelowSprintSpeed : 1;                             // 0x0074(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
	struct FVector                                     InitialVelocity;                                          // 0x0078(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     VelocityToKeep;                                           // 0x0084(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.VelocityCurveMovement"));
		return ptr;
	}

};


// Class TBL.VideoPlayerWidget
// 0x0008 (0x0250 - 0x0248)
class UVideoPlayerWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0248(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.VideoPlayerWidget"));
		return ptr;
	}


	void OnUserLoginDowngraded();
};


// Class TBL.VirtualGoodAnnouncement
// 0x0028 (0x0228 - 0x0200)
class UVirtualGoodAnnouncement : public UVirtualGood
{
public:
	EAnnouncementType                                  AnnouncementType;                                         // 0x0200(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0201(0x0003) MISSED OFFSET
	int                                                RequiredCL;                                               // 0x0204(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bTakeoverInMainMenu;                                      // 0x0208(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0209(0x0007) MISSED OFFSET
	struct FString                                     ContentUrl;                                               // 0x0210(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                DaysToRemainActive;                                       // 0x0220(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                DaysToRemainPrimary;                                      // 0x0224(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.VirtualGoodAnnouncement"));
		return ptr;
	}

};


// Class TBL.VirtualGoodLoadout
// 0x0018 (0x0218 - 0x0200)
class UVirtualGoodLoadout : public UVirtualGood
{
public:
	struct FSoftClassPath                              Loadout;                                                  // 0x0200(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.VirtualGoodLoadout"));
		return ptr;
	}

};


// Class TBL.VirtualGoodLoadoutItem
// 0x0030 (0x0230 - 0x0200)
class UVirtualGoodLoadoutItem : public UVirtualGood
{
public:
	struct FSoftClassPath                              Loadout;                                                  // 0x0200(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FSoftClassPath                              Item;                                                     // 0x0218(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.VirtualGoodLoadoutItem"));
		return ptr;
	}

};


// Class TBL.VirtualGoodTitle
// 0x0000 (0x0200 - 0x0200)
class UVirtualGoodTitle : public UVirtualGood
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.VirtualGoodTitle"));
		return ptr;
	}

};


// Class TBL.VotingInstance
// 0x00E8 (0x01F0 - 0x0108)
class UVotingInstance : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	struct FReplicated_ATBLPayerState                  InstigatorPlayer;                                         // 0x0118(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_Float                           StartTime;                                                // 0x0130(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0148(0x0010) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnVotesReplicated;                                        // 0x0158(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnVoteConcluded;                                          // 0x0168(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    OnAfterVoteTimerFinished;                                 // 0x0178(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FReplicatedArray_FVotingOption              VoteOptions;                                              // 0x0188(0x0020) (CPF_Net, CPF_RepNotify, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              VoteTime;                                                 // 0x01A8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AfterVoteWaitTime;                                        // 0x01AC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET
	struct FReplicated_FName                           CurrentWinningOption;                                     // 0x01B8(0x0018) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FReplicated_UInt8                           bIsVoteFinished;                                          // 0x01D0(0x0018) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bVotesHaveMinimumTime;                                    // 0x01E8(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x01E9(0x0003) MISSED OFFSET
	float                                              MinimumVoteTime;                                          // 0x01EC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.VotingInstance"));
		return ptr;
	}


	void OnRep_VoteOptions();
	bool IsValidForVoter(class ATBLPlayerState* Voter);
	int GetVotesNeededToPass();
	TArray<struct FVotingOption> GetVoteOptions();
	float GetTimeLeft();
	float GetStartTime();
	struct FName GetPlayerVote(class ATBLPlayerState* Voter);
	int GetNumVotesForOption(const struct FName& VoteOption);
	int GetNumberOfVotes();
	bool GetIsVoteFinished();
	class ATBLPlayerState* GetInstigator();
	struct FName GetCurrentWinningOption();
	bool CanVoteOccur(class ATBLPlayerController* InstigatingControlle, const struct FName& VoteOption);
	bool CanPlayerVote(class ATBLPlayerState* Voter, const struct FName& VoteOption);
	bool CanPlayerBeParticipant(class ATBLPlayerState* Voter);
	bool CanHaveMoreThanOneValid();
};


// Class TBL.KickVotingInstance
// 0x0060 (0x0250 - 0x01F0)
class UKickVotingInstance : public UVotingInstance
{
public:
	struct FReplicated_ATBLPayerState                  KickTarget;                                               // 0x01F0(0x0018) (CPF_Net, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       YesOption;                                                // 0x0208(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       NoOption;                                                 // 0x0210(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicated_EFaction                        KickTargetFaction;                                        // 0x0218(0x0018) (CPF_Net, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	EVoteKickType                                      VoteKickType;                                             // 0x0230(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0231(0x0003) MISSED OFFSET
	float                                              VoteKickBanTime;                                          // 0x0234(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                VoteKickMaxPercentageRequired;                            // 0x0238(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                VoteKickMinPercentageRequired;                            // 0x023C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              VoteKickCooldown;                                         // 0x0240(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                VoteKickMinimumPlayers;                                   // 0x0244(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                VoteKickUnanimousPlayerThreshold;                         // 0x0248(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x024C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.KickVotingInstance"));
		return ptr;
	}


	class ATBLPlayerState* GetKickTarget();
};


// Class TBL.VotingManagerComponent
// 0x0098 (0x01A0 - 0x0108)
class UVotingManagerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	struct FReplicatedArray_UVotingInstances           VotingInstances;                                          // 0x0118(0x0020) (CPF_Net, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0138(0x0008) MISSED OFFSET
	struct FMulticastScriptDelegate                    OnVoteFinished;                                           // 0x0140(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TSet<class UClass* /*UVotingInstance*/>            ValidInstances;                                           // 0x0150(0x0050) (CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.VotingManagerComponent"));
		return ptr;
	}


	void VoteFinished(const struct FName& VoteResult);
	void RemoveInstance(class UVotingInstance* VotingInstance);
	int GetNumVoteInstancesForClass(class UClass* /*UVotingInstance*/ VoteClass);
	int GetNumValidInstancesForClass(class UClass* /*UVotingInstance*/ VoteClass, class ATBLPlayerController* VotingController);
	bool CanVoteStart(class ATBLPlayerController* VotingController, const struct FName& VoteOption, class UVotingInstance* VotingInstance);
	void BroadcastVoteFinished(const struct FVotingResults& VoteResults);
};


// Class TBL.WaterActor
// 0x0060 (0x0370 - 0x0310)
class AWaterActor : public ATBLActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0310(0x0008) MISSED OFFSET
	class UStaticMeshComponent*                        StaticMesh;                                               // 0x0318(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ZPlanExtent;                                              // 0x0320(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0324(0x0004) MISSED OFFSET
	TArray<TWeakObjectPtr<class AActor>>               OverlappedActors;                                         // 0x0328(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class ATBLCharacter*>                       DeadCharacters;                                           // 0x0338(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0348(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.WaterActor"));
		return ptr;
	}


	void PerformDeadCharactersIteration();
	void OnWaterOverlapEvent(class AActor* Actor, const struct FVector& Location);
	void OnWaterMeshBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnKilled(const struct FDeathDamageTakenEvent& Event);
};


// Class TBL.WaveSpawnQueuer
// 0x0058 (0x00D8 - 0x0080)
class UWaveSpawnQueuer : public USpawnQueuer
{
public:
	int                                                MinimumRespawnTime;                                       // 0x0080(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                WaveDurationSeconds;                                      // 0x0084(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                RespawnTimeExtension;                                     // 0x0088(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                WaveTimeExtension;                                        // 0x008C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MaxRespawnTime;                                           // 0x0090(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MaxWaveTime;                                              // 0x0094(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ExtensionInterval;                                        // 0x0098(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	TArray<struct FPlayerSpawnPair>                    SpawnQueue;                                               // 0x00A0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x28];                                      // 0x00B0(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.WaveSpawnQueuer"));
		return ptr;
	}

};


// Class TBL.WeaponGroup
// 0x0090 (0x00B8 - 0x0028)
class UWeaponGroup : public UObject
{
public:
	TArray<class UClass* /*AInventoryItem*/>           Items;                                                    // 0x0028(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*AInventoryItem*/>           CanPickupItems;                                           // 0x0038(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<EWeaponTag>                                 ItemWeaponTags;                                           // 0x0048(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<EWeaponTag>                                 RangedItems;                                              // 0x0058(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<EWeaponTag>                                 TwoHandedItems;                                           // 0x0068(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<EWeaponTag>                                 OneHandedItems;                                           // 0x0078(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<EWeaponTag>                                 ShieldItems;                                              // 0x0088(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<EWeaponTag>                                 ThrownItems;                                              // 0x0098(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<EWeaponTag>                                 NoveltyItems;                                             // 0x00A8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.WeaponGroup"));
		return ptr;
	}

};


// Class TBL.WeaponRackComponent
// 0x0060 (0x04C0 - 0x0460)
class UWeaponRackComponent : public UInteractableComponent
{
public:
	struct FMulticastScriptDelegate                    OnWeaponRackUsed;                                         // 0x0460(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UClass* /*AInventoryItem*/                   ItemToGrant;                                              // 0x0470(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass* /*AInventoryItem*/>           ItemsToRefill;                                            // 0x0478(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               RefillAllAmmoItems;                                       // 0x0488(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               UseStackCountFromItem;                                    // 0x0489(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x048A(0x0002) MISSED OFFSET
	int                                                StacksToAdd;                                              // 0x048C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ItemsNowAvailable;                                        // 0x0490(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ItemsAvailableLoopStart;                                  // 0x0498(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ItemsAvailableLoopStop;                                   // 0x04A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ItemsNoLongerAvailable;                                   // 0x04A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkComponent*                                OwningActorAudioComponent;                                // 0x04B0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x04B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.WeaponRackComponent"));
		return ptr;
	}


	void RefillItemsForPawn(class APawn* Pawn);
};


// Class TBL.WeaponTracers
// 0x0148 (0x0170 - 0x0028)
class UWeaponTracers : public UAssemblyInstance
{
public:
	TArray<class UTracerType*>                         TracerList;                                               // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bOnlyParryTracers;                                        // 0x0038(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHasTracerCache;                                          // 0x0039(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bTracerActive;                                            // 0x003A(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x1];                                       // 0x003B(0x0001) MISSED OFFSET
	int                                                TracerFrame;                                              // 0x003C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AActor*>                              ParryActors;                                              // 0x0040(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AActor*>                              HitActorsThisFrame;                                       // 0x0050(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0060(0x0010) MISSED OFFSET
	class UTracerType*                                 CurrentTracers;                                           // 0x0070(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UTracerShape*                                CurrentTracerShape;                                       // 0x0078(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTracerCacheParams                          Params;                                                   // 0x0080(0x00F0) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.WeaponTracers"));
		return ptr;
	}


	void StartWeaponTracers();
	void SetTracerFrame();
	void SaveHitActor(class AActor* HitActor);
	bool IsValid(class AInventoryItem* Weapon);
	void Initialize(class AInventoryItem* Weapon, class UWeaponTracersBlueprint* SourceObj);
	bool IgnoreHitActorWithStats(struct FHitResult* Hit);
	void HandleReleaseClash(class ATBLCharacter* HitChar, struct FHitResult* Hit);
	void HandleHitWorld(class UTracerShape* TracerShape, struct FHitResult* Hit);
	bool HandleHitParry(class ATBLCharacter* HitChar, struct FHitResult* Hit);
	void HandleHitInventoryItem(class AInventoryItem* HitInventoryItem, struct FHitResult* Hit);
	void HandleHitDeadHorse(class AHorse* HitHorse, struct FHitResult* Hit);
	void HandleHitDeadCharacter(class ATBLCharacter* HitChar, struct FHitResult* Hit);
	bool HandleHitCharacter(class ATBLCharacter* HitChar, struct FHitResult* Hit);
	void HandleHitActorWithStats(struct FHitResult* Hit);
	void HandleEarlyHitCharacter(class ATBLCharacter* HitChar, struct FHitResult* Hit);
	void EndWeaponTracers();
	void DrawDebugParryHit(const struct FVector& Loc);
	void DoWeaponTracers();
	void DoTracerCollisionCheck();
	bool DidReleaseClash(struct FHitResult* Hit, class ATBLCharacter** OutCharacter);
	bool DidHitWorld(struct FHitResult* Hit, class ATBLCharacter** OutCharacter);
	bool DidHitParryBox(struct FHitResult* Hit, class ATBLCharacter** OutCharacter);
	bool DidHitInventoryItem(struct FHitResult* Hit, class AInventoryItem** OutInventoryItem);
	bool DidHitDeadHorse(struct FHitResult* Hit, class AHorse** OutHorse);
	bool DidHitDeadCharacter(struct FHitResult* Hit, class ATBLCharacter** OutCharacter);
	bool DidHitCharacter(struct FHitResult* Hit, class ATBLCharacter** OutCharacter);
	bool DidHitActorWithStats(struct FHitResult* Hit, class ATBLCharacter** OutCharacter);
	bool DidHitActor(class AActor* HitActor);
	bool DidHeadShot(struct FHitResult* Hit);
	bool DidEarlyHit(struct FHitResult* Hit, class ATBLCharacter** OutCharacter);
	void CopyPreviousFrame();
	bool CheckTargetVisibility(class AActor* Target);
	void CalcTracerPoints();
	void ActivateAttackTracers();
};


// Class TBL.WeaponTracersBlueprint
// 0x0010 (0x00B8 - 0x00A8)
class UWeaponTracersBlueprint : public UAssemblyBlueprint
{
public:
	TArray<class UTracerType*>                         TracerList;                                               // 0x00A8(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.WeaponTracersBlueprint"));
		return ptr;
	}

};


// Class TBL.WeaponVsWeaponTask
// 0x0000 (0x0060 - 0x0060)
class UWeaponVsWeaponTask : public UKillWithWeaponTask
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.WeaponVsWeaponTask"));
		return ptr;
	}

};


// Class TBL.WeaponVsWeaponWorker
// 0x0000 (0x0110 - 0x0110)
class UWeaponVsWeaponWorker : public UKillWithWeaponWorker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.WeaponVsWeaponWorker"));
		return ptr;
	}

};


// Class TBL.WebImageWidget
// 0x0050 (0x0260 - 0x0210)
class UWebImageWidget : public UImage
{
public:
	struct FString                                     URL;                                                      // 0x0210(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FMulticastScriptDelegate                    WebImageWidgetImageDownloadedDelegate;                    // 0x0220(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0230(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>(_xor_("Class TBL.WebImageWidget"));
		return ptr;
	}


	void WebImageWidgetImageDownloadedDelegate__DelegateSignature(bool bSuccess);
	void SetUrl(const struct FString& InUrl);
	void OnImageDownloaded(bool bSuccess);
};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
